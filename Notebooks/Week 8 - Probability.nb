(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    352889,       7464]
NotebookOptionsPosition[    340857,       7265]
NotebookOutlinePosition[    341259,       7281]
CellTagsIndexPosition[    341216,       7278]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Monte Carlo Simulation ", "Section",
 CellChangeTimes->{{3.9196998043693666`*^9, 
  3.919699808769055*^9}},ExpressionUUID->"52aa2833-1ea5-427d-ba24-\
f5644432423d"],

Cell["\<\
Essentially, a Monte Carlo simulation is just a way to figure out what a \
probability distribution looks like by simulating the random process and \
visualizing/analyzing the resulting distribution. This is the most general \
way to figure out what a distribution looks like, it\[CloseCurlyQuote]s \
essentially fool proof because you\[CloseCurlyQuote]re just simulating the \
process, and it\[CloseCurlyQuote]s really simple in Mathematica. The only \
downsides are that you don\[CloseCurlyQuote]t get an analytical formula for \
the distribution, it can be slow as it requires a lot of samples to yield \
good results, and the results are subject to randomness, and as such you can \
never know the \[OpenCurlyDoubleQuote]true\[CloseCurlyDoubleQuote] answer, \
you can only get arbitrarily close for large sample sizes.

Doing this in Mathematica is very simple, and we actually saw two examples \
last week. First, however, I want to explain the two main functions I use to \
run these simulations\
\>", "Text",
 CellChangeTimes->{{3.9196998269311447`*^9, 3.9197000689537497`*^9}, 
   3.919700151871915*^9},ExpressionUUID->"91378474-24ba-4569-8636-\
cdc4ac05dd56"],

Cell[CellGroupData[{

Cell[TextData[{
 ButtonBox["Table",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Table"],
 " "
}], "Subsection",
 CellChangeTimes->{{3.919700081209819*^9, 3.9197000817078776`*^9}, {
  3.919700138839424*^9, 
  3.919700138839424*^9}},ExpressionUUID->"c4ee7e22-0242-43f4-84ef-\
4e4b27793d5d"],

Cell["\<\
Table is used to create lists of data in Mathematica. It\[CloseCurlyQuote]s a \
bit like using a loop, although it\[CloseCurlyQuote]s only one line and it\
\[CloseCurlyQuote]s more efficient in most cases. You\[CloseCurlyQuote]ve \
probably seen me use it multiple times throughout the class, and it\
\[CloseCurlyQuote]s long-overdue that I properly introduce it\
\>", "Text",
 CellChangeTimes->{{3.9197003043319473`*^9, 
  3.9197003615516124`*^9}},ExpressionUUID->"029fc539-40dc-4989-bb94-\
4d5dc6a3be22"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Here", "'"}], "s", " ", "a", " ", "simple", " ", "example", " ",
      "which", " ", "shows", " ", "how", " ", "you", " ", "can", " ", "use", 
     " ", "it", " ", "to", " ", "make", " ", "a", " ", "list", " ", "that", 
     " ", "ranges", " ", "from", " ", "1", " ", "to", " ", "10", " ", "with", 
     " ", "spaces", " ", "of", " ", "0.5", " ", "between", " ", 
     RowBox[{"jumps", ".", " ", "In"}], " ", "this", " ", "regard"}], ",", 
    " ", 
    RowBox[{"it", " ", "is", " ", "a", " ", "lot", " ", "like", " ", 
     RowBox[{"numpy", "'"}], "s", " ", "linspace", 
     RowBox[{"(", ")"}], " ", "in", " ", "python"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"imin", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"imax", "=", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]i", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{"i", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "imin", ",", "imax", ",", "\[CapitalDelta]i"}], 
      "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9197003803280487`*^9, 3.9197005120402403`*^9}, {
  3.9197005732444887`*^9, 3.919700588467746*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"fa15ce3a-1fdd-4b6f-a6bd-d0bce1630445"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.`", ",", "1.5`", ",", "2.`", ",", "2.5`", ",", "3.`", ",", "3.5`", ",", 
   "4.`", ",", "4.5`", ",", "5.`", ",", "5.5`", ",", "6.`", ",", "6.5`", ",", 
   "7.`", ",", "7.5`", ",", "8.`", ",", "8.5`", ",", "9.`", ",", "9.5`", ",", 
   "10.`"}], "}"}]], "Output",
 CellChangeTimes->{{3.919700409243314*^9, 3.919700425697439*^9}, {
   3.919700508148769*^9, 3.919700513180175*^9}, 3.919700591245434*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"7029077d-7e74-4055-bc13-109a967350b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"If", " ", "you", " ", 
     RowBox[{"don", "'"}], "t", " ", "specify", " ", "a", " ", 
     "\[CapitalDelta]i", " ", "value"}], ",", " ", 
    RowBox[{"it", " ", "defaults", " ", "to", " ", "1"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"imin", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"imax", "=", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]i", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{"i", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "imin", ",", "imax"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{3.9197005183131433`*^9},
 CellLabel->"In[78]:=",ExpressionUUID->"f5a364fe-5185-455b-8c7f-d59e813019cd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{{3.919700514548877*^9, 3.91970051887624*^9}, 
   3.919700593057439*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"b71328f6-11bd-48ac-a9b2-6c564cb6cfe3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "You", " ", "can", " ", "also", " ", "return", " ", "any", " ", 
     "expression", " ", "of", " ", "i"}], ",", " ", 
    RowBox[{"and", " ", "not", " ", "just", " ", "i"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"imin", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"imax", "=", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]i", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     SuperscriptBox["i", "2"], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "imin", ",", "imax"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.919700541343395*^9, 3.91970055301788*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"56aca9a9-f78d-49d2-a504-a1ab311d1d09"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49", ",", 
   "64", ",", "81", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{{3.919700547114304*^9, 3.9197005553025937`*^9}, 
   3.919700595207346*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"0ea7b3f0-67b0-4490-8dea-4f74cc5b13ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "You", " ", "can", " ", "also", " ", "specify", " ", "the", " ", "exact", 
    " ", "value", " ", "that", " ", "i", " ", "will", " ", "take", " ", "on", 
    " ", "by", " ", "giving", " ", "it", " ", "a", " ", "list", " ", 
    "instead", " ", "of", " ", "a", " ", "min", " ", "and", " ", "max"}], " ",
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Table", "[", 
   RowBox[{
    SuperscriptBox["i", "2"], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"{", 
       RowBox[{
       "10", ",", "3", ",", "2", ",", "\[Pi]", ",", "a", ",", "b", ",", "c"}],
        "}"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.919700556524638*^9, 3.9197005590261307`*^9}, {
  3.91970060359851*^9, 
  3.9197006474187546`*^9}},ExpressionUUID->"0e2f72ae-106d-41b9-80a7-\
fbfd39926a9d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"100", ",", "9", ",", "4", ",", 
   SuperscriptBox["\[Pi]", "2"], ",", 
   SuperscriptBox["a", "2"], ",", 
   SuperscriptBox["b", "2"], ",", 
   SuperscriptBox["c", "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.91970064139111*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"963ca7ca-836f-4bdc-af16-f3b6f2ebcdb0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Finally", ",", " ", 
    RowBox[{
     RowBox[{
     "you", " ", "can", " ", "also", " ", "loop", " ", "over", " ", "as", " ",
       "many", " ", "variables", " ", "as", " ", "you", " ", "like", " ", 
      "in", " ", "what", " ", "ever", " ", "manner", " ", "you", " ", "like", 
      " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"as", " ", "lists"}], ",", " ", "ranges", ",", " ", "etc"}], 
       ")"}], " ", "by", " ", "simply", " ", "adding", " ", "another", " ", 
      RowBox[{"variable", ".", " ", "The"}], " ", "result", " ", "will", " ", 
      "be", " ", "an", " ", "n"}], "-", 
     RowBox[{
     "dimensional", " ", "array", " ", "when", " ", "you", " ", "specify", 
      " ", "n"}], "-", "variables"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"matrix", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      SubscriptBox["M", 
       RowBox[{"i", ",", "j"}]], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "10"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"matrix", "//", "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.9197006520870037`*^9, 3.9197007357366934`*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"117f7362-1084-4054-ab72-ffa647dff9bc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["M", 
      RowBox[{"1", ",", "1"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"1", ",", "2"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"1", ",", "3"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"1", ",", "4"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"1", ",", "5"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"1", ",", "6"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"1", ",", "7"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"1", ",", "8"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"1", ",", "9"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"1", ",", "10"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["M", 
      RowBox[{"2", ",", "1"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"2", ",", "2"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"2", ",", "3"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"2", ",", "4"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"2", ",", "5"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"2", ",", "6"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"2", ",", "7"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"2", ",", "8"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"2", ",", "9"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"2", ",", "10"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["M", 
      RowBox[{"3", ",", "1"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"3", ",", "2"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"3", ",", "3"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"3", ",", "4"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"3", ",", "5"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"3", ",", "6"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"3", ",", "7"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"3", ",", "8"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"3", ",", "9"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"3", ",", "10"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["M", 
      RowBox[{"4", ",", "1"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"4", ",", "2"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"4", ",", "3"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"4", ",", "4"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"4", ",", "5"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"4", ",", "6"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"4", ",", "7"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"4", ",", "8"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"4", ",", "9"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"4", ",", "10"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["M", 
      RowBox[{"5", ",", "1"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"5", ",", "2"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"5", ",", "3"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"5", ",", "4"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"5", ",", "5"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"5", ",", "6"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"5", ",", "7"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"5", ",", "8"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"5", ",", "9"}]], ",", 
     SubscriptBox["M", 
      RowBox[{"5", ",", "10"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9197007224160233`*^9, 3.919700735992399*^9}},
 CellLabel->"Out[89]=",ExpressionUUID->"21427ab2-c6c2-45e1-9dcb-076b7611d1e4"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SubscriptBox["M", 
       RowBox[{"1", ",", "1"}]], 
      SubscriptBox["M", 
       RowBox[{"1", ",", "2"}]], 
      SubscriptBox["M", 
       RowBox[{"1", ",", "3"}]], 
      SubscriptBox["M", 
       RowBox[{"1", ",", "4"}]], 
      SubscriptBox["M", 
       RowBox[{"1", ",", "5"}]], 
      SubscriptBox["M", 
       RowBox[{"1", ",", "6"}]], 
      SubscriptBox["M", 
       RowBox[{"1", ",", "7"}]], 
      SubscriptBox["M", 
       RowBox[{"1", ",", "8"}]], 
      SubscriptBox["M", 
       RowBox[{"1", ",", "9"}]], 
      SubscriptBox["M", 
       RowBox[{"1", ",", "10"}]]},
     {
      SubscriptBox["M", 
       RowBox[{"2", ",", "1"}]], 
      SubscriptBox["M", 
       RowBox[{"2", ",", "2"}]], 
      SubscriptBox["M", 
       RowBox[{"2", ",", "3"}]], 
      SubscriptBox["M", 
       RowBox[{"2", ",", "4"}]], 
      SubscriptBox["M", 
       RowBox[{"2", ",", "5"}]], 
      SubscriptBox["M", 
       RowBox[{"2", ",", "6"}]], 
      SubscriptBox["M", 
       RowBox[{"2", ",", "7"}]], 
      SubscriptBox["M", 
       RowBox[{"2", ",", "8"}]], 
      SubscriptBox["M", 
       RowBox[{"2", ",", "9"}]], 
      SubscriptBox["M", 
       RowBox[{"2", ",", "10"}]]},
     {
      SubscriptBox["M", 
       RowBox[{"3", ",", "1"}]], 
      SubscriptBox["M", 
       RowBox[{"3", ",", "2"}]], 
      SubscriptBox["M", 
       RowBox[{"3", ",", "3"}]], 
      SubscriptBox["M", 
       RowBox[{"3", ",", "4"}]], 
      SubscriptBox["M", 
       RowBox[{"3", ",", "5"}]], 
      SubscriptBox["M", 
       RowBox[{"3", ",", "6"}]], 
      SubscriptBox["M", 
       RowBox[{"3", ",", "7"}]], 
      SubscriptBox["M", 
       RowBox[{"3", ",", "8"}]], 
      SubscriptBox["M", 
       RowBox[{"3", ",", "9"}]], 
      SubscriptBox["M", 
       RowBox[{"3", ",", "10"}]]},
     {
      SubscriptBox["M", 
       RowBox[{"4", ",", "1"}]], 
      SubscriptBox["M", 
       RowBox[{"4", ",", "2"}]], 
      SubscriptBox["M", 
       RowBox[{"4", ",", "3"}]], 
      SubscriptBox["M", 
       RowBox[{"4", ",", "4"}]], 
      SubscriptBox["M", 
       RowBox[{"4", ",", "5"}]], 
      SubscriptBox["M", 
       RowBox[{"4", ",", "6"}]], 
      SubscriptBox["M", 
       RowBox[{"4", ",", "7"}]], 
      SubscriptBox["M", 
       RowBox[{"4", ",", "8"}]], 
      SubscriptBox["M", 
       RowBox[{"4", ",", "9"}]], 
      SubscriptBox["M", 
       RowBox[{"4", ",", "10"}]]},
     {
      SubscriptBox["M", 
       RowBox[{"5", ",", "1"}]], 
      SubscriptBox["M", 
       RowBox[{"5", ",", "2"}]], 
      SubscriptBox["M", 
       RowBox[{"5", ",", "3"}]], 
      SubscriptBox["M", 
       RowBox[{"5", ",", "4"}]], 
      SubscriptBox["M", 
       RowBox[{"5", ",", "5"}]], 
      SubscriptBox["M", 
       RowBox[{"5", ",", "6"}]], 
      SubscriptBox["M", 
       RowBox[{"5", ",", "7"}]], 
      SubscriptBox["M", 
       RowBox[{"5", ",", "8"}]], 
      SubscriptBox["M", 
       RowBox[{"5", ",", "9"}]], 
      SubscriptBox["M", 
       RowBox[{"5", ",", "10"}]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.9197007224160233`*^9, 3.9197007360006704`*^9}},
 CellLabel->
  "Out[90]//MatrixForm=",ExpressionUUID->"9031b002-d6a5-4f75-9b21-\
77e202975bbe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Also", " ", "another", " ", "useful", " ", "function", " ", "to", " ", 
     "couple", " ", "this", " ", "with", " ", "in", " ", "some", " ", "cases",
      " ", "is", " ", "flatten"}], ",", " ", 
    RowBox[{
     RowBox[{"which", " ", "can", " ", "turn", " ", "these", " ", "multi"}], 
     "-", 
     RowBox[{
     "dimensional", " ", "lists", " ", "back", " ", "into", " ", "1", "D", 
      " ", 
      RowBox[{"lists", ".", " ", "I"}], " ", "recomend", " ", "reading", " ", 
      "the", " ", "docs", " ", "for", " ", "Flatten"}]}], ",", " ", 
    RowBox[{
     RowBox[{"it", "'"}], "s", " ", "pretty", " ", "simple", " ", "to", " ", 
     "use"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      SubscriptBox["M", 
       RowBox[{"i", ",", "j"}]], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "10"}], "}"}]}], "]"}], ",", "1"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9197007487941756`*^9, 
  3.9197008058893323`*^9}},ExpressionUUID->"67d029c7-a1f7-4e6a-b14d-\
398b835dbe1c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SubscriptBox["M", 
    RowBox[{"1", ",", "1"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"1", ",", "2"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"1", ",", "3"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"1", ",", "4"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"1", ",", "5"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"1", ",", "6"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"1", ",", "7"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"1", ",", "8"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"1", ",", "9"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"1", ",", "10"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"2", ",", "1"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"2", ",", "2"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"2", ",", "3"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"2", ",", "4"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"2", ",", "5"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"2", ",", "6"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"2", ",", "7"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"2", ",", "8"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"2", ",", "9"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"2", ",", "10"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"3", ",", "1"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"3", ",", "2"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"3", ",", "3"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"3", ",", "4"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"3", ",", "5"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"3", ",", "6"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"3", ",", "7"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"3", ",", "8"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"3", ",", "9"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"3", ",", "10"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"4", ",", "1"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"4", ",", "2"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"4", ",", "3"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"4", ",", "4"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"4", ",", "5"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"4", ",", "6"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"4", ",", "7"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"4", ",", "8"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"4", ",", "9"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"4", ",", "10"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"5", ",", "1"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"5", ",", "2"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"5", ",", "3"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"5", ",", "4"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"5", ",", "5"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"5", ",", "6"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"5", ",", "7"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"5", ",", "8"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"5", ",", "9"}]], ",", 
   SubscriptBox["M", 
    RowBox[{"5", ",", "10"}]]}], "}"}]], "Output",
 CellChangeTimes->{3.919700784098394*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"05b7dbee-8562-4fd2-9302-847e4ba6cc8a"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[ButtonBox["RandomVariate",
 BaseStyle->"Link",
 ButtonData->"paclet:ref/RandomVariate"]], "Subsection",
 CellChangeTimes->{{3.919700082840027*^9, 3.9197001033464093`*^9}, {
  3.9197001582611227`*^9, 
  3.9197001582611227`*^9}},ExpressionUUID->"454726fb-869a-4c4c-9e67-\
85ddefabc34a"],

Cell["\<\
This is the function which does the meat of the Monte Carlo simulation for \
you. RandomVariate takes a distribution in Mathematica and generates a random \
number from that distribution. As computers are in-capable of generating \
truly random numbers, it uses a pseudo-random number generator to do this, \
whose seed can be set using SeedRandom[]. This way you will get the same \
results every time you run it after resetting the seed. But the results \
appear random for an arbitrary seed choice. 

Here we randomly sample a single number from a normal distribution with a \
mean of 1 and a standard deviation of 0.1\
\>", "Text",
 CellChangeTimes->{{3.9197008171009936`*^9, 
  3.9197009809525566`*^9}},ExpressionUUID->"333f9b89-c638-4a3d-938b-\
13d1cd12f190"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "12341", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"RandomVariate", "[", 
  RowBox[{"NormalDistribution", "[", 
   RowBox[{"1", ",", "0.1"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.919700916501628*^9, 3.9197009198278403`*^9}, {
  3.9197009506530247`*^9, 3.9197009526434164`*^9}, {3.919700983643531*^9, 
  3.9197009924958706`*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"992fddb8-2ba8-4f79-843d-5d27e41d3127"],

Cell[BoxData["1.1005392883036031`"], "Output",
 CellChangeTimes->{{3.9197009907459364`*^9, 3.9197009964814725`*^9}},
 CellLabel->
  "Out[103]=",ExpressionUUID->"0e0c692a-d04a-477c-a7d9-5c611fa1a4fe"]
}, Open  ]],

Cell["\<\
On its own, this isn\[CloseCurlyQuote]t too useful. What makes it very \
useful, however, is that if you pass it a second parameter you can have it \
generate tons of samples for you at once which you can then plot

Here we generate 10,000 samples and plot them as a histogram\
\>", "Text",
 CellChangeTimes->{{3.919700999136254*^9, 3.9197010580331173`*^9}, {
  3.919701118783558*^9, 
  3.9197011625265703`*^9}},ExpressionUUID->"e772898f-dc8a-4f32-823b-\
755e65fba94c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "12341", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"samples", "=", 
    RowBox[{"RandomVariate", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"1", ",", "0.1"}], "]"}], ",", "10000"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Histogram", "[", 
  RowBox[{"samples", ",", "Automatic", ",", "\"\<PDF\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.919701131088888*^9, 3.9197011734983816`*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"61c07358-1ca8-4f16-b4cf-f5f0e0a4256b"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.581], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.581], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.65, 0}, {0.7, 0.032}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{15.054936918284682`, 38.03298185423341}, {
           94.95013330807848, 97.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.032]& ,
        TagBoxNote->"0.032"],
       StyleBox["0.032`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.032, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.7, 0}, {0.75, 0.092}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{37.53298185423341, 60.5110267901822}, {
           91.8976488857256, 97.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.092]& ,
        TagBoxNote->"0.092"],
       StyleBox["0.092`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.092, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.75, 0}, {0.8, 0.3}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{60.0110267901822, 82.98907172613099}, {
           81.3157028882356, 97.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.3]& ,
        TagBoxNote->"0.3"],
       StyleBox["0.3`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.8, 0}, {0.85, 0.816}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{82.48907172613099, 105.46711666207972`}, {
           55.064336856000814`, 97.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.816]& ,
        TagBoxNote->"0.816"],
       StyleBox["0.816`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.816, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.85, 0}, {0.9, 1.786}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{104.96711666207972`, 127.9451615980285}, {
           5.715838694629198, 97.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1.786]& ,
        TagBoxNote->"1.786"],
       StyleBox["1.786`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1.786, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.9, 0}, {0.95, 2.944}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{127.4451615980285, 
           150.42320653397724`}, {-53.19711065678142, 97.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2.944]& ,
        TagBoxNote->"2.944"],
       StyleBox["2.944`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2.944, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.95, 0}, {1., 3.914}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{149.92320653397724`, 
           172.90125146992602`}, {-102.54560881815304`, 97.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3.914]& ,
        TagBoxNote->"3.914"],
       StyleBox["3.914`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3.914, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1., 0}, {1.05, 3.968}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{172.40125146992602`, 
           195.3792964058748}, {-105.29284479827062`, 97.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3.968]& ,
        TagBoxNote->"3.968"],
       StyleBox["3.968`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3.968, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.05, 0}, {1.1, 2.988}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{194.8792964058748, 
           217.8573413418236}, {-55.43559923317356, 97.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2.988]& ,
        TagBoxNote->"2.988"],
       StyleBox["2.988`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2.988, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.1, 0}, {1.15, 1.784}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{217.3573413418236, 240.33538627777227`}, {
           5.817588175374297, 97.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1.784]& ,
        TagBoxNote->"1.784"],
       StyleBox["1.784`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1.784, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.15, 0}, {1.2, 0.908}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{239.83538627777227`, 262.81343121372106`}, {
           50.38386074172639, 97.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.908]& ,
        TagBoxNote->"0.908"],
       StyleBox["0.908`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.908, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.2, 0}, {1.25, 0.328}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{262.31343121372106`, 285.29147614966985`}, {
           79.89121015780425, 97.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.328]& ,
        TagBoxNote->"0.328"],
       StyleBox["0.328`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.328, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.25, 0}, {1.3, 0.114}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{284.79147614966985`, 307.76952108561863`}, {
           90.77840459752954, 97.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.114]& ,
        TagBoxNote->"0.114"],
       StyleBox["0.114`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.114, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.3, 0}, {1.35, 0.022}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{307.26952108561863`, 330.2475660215674}, {
           95.45888071180396, 97.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.022]& ,
        TagBoxNote->"0.022"],
       StyleBox["0.022`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.022, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.35, 0}, {1.4, 0.004}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{329.7475660215674, 352.7256109575161}, {
           96.37462603850982, 97.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.004]& ,
        TagBoxNote->"0.004"],
       StyleBox["0.004`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.004, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.635, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0.65, 1.4}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.9197011739004087`*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"c7088086-be03-49fb-b051-e11449dec410"]
}, Open  ]],

Cell["\<\
We can see we get the exact normal distribution we expected with mean 1 and \
stdev of 0.1

But we can do much more, for instance we can see what the distribution of a \
transformed variable will look like by transforming all the variable sin our \
list. When someone says they\[CloseCurlyQuote]re squaring a random variable \
for instance, this is what they mean. Then mean they\[CloseCurlyQuote]re \
sampling it from one population and then squaring the result after sampling. \
Obviously this changes the resulting distribution.\
\>", "Text",
 CellChangeTimes->{{3.9197011807636642`*^9, 
  3.9197013009193964`*^9}},ExpressionUUID->"3ae41639-e2c7-4a6d-a157-\
8c5407305282"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "12341", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"samples", "=", 
   RowBox[{
    RowBox[{
     SuperscriptBox["#", "2"], "&"}], "/@", 
    RowBox[{"RandomVariate", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"1", ",", "0.35"}], "]"}], ",", "10000"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Histogram", "[", 
  RowBox[{"samples", ",", "Automatic", ",", "\"\<PDF\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.919701308515012*^9, 3.919701370567458*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"da701743-f150-494c-acc8-1c22bf631118"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.5529999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.5529999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0., 0}, {0.2, 0.267}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{23.234527465722582`, 41.058633461045154`}, {
           11.320754307470125`, 95.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.267]& ,
        TagBoxNote->"0.267"],
       StyleBox["0.267`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.267, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.2, 0}, {0.4, 0.4285}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{40.558633461045154`, 
           58.38273945636773}, {-39.03904107396647, 95.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.4285]& ,
        TagBoxNote->"0.4285"],
       StyleBox["0.4285`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.4285, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.4, 0}, {0.6, 0.5365}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{57.88273945636773, 
           75.7068454516903}, {-72.7161797810572, 95.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.5365]& ,
        TagBoxNote->"0.5365"],
       StyleBox["0.5365`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.5365, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.6, 0}, {0.8, 0.632}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{75.2068454516903, 
           93.03095144701287}, {-102.4955015081606, 95.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.632]& ,
        TagBoxNote->"0.632"],
       StyleBox["0.632`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.632, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.8, 0}, {1., 0.607}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{92.53095144701287, 
           110.35505744233544`}, {-94.69986754818586, 95.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.607]& ,
        TagBoxNote->"0.607"],
       StyleBox["0.607`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.607, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1., 0}, {1.2, 0.546}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{109.85505744233544`, 
           127.679163437658}, {-75.67852068584762, 95.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.546]& ,
        TagBoxNote->"0.546"],
       StyleBox["0.546`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.546, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.2, 0}, {1.4, 0.485}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{127.179163437658, 
           145.00326943298057`}, {-56.65717382350931, 95.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.485]& ,
        TagBoxNote->"0.485"],
       StyleBox["0.485`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.485, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.4, 0}, {1.6, 0.378}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{144.50326943298057`, 
           162.32737542830316`}, {-23.291860474817568`, 95.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.378]& ,
        TagBoxNote->"0.378"],
       StyleBox["0.378`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.378, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.6, 0}, {1.8, 0.3025}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{161.82737542830316`, 179.65148142362574`}, {
           0.25095408430604493`, 95.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.3025]& ,
        TagBoxNote->"0.3025"],
       StyleBox["0.3025`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.3025, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.8, 0}, {2., 0.221}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{179.15148142362574`, 196.9755874189483}, {
           25.66472079382359, 95.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.221]& ,
        TagBoxNote->"0.221"],
       StyleBox["0.221`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.221, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2., 0}, {2.2, 0.1585}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{196.4755874189483, 214.29969341427088`}, {
           45.15380569376036, 95.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.1585]& ,
        TagBoxNote->"0.1585"],
       StyleBox["0.1585`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.1585, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.2, 0}, {2.4, 0.1325}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{213.79969341427088`, 231.62379940959343`}, {
           53.261265012134054`, 95.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.1325]& ,
        TagBoxNote->"0.1325"],
       StyleBox["0.1325`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.1325, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.4, 0}, {2.6, 0.0935}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{231.12379940959343`, 248.947905404916}, {
           65.42245398969459, 95.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0935]& ,
        TagBoxNote->"0.0935"],
       StyleBox["0.0935`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0935, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.6, 0}, {2.8, 0.067}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{248.447905404916, 266.27201140023857`}, {
           73.68582598726778, 95.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.067]& ,
        TagBoxNote->"0.067"],
       StyleBox["0.067`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.067, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.8, 0}, {3., 0.0515}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{265.77201140023857`, 283.5961173955612}, {
           78.5191190424521, 95.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0515]& ,
        TagBoxNote->"0.0515"],
       StyleBox["0.0515`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0515, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3., 0}, {3.2, 0.03}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{283.0961173955612, 300.92022339088373`}, {
           85.22336424803035, 95.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.03]& ,
        TagBoxNote->"0.03"],
       StyleBox["0.03`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.03, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3.2, 0}, {3.4, 0.02}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{300.42022339088373`, 318.2443293862063}, {
           88.34161783202023, 95.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.02]& ,
        TagBoxNote->"0.02"],
       StyleBox["0.02`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.02, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3.4, 0}, {3.6, 0.0175}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{317.7443293862063, 335.5684353815289}, {
           89.1211812280177, 95.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0175]& ,
        TagBoxNote->"0.0175"],
       StyleBox["0.0175`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0175, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3.6, 0}, {3.8, 0.0105}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{335.0684353815289, 352.8925413768514}, {
           91.30395873681063, 95.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0105]& ,
        TagBoxNote->"0.0105"],
       StyleBox["0.0105`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0105, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3.8, 0}, {4., 0.004}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{352.3925413768514, 370.216647372174}, {
           93.33082356640405, 95.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.004]& ,
        TagBoxNote->"0.004"],
       StyleBox["0.004`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.004, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4., 0}, {4.2, 0.005}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{369.716647372174, 387.5407533674966}, {
           93.01899820800506, 95.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.005]& ,
        TagBoxNote->"0.005"],
       StyleBox["0.005`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.005, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4.2, 0}, {4.4, 0.003}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{387.0407533674966, 404.8648593628192}, {
           93.64264892480304, 95.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.003]& ,
        TagBoxNote->"0.003"],
       StyleBox["0.003`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.003, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4.4, 0}, {4.6, 0.002}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{404.3648593628192, 422.1889653581417}, {
           93.95447428320202, 95.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.002]& ,
        TagBoxNote->"0.002"],
       StyleBox["0.002`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.002, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4.8, 0}, {5., 0.001}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{439.0130713534643, 456.83717734878684`}, {
           94.26629964160101, 95.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.001]& ,
        TagBoxNote->"0.001"],
       StyleBox["0.001`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.001, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5., 0}, {5.2, 0.0005}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{456.33717734878684`, 474.16128334410945`}, {
           94.42221232080051, 95.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0005]& ,
        TagBoxNote->"0.0005"],
       StyleBox["0.0005`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0005, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.076, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->NCache[{{0, 
      Rational[19, 5]}, {All, All}}, {{0, 3.8}, {All, All}}],
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9197013279605865`*^9, 3.9197013709941254`*^9}},
 CellLabel->
  "Out[150]=",ExpressionUUID->"648abe52-2959-42e7-acf0-96587f327171"]
}, Open  ]],

Cell["\<\
Here we get a new distribution which is actually the chi-squared distribution \
with df = 1. This is all the chi-squared distribution is btw, it\
\[CloseCurlyQuote]s the distribution you get when you sample a value from a \
normally distributed population and then square it before plotting it. 

Finally, the last thing I want to show you how to simulate is a sampling \
distribution. Here the idea is we take a sample of a distribution, lets say \
with a sample size of 35 for instance. And then you want to know how likely \
you are to get a given mean for your sample. You can simulate this by taking \
the means of a bunch of samples, each sample you can make with \
RandomVariate[]. Here\[CloseCurlyQuote]s and example \
\>", "Text",
 CellChangeTimes->{{3.9197013773834834`*^9, 3.9197015455217113`*^9}, {
  3.9197024441636577`*^9, 
  3.9197024442541156`*^9}},ExpressionUUID->"59240dca-c1cd-4b2f-9a26-\
1381b51dcafa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Define", " ", "any", " ", "distribution", " ", "you", " ", 
     RowBox[{"want", ".", " ", "Here"}], " ", "we", " ", "make", " ", "our", 
     " ", "own"}], ",", " ", 
    RowBox[{
    "but", " ", "you", " ", "could", " ", "also", " ", "use", " ", "a", " ", 
     "built", " ", "in", " ", "one", " ", "like", " ", 
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], " ", "like", " ", "we", " ", 
     "saw", " ", "before"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SeedRandom", "[", "1231", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PopulationDistribution", " ", "=", 
     RowBox[{"ProbabilityDistribution", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sqrt", "[", "2", "]"}], "/", "Pi"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"x", "^", "4"}]}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}]}],
     ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SampleSize", "=", "35"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NumberOfSamples", " ", "=", " ", "1000"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SampleDistData", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Mean", "[", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"PopulationDistribution", ",", "SampleSize"}], "]"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "NumberOfSamples"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Histogram", "[", 
       RowBox[{"SampleDistData", ",", "Automatic", ",", "\"\<PDF\>\""}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"PDF", "[", 
         RowBox[{
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"0", ",", 
            FractionBox["1", 
             SqrtBox["35"]]}], "]"}], ",", "x"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.919701555654701*^9, 3.919701572253474*^9}, {
  3.919701736658327*^9, 3.919701738258794*^9}, {3.9197019015498705`*^9, 
  3.9197020279087873`*^9}, {3.919702185350766*^9, 3.919702246109708*^9}, {
  3.919702514311496*^9, 3.9197025458394184`*^9}},
 CellLabel->
  "In[221]:=",ExpressionUUID->"b07f4b0a-c2cc-41b4-baed-23a9a9c1c40f"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.511], Thickness[Small]}], {}, 
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.511], Thickness[Small]}], RectangleBox[{-0.95, 0}, {-0.9, 0.02},
       RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.55, 0.02},
       RoundingRadius->0], RectangleBox[{-0.55, 0}, {-0.5, 0.04},
       RoundingRadius->0], RectangleBox[{-0.5, 0}, {-0.45, 0.06},
       RoundingRadius->0], RectangleBox[{-0.45, 0}, {-0.4, 0.14},
       RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.35, 0.14},
       RoundingRadius->0], RectangleBox[{-0.35, 0}, {-0.3, 0.34},
       RoundingRadius->0], RectangleBox[{-0.3, 0}, {-0.25, 0.76},
       RoundingRadius->0], RectangleBox[{-0.25, 0}, {-0.2, 0.88},
       RoundingRadius->0], RectangleBox[{-0.2, 0}, {-0.15, 1.34},
       RoundingRadius->0], RectangleBox[{-0.15, 0}, {-0.1, 1.54},
       RoundingRadius->0], RectangleBox[{-0.1, 0}, {-0.05, 2.22},
       RoundingRadius->0], RectangleBox[{-0.05, 0}, {0., 2.62},
       RoundingRadius->0], RectangleBox[{0., 0}, {0.05, 2.42},
       RoundingRadius->0], RectangleBox[{0.05, 0}, {0.1, 2.44},
       RoundingRadius->0], RectangleBox[{0.1, 0}, {0.15, 1.7},
       RoundingRadius->0], RectangleBox[{0.15, 0}, {0.2, 1.34},
       RoundingRadius->0], RectangleBox[{0.2, 0}, {0.25, 0.72},
       RoundingRadius->0], RectangleBox[{0.25, 0}, {0.3, 0.54},
       RoundingRadius->0], RectangleBox[{0.3, 0}, {0.35, 0.34},
       RoundingRadius->0], RectangleBox[{0.35, 0}, {0.4, 0.22},
       RoundingRadius->0], RectangleBox[{0.4, 0}, {0.45, 0.08},
       RoundingRadius->0], RectangleBox[{0.5, 0}, {0.55, 0.02},
       RoundingRadius->0], RectangleBox[{0.6, 0}, {0.65, 0.04},
       RoundingRadius->0], RectangleBox[{0.85, 0}, {0.9, 0.02},
       RoundingRadius->
        0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
   InterpretationBox[{
     TagBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
          Opacity[1.], LineBox[CompressedData["
1:eJw1m3c41W/YwDllJD9JCUVJCImIjPK9j7JFCIkIhYbKVkKSjIaMbNlkZO+R
B1nJ3ptjHMfBOYkKGa/3ut73r+/1uZ7n+9z3c8/r/uM5aflEzwpHQ0PjuYeG
5n+/YnCEvLNDRRdHT5w61/UEe7J+yn99g4oubbgf+4W3w/IKJQRXflPRHeNC
T6EYO0xSSMuSuEBFlPcNJroG9pjMQZ/h1gEq4vX9lZxLcMCe/gh+2thNRT2S
Hy0ZNByxitfxR2raqGiak/lrYJEjdmmjQq/wGxXFRR0n3AxywvDTyy1RuVS0
IpzXefauC/by08690EwqIsyVD1+dcMHqbvzH8D6Vip78Wi3fvOWKKbUKXfGK
oaJrxXaSSuZPMfXi25XWflTEoXJP/7efG6bn15Z1/jYVMXWJP5+59wILVRxR
P2tMRWL6VxOo+7yw3n+kOUEDKqJTzFY4Z+GFGdrt5T+qSUU0PNXaJ9hfYiY3
L8bSyFCRx+BQbmWoNxZ7SF1+Q2JXPjdditGaNzbeZji4IkpF5CD3H3S3X2Hm
lx0Oz/FR0Z4DWY0Vkj7Y3TMZ79pYqEjp0Ixe7eprLHW2RKRpHxV1y5AfsT70
xYjx9c01e6nIx31d9fu0L3b/8OTeog0KKj6syp8x6oc93jriEU2kIBeDpMOv
lwIw1w6fRzbVFFR7yacpJiIQe7fgMrBaRkHn+GTlUtQ+YEkM9xW9CymoATud
+27rA9YKWuyf0inoMJPx7/TyIIwvj/1rdwgFmTgemgpQC8FkWxlOm7/flYdF
daD8EEyLtB605EdBn42+NAFPKPaUd/wuowcFpW41Xr32LxRrD0pjxmwoyPh5
GhN7Xxg28yXS5YcFBYUm+tLi9MKx9eY3k0a3dtez7T8ndYVj/LRPihx1KUil
/MaO7FAE5mYvcyvjIgUVuL03NN8fjQnqNWcdZqWgf6Rs89598dilxxXsSUwU
pHqIqedheTym++bLC3E6CsLV6E1YXEjA3OuCrmtsLKERjVDMm5qAdUve/Pdi
ZgkxyAnx0rslYSRtTav/JpYQ49inuhVCErb1QKEjemgJ2eYkWx+5mowJJZ9M
Lm5fQsqX2wSET6dgHofIGgtlS0j9VEpg/3oqFiI+WvS0cAm98LjTUOWUhqVr
th+nz1lCicKv9178lYZ1vyr4xZu8hGb/KfRJ//6MCa26RRu+X0Iz0g+v5nJn
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
EyYa8nkvXOhHPRbbKYLG3eB+fV1JVrQfvTnQZvqfRzdwEvD35fn60ZhrTohg
QjfobHbkYyz96FjhrZ2fxG6okaRcViX2odP5bl/nXXogIV7Eyii8D73aOlbl
n9ALls+SM9z+9CIk+s3B9NgAbNMvtLkv9qJ4vcu5PUoDEP1R8pfnVC8yDlHV
93o8AN25tfKv2nuR3FUSeNQNwBXixI+3ab3ofMuWOeOjQeC/zk2JNexFjxId
0562DsGsaJgkKulB4nvkR/SKR0HEM5VCyupBg9esskbnR+FxR3EmW2IPqqlr
u5dxfAzW7Pv5rN/2oPTLfOT9AWPAVMpx6D/zHtT18UzkH/NxOKcYvWK8rwf5
5Xo+KWGZhOcG8UV/TLpRfaXkGZ8ZAhz0zLggRtuFXmbkTwyuzoJviVAz699O
VJZ6ll+UnQgblM83VxY70TEzybAYaSJM3U5zLxvsRHQH3KvbXYhQoJhcdzmv
EyWD5V2fDSLo0X3SvnG7EwWP6D3mYSDBaa6TbTTPO9BBf9PXzlJkEL1AFU1d
aUXtAnwvZoYo8EppqbP8aRMqOTzVJvF3Fdj1c4JuctSh+AcZ3ZfiN6BA8G2F
8p46dPRDhi+hcAN01m1mJKi1KMpASvRF8wa8iTspy9RUi5Q6+z6nLG/ANunj
RIVLLaJw00+FXvkHRI/nYtz9NSiwpU1pYvYfPL4WHPlVGKHXl3DXGU5tQfqq
xmIYLUJW658Ou13YgqmovfjHQ9UoL/575KT6FhjOuM4dD6jenXc9L/vbbQE8
M7vgRfqKkvdfCVL4ugWsyWd6L3+uQvi5fT3H9Leh4E/DgWb+CtQc7vefn8sO
BGYm1WHr5ehwStPf2IAdeGj2wrm4rRzdoaw6x8XuAH+j7EiSSzn67+Os5Z26
HQgPy0rzaC5D6+TtSld6GrybVLDCedtS1Pqm3eqXNg3+ssOth3GFRei9m5Lc
334a/HFBuePs/kVoLFUrZf8EDf7fEHvX21tFqCU6rodtjgZfpNhx4RldEYqV
WeFf/0ODFzx4Gad/oxBV4XF8p47Q4pnyTkft+5eP1DOX7w/p0uJTR2bfz/vk
IHeJTXWFalr8sPuR+E/nc1Ds5YtHOepp8SzHVfN0p7IRWeqnwPR3WryLeXp3
OWSjfeY/i3T7aPEqsw843mxkoW8D1dx+C7R4EoWaIGKXgc6e2BpWYcfhuYN4
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
8Bxrxg==
           "]]},
         Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1:eJw1m3c41W/YwDllJD9JCUVJCImIjPK9j7JFCIkIhYbKVkKSjIaMbNlkZO+R
B1nJ3ptjHMfBOYkKGa/3ut73r+/1uZ7n+9z3c8/r/uM5aflEzwpHQ0PjuYeG
5n+/YnCEvLNDRRdHT5w61/UEe7J+yn99g4oubbgf+4W3w/IKJQRXflPRHeNC
T6EYO0xSSMuSuEBFlPcNJroG9pjMQZ/h1gEq4vX9lZxLcMCe/gh+2thNRT2S
Hy0ZNByxitfxR2raqGiak/lrYJEjdmmjQq/wGxXFRR0n3AxywvDTyy1RuVS0
IpzXefauC/by08690EwqIsyVD1+dcMHqbvzH8D6Vip78Wi3fvOWKKbUKXfGK
oaJrxXaSSuZPMfXi25XWflTEoXJP/7efG6bn15Z1/jYVMXWJP5+59wILVRxR
P2tMRWL6VxOo+7yw3n+kOUEDKqJTzFY4Z+GFGdrt5T+qSUU0PNXaJ9hfYiY3
L8bSyFCRx+BQbmWoNxZ7SF1+Q2JXPjdditGaNzbeZji4IkpF5CD3H3S3X2Hm
lx0Oz/FR0Z4DWY0Vkj7Y3TMZ79pYqEjp0Ixe7eprLHW2RKRpHxV1y5AfsT70
xYjx9c01e6nIx31d9fu0L3b/8OTeog0KKj6syp8x6oc93jriEU2kIBeDpMOv
lwIw1w6fRzbVFFR7yacpJiIQe7fgMrBaRkHn+GTlUtQ+YEkM9xW9CymoATud
+27rA9YKWuyf0inoMJPx7/TyIIwvj/1rdwgFmTgemgpQC8FkWxlOm7/flYdF
daD8EEyLtB605EdBn42+NAFPKPaUd/wuowcFpW41Xr32LxRrD0pjxmwoyPh5
GhN7Xxg28yXS5YcFBYUm+tLi9MKx9eY3k0a3dtez7T8ndYVj/LRPihx1KUil
/MaO7FAE5mYvcyvjIgUVuL03NN8fjQnqNWcdZqWgf6Rs89598dilxxXsSUwU
pHqIqedheTym++bLC3E6CsLV6E1YXEjA3OuCrmtsLKERjVDMm5qAdUve/Pdi
ZgkxyAnx0rslYSRtTav/JpYQ49inuhVCErb1QKEjemgJ2eYkWx+5mowJJZ9M
Lm5fQsqX2wSET6dgHofIGgtlS0j9VEpg/3oqFiI+WvS0cAm98LjTUOWUhqVr
th+nz1lCicKv9178lYZ1vyr4xZu8hGb/KfRJ//6MCa26RRu+X0Iz0g+v5nJn
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
EyYa8nkvXOhHPRbbKYLG3eB+fV1JVrQfvTnQZvqfRzdwEvD35fn60ZhrTohg
QjfobHbkYyz96FjhrZ2fxG6okaRcViX2odP5bl/nXXogIV7Eyii8D73aOlbl
n9ALls+SM9z+9CIk+s3B9NgAbNMvtLkv9qJ4vcu5PUoDEP1R8pfnVC8yDlHV
93o8AN25tfKv2nuR3FUSeNQNwBXixI+3ab3ofMuWOeOjQeC/zk2JNexFjxId
0562DsGsaJgkKulB4nvkR/SKR0HEM5VCyupBg9esskbnR+FxR3EmW2IPqqlr
u5dxfAzW7Pv5rN/2oPTLfOT9AWPAVMpx6D/zHtT18UzkH/NxOKcYvWK8rwf5
5Xo+KWGZhOcG8UV/TLpRfaXkGZ8ZAhz0zLggRtuFXmbkTwyuzoJviVAz699O
VJZ6ll+UnQgblM83VxY70TEzybAYaSJM3U5zLxvsRHQH3KvbXYhQoJhcdzmv
EyWD5V2fDSLo0X3SvnG7EwWP6D3mYSDBaa6TbTTPO9BBf9PXzlJkEL1AFU1d
aUXtAnwvZoYo8EppqbP8aRMqOTzVJvF3Fdj1c4JuctSh+AcZ3ZfiN6BA8G2F
8p46dPRDhi+hcAN01m1mJKi1KMpASvRF8wa8iTspy9RUi5Q6+z6nLG/ANunj
RIVLLaJw00+FXvkHRI/nYtz9NSiwpU1pYvYfPL4WHPlVGKHXl3DXGU5tQfqq
xmIYLUJW658Ou13YgqmovfjHQ9UoL/575KT6FhjOuM4dD6jenXc9L/vbbQE8
M7vgRfqKkvdfCVL4ugWsyWd6L3+uQvi5fT3H9Leh4E/DgWb+CtQc7vefn8sO
BGYm1WHr5ehwStPf2IAdeGj2wrm4rRzdoaw6x8XuAH+j7EiSSzn67+Os5Z26
HQgPy0rzaC5D6+TtSld6GrybVLDCedtS1Pqm3eqXNg3+ssOth3GFRei9m5Lc
334a/HFBuePs/kVoLFUrZf8EDf7fEHvX21tFqCU6rodtjgZfpNhx4RldEYqV
WeFf/0ODFzx4Gad/oxBV4XF8p47Q4pnyTkft+5eP1DOX7w/p0uJTR2bfz/vk
IHeJTXWFalr8sPuR+E/nc1Ds5YtHOepp8SzHVfN0p7IRWeqnwPR3WryLeXp3
OWSjfeY/i3T7aPEqsw843mxkoW8D1dx+C7R4EoWaIGKXgc6e2BpWYcfhuYN4
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
8Bxrxg==
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{-1, 1}, {0., 2.3601733810586625`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{-1, 1}, {0., 2.3601733810586625`}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]], 
          Line[CompressedData["
1:eJw1m3c41W/YwDllJD9JCUVJCImIjPK9j7JFCIkIhYbKVkKSjIaMbNlkZO+R
B1nJ3ptjHMfBOYkKGa/3ut73r+/1uZ7n+9z3c8/r/uM5aflEzwpHQ0PjuYeG
5n+/YnCEvLNDRRdHT5w61/UEe7J+yn99g4oubbgf+4W3w/IKJQRXflPRHeNC
T6EYO0xSSMuSuEBFlPcNJroG9pjMQZ/h1gEq4vX9lZxLcMCe/gh+2thNRT2S
Hy0ZNByxitfxR2raqGiak/lrYJEjdmmjQq/wGxXFRR0n3AxywvDTyy1RuVS0
IpzXefauC/by08690EwqIsyVD1+dcMHqbvzH8D6Vip78Wi3fvOWKKbUKXfGK
oaJrxXaSSuZPMfXi25XWflTEoXJP/7efG6bn15Z1/jYVMXWJP5+59wILVRxR
P2tMRWL6VxOo+7yw3n+kOUEDKqJTzFY4Z+GFGdrt5T+qSUU0PNXaJ9hfYiY3
L8bSyFCRx+BQbmWoNxZ7SF1+Q2JXPjdditGaNzbeZji4IkpF5CD3H3S3X2Hm
lx0Oz/FR0Z4DWY0Vkj7Y3TMZ79pYqEjp0Ixe7eprLHW2RKRpHxV1y5AfsT70
xYjx9c01e6nIx31d9fu0L3b/8OTeog0KKj6syp8x6oc93jriEU2kIBeDpMOv
lwIw1w6fRzbVFFR7yacpJiIQe7fgMrBaRkHn+GTlUtQ+YEkM9xW9CymoATud
+27rA9YKWuyf0inoMJPx7/TyIIwvj/1rdwgFmTgemgpQC8FkWxlOm7/flYdF
daD8EEyLtB605EdBn42+NAFPKPaUd/wuowcFpW41Xr32LxRrD0pjxmwoyPh5
GhN7Xxg28yXS5YcFBYUm+tLi9MKx9eY3k0a3dtez7T8ndYVj/LRPihx1KUil
/MaO7FAE5mYvcyvjIgUVuL03NN8fjQnqNWcdZqWgf6Rs89598dilxxXsSUwU
pHqIqedheTym++bLC3E6CsLV6E1YXEjA3OuCrmtsLKERjVDMm5qAdUve/Pdi
ZgkxyAnx0rslYSRtTav/JpYQ49inuhVCErb1QKEjemgJ2eYkWx+5mowJJZ9M
Lm5fQsqX2wSET6dgHofIGgtlS0j9VEpg/3oqFiI+WvS0cAm98LjTUOWUhqVr
th+nz1lCicKv9178lYZ1vyr4xZu8hGb/KfRJ//6MCa26RRu+X0Iz0g+v5nJn
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
EyYa8nkvXOhHPRbbKYLG3eB+fV1JVrQfvTnQZvqfRzdwEvD35fn60ZhrTohg
QjfobHbkYyz96FjhrZ2fxG6okaRcViX2odP5bl/nXXogIV7Eyii8D73aOlbl
n9ALls+SM9z+9CIk+s3B9NgAbNMvtLkv9qJ4vcu5PUoDEP1R8pfnVC8yDlHV
93o8AN25tfKv2nuR3FUSeNQNwBXixI+3ab3ofMuWOeOjQeC/zk2JNexFjxId
0562DsGsaJgkKulB4nvkR/SKR0HEM5VCyupBg9esskbnR+FxR3EmW2IPqqlr
u5dxfAzW7Pv5rN/2oPTLfOT9AWPAVMpx6D/zHtT18UzkH/NxOKcYvWK8rwf5
5Xo+KWGZhOcG8UV/TLpRfaXkGZ8ZAhz0zLggRtuFXmbkTwyuzoJviVAz699O
VJZ6ll+UnQgblM83VxY70TEzybAYaSJM3U5zLxvsRHQH3KvbXYhQoJhcdzmv
EyWD5V2fDSLo0X3SvnG7EwWP6D3mYSDBaa6TbTTPO9BBf9PXzlJkEL1AFU1d
aUXtAnwvZoYo8EppqbP8aRMqOTzVJvF3Fdj1c4JuctSh+AcZ3ZfiN6BA8G2F
8p46dPRDhi+hcAN01m1mJKi1KMpASvRF8wa8iTspy9RUi5Q6+z6nLG/ANunj
RIVLLaJw00+FXvkHRI/nYtz9NSiwpU1pYvYfPL4WHPlVGKHXl3DXGU5tQfqq
xmIYLUJW658Ou13YgqmovfjHQ9UoL/575KT6FhjOuM4dD6jenXc9L/vbbQE8
M7vgRfqKkvdfCVL4ugWsyWd6L3+uQvi5fT3H9Leh4E/DgWb+CtQc7vefn8sO
BGYm1WHr5ehwStPf2IAdeGj2wrm4rRzdoaw6x8XuAH+j7EiSSzn67+Os5Z26
HQgPy0rzaC5D6+TtSld6GrybVLDCedtS1Pqm3eqXNg3+ssOth3GFRei9m5Lc
334a/HFBuePs/kVoLFUrZf8EDf7fEHvX21tFqCU6rodtjgZfpNhx4RldEYqV
WeFf/0ODFzx4Gad/oxBV4XF8p47Q4pnyTkft+5eP1DOX7w/p0uJTR2bfz/vk
IHeJTXWFalr8sPuR+E/nc1Ds5YtHOepp8SzHVfN0p7IRWeqnwPR3WryLeXp3
OWSjfeY/i3T7aPEqsw843mxkoW8D1dx+C7R4EoWaIGKXgc6e2BpWYcfhuYN4
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
8Bxrxg==
           "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{-1, 1}, {0., 2.3601733810586625`}}, 
        "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.675, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->NCache[{{
      Rational[-13, 20], 
      Rational[3, 5]}, {All, All}}, {{-0.65, 0.6}, {All, All}}],
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.919702558073599*^9},
 CellLabel->
  "Out[226]=",ExpressionUUID->"62494769-8417-48d1-822f-ff16a5babb56"]
}, Open  ]],

Cell["\<\
We can see that despite our original distribution not being normally \
distributed, our distribution of sample means is. This is the central limit \
theorem in action, which holds because our sample size of 35 is sufficiently \
large. But this isn\[CloseCurlyQuote]t really a case where Monte Carlo is too \
useful, cause we could just use the CLT instead. But what if our sample size \
was much smaller, like 3 for instance. In that case we get the following \
distribution instead\
\>", "Text",
 CellChangeTimes->{{3.9197023783101053`*^9, 
  3.9197025024543457`*^9}},ExpressionUUID->"5a83bd09-2c3f-493d-b632-\
9186a9e01c05"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "1231", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PopulationDistribution", " ", "=", 
    RowBox[{"ProbabilityDistribution", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Sqrt", "[", "2", "]"}], "/", "Pi"}], "/", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"x", "^", "4"}]}], ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}]}], 
   ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SampleSize", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NumberOfSamples", " ", "=", " ", "1000"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SampleDistData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Mean", "[", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{"PopulationDistribution", ",", "SampleSize"}], "]"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "NumberOfSamples"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Histogram", "[", 
     RowBox[{"SampleDistData", ",", "Automatic", ",", "\"\<PDF\>\""}], "]"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"0", ",", 
          FractionBox["1", 
           SqrtBox["35"]]}], "]"}], ",", "x"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "}"}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.9197025092348814`*^9, 3.919702548464407*^9}},
 CellLabel->
  "In[227]:=",ExpressionUUID->"c9d01d0e-01e6-4865-be28-a0757854398a"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.518], Thickness[Small]}], {}, 
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.518], Thickness[Small]}], RectangleBox[{-3.8, 0}, {-3.6, 0.005},
       RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.4, 0.005},
       RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.2, 0.005},
       RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2., 0.01},
       RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 0.01},
       RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 0.015},
       RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 0.045},
       RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 0.095},
       RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 0.125},
       RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 0.255},
       RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 0.485},
       RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 0.7},
       RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 0.85},
       RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 0.775},
       RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 0.695},
       RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 0.445},
       RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 0.255},
       RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 0.135},
       RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 0.05},
       RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 0.025},
       RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 0.005},
       RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 0.005},
       RoundingRadius->0], RectangleBox[{2.6, 0}, {2.8, 0.005},
       RoundingRadius->
        0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
   InterpretationBox[{
     TagBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
          Opacity[1.], LineBox[CompressedData["
1:eJw1m3c41W/YwDllJD9JCUVJCImIjPK9j7JFCIkIhYbKVkKSjIaMbNlkZO+R
B1nJ3ptjHMfBOYkKGa/3ut73r+/1uZ7n+9z3c8/r/uM5aflEzwpHQ0PjuYeG
5n+/YnCEvLNDRRdHT5w61/UEe7J+yn99g4oubbgf+4W3w/IKJQRXflPRHeNC
T6EYO0xSSMuSuEBFlPcNJroG9pjMQZ/h1gEq4vX9lZxLcMCe/gh+2thNRT2S
Hy0ZNByxitfxR2raqGiak/lrYJEjdmmjQq/wGxXFRR0n3AxywvDTyy1RuVS0
IpzXefauC/by08690EwqIsyVD1+dcMHqbvzH8D6Vip78Wi3fvOWKKbUKXfGK
oaJrxXaSSuZPMfXi25XWflTEoXJP/7efG6bn15Z1/jYVMXWJP5+59wILVRxR
P2tMRWL6VxOo+7yw3n+kOUEDKqJTzFY4Z+GFGdrt5T+qSUU0PNXaJ9hfYiY3
L8bSyFCRx+BQbmWoNxZ7SF1+Q2JXPjdditGaNzbeZji4IkpF5CD3H3S3X2Hm
lx0Oz/FR0Z4DWY0Vkj7Y3TMZ79pYqEjp0Ixe7eprLHW2RKRpHxV1y5AfsT70
xYjx9c01e6nIx31d9fu0L3b/8OTeog0KKj6syp8x6oc93jriEU2kIBeDpMOv
lwIw1w6fRzbVFFR7yacpJiIQe7fgMrBaRkHn+GTlUtQ+YEkM9xW9CymoATud
+27rA9YKWuyf0inoMJPx7/TyIIwvj/1rdwgFmTgemgpQC8FkWxlOm7/flYdF
daD8EEyLtB605EdBn42+NAFPKPaUd/wuowcFpW41Xr32LxRrD0pjxmwoyPh5
GhN7Xxg28yXS5YcFBYUm+tLi9MKx9eY3k0a3dtez7T8ndYVj/LRPihx1KUil
/MaO7FAE5mYvcyvjIgUVuL03NN8fjQnqNWcdZqWgf6Rs89598dilxxXsSUwU
pHqIqedheTym++bLC3E6CsLV6E1YXEjA3OuCrmtsLKERjVDMm5qAdUve/Pdi
ZgkxyAnx0rslYSRtTav/JpYQ49inuhVCErb1QKEjemgJ2eYkWx+5mowJJZ9M
Lm5fQsqX2wSET6dgHofIGgtlS0j9VEpg/3oqFiI+WvS0cAm98LjTUOWUhqVr
th+nz1lCicKv9178lYZ1vyr4xZu8hGb/KfRJ//6MCa26RRu+X0Iz0g+v5nJn
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
EyYa8nkvXOhHPRbbKYLG3eB+fV1JVrQfvTnQZvqfRzdwEvD35fn60ZhrTohg
QjfobHbkYyz96FjhrZ2fxG6okaRcViX2odP5bl/nXXogIV7Eyii8D73aOlbl
n9ALls+SM9z+9CIk+s3B9NgAbNMvtLkv9qJ4vcu5PUoDEP1R8pfnVC8yDlHV
93o8AN25tfKv2nuR3FUSeNQNwBXixI+3ab3ofMuWOeOjQeC/zk2JNexFjxId
0562DsGsaJgkKulB4nvkR/SKR0HEM5VCyupBg9esskbnR+FxR3EmW2IPqqlr
u5dxfAzW7Pv5rN/2oPTLfOT9AWPAVMpx6D/zHtT18UzkH/NxOKcYvWK8rwf5
5Xo+KWGZhOcG8UV/TLpRfaXkGZ8ZAhz0zLggRtuFXmbkTwyuzoJviVAz699O
VJZ6ll+UnQgblM83VxY70TEzybAYaSJM3U5zLxvsRHQH3KvbXYhQoJhcdzmv
EyWD5V2fDSLo0X3SvnG7EwWP6D3mYSDBaa6TbTTPO9BBf9PXzlJkEL1AFU1d
aUXtAnwvZoYo8EppqbP8aRMqOTzVJvF3Fdj1c4JuctSh+AcZ3ZfiN6BA8G2F
8p46dPRDhi+hcAN01m1mJKi1KMpASvRF8wa8iTspy9RUi5Q6+z6nLG/ANunj
RIVLLaJw00+FXvkHRI/nYtz9NSiwpU1pYvYfPL4WHPlVGKHXl3DXGU5tQfqq
xmIYLUJW658Ou13YgqmovfjHQ9UoL/575KT6FhjOuM4dD6jenXc9L/vbbQE8
M7vgRfqKkvdfCVL4ugWsyWd6L3+uQvi5fT3H9Leh4E/DgWb+CtQc7vefn8sO
BGYm1WHr5ehwStPf2IAdeGj2wrm4rRzdoaw6x8XuAH+j7EiSSzn67+Os5Z26
HQgPy0rzaC5D6+TtSld6GrybVLDCedtS1Pqm3eqXNg3+ssOth3GFRei9m5Lc
334a/HFBuePs/kVoLFUrZf8EDf7fEHvX21tFqCU6rodtjgZfpNhx4RldEYqV
WeFf/0ODFzx4Gad/oxBV4XF8p47Q4pnyTkft+5eP1DOX7w/p0uJTR2bfz/vk
IHeJTXWFalr8sPuR+E/nc1Ds5YtHOepp8SzHVfN0p7IRWeqnwPR3WryLeXp3
OWSjfeY/i3T7aPEqsw843mxkoW8D1dx+C7R4EoWaIGKXgc6e2BpWYcfhuYN4
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
8Bxrxg==
           "]]},
         Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1:eJw1m3c41W/YwDllJD9JCUVJCImIjPK9j7JFCIkIhYbKVkKSjIaMbNlkZO+R
B1nJ3ptjHMfBOYkKGa/3ut73r+/1uZ7n+9z3c8/r/uM5aflEzwpHQ0PjuYeG
5n+/YnCEvLNDRRdHT5w61/UEe7J+yn99g4oubbgf+4W3w/IKJQRXflPRHeNC
T6EYO0xSSMuSuEBFlPcNJroG9pjMQZ/h1gEq4vX9lZxLcMCe/gh+2thNRT2S
Hy0ZNByxitfxR2raqGiak/lrYJEjdmmjQq/wGxXFRR0n3AxywvDTyy1RuVS0
IpzXefauC/by08690EwqIsyVD1+dcMHqbvzH8D6Vip78Wi3fvOWKKbUKXfGK
oaJrxXaSSuZPMfXi25XWflTEoXJP/7efG6bn15Z1/jYVMXWJP5+59wILVRxR
P2tMRWL6VxOo+7yw3n+kOUEDKqJTzFY4Z+GFGdrt5T+qSUU0PNXaJ9hfYiY3
L8bSyFCRx+BQbmWoNxZ7SF1+Q2JXPjdditGaNzbeZji4IkpF5CD3H3S3X2Hm
lx0Oz/FR0Z4DWY0Vkj7Y3TMZ79pYqEjp0Ixe7eprLHW2RKRpHxV1y5AfsT70
xYjx9c01e6nIx31d9fu0L3b/8OTeog0KKj6syp8x6oc93jriEU2kIBeDpMOv
lwIw1w6fRzbVFFR7yacpJiIQe7fgMrBaRkHn+GTlUtQ+YEkM9xW9CymoATud
+27rA9YKWuyf0inoMJPx7/TyIIwvj/1rdwgFmTgemgpQC8FkWxlOm7/flYdF
daD8EEyLtB605EdBn42+NAFPKPaUd/wuowcFpW41Xr32LxRrD0pjxmwoyPh5
GhN7Xxg28yXS5YcFBYUm+tLi9MKx9eY3k0a3dtez7T8ndYVj/LRPihx1KUil
/MaO7FAE5mYvcyvjIgUVuL03NN8fjQnqNWcdZqWgf6Rs89598dilxxXsSUwU
pHqIqedheTym++bLC3E6CsLV6E1YXEjA3OuCrmtsLKERjVDMm5qAdUve/Pdi
ZgkxyAnx0rslYSRtTav/JpYQ49inuhVCErb1QKEjemgJ2eYkWx+5mowJJZ9M
Lm5fQsqX2wSET6dgHofIGgtlS0j9VEpg/3oqFiI+WvS0cAm98LjTUOWUhqVr
th+nz1lCicKv9178lYZ1vyr4xZu8hGb/KfRJ//6MCa26RRu+X0Iz0g+v5nJn
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
EyYa8nkvXOhHPRbbKYLG3eB+fV1JVrQfvTnQZvqfRzdwEvD35fn60ZhrTohg
QjfobHbkYyz96FjhrZ2fxG6okaRcViX2odP5bl/nXXogIV7Eyii8D73aOlbl
n9ALls+SM9z+9CIk+s3B9NgAbNMvtLkv9qJ4vcu5PUoDEP1R8pfnVC8yDlHV
93o8AN25tfKv2nuR3FUSeNQNwBXixI+3ab3ofMuWOeOjQeC/zk2JNexFjxId
0562DsGsaJgkKulB4nvkR/SKR0HEM5VCyupBg9esskbnR+FxR3EmW2IPqqlr
u5dxfAzW7Pv5rN/2oPTLfOT9AWPAVMpx6D/zHtT18UzkH/NxOKcYvWK8rwf5
5Xo+KWGZhOcG8UV/TLpRfaXkGZ8ZAhz0zLggRtuFXmbkTwyuzoJviVAz699O
VJZ6ll+UnQgblM83VxY70TEzybAYaSJM3U5zLxvsRHQH3KvbXYhQoJhcdzmv
EyWD5V2fDSLo0X3SvnG7EwWP6D3mYSDBaa6TbTTPO9BBf9PXzlJkEL1AFU1d
aUXtAnwvZoYo8EppqbP8aRMqOTzVJvF3Fdj1c4JuctSh+AcZ3ZfiN6BA8G2F
8p46dPRDhi+hcAN01m1mJKi1KMpASvRF8wa8iTspy9RUi5Q6+z6nLG/ANunj
RIVLLaJw00+FXvkHRI/nYtz9NSiwpU1pYvYfPL4WHPlVGKHXl3DXGU5tQfqq
xmIYLUJW658Ou13YgqmovfjHQ9UoL/575KT6FhjOuM4dD6jenXc9L/vbbQE8
M7vgRfqKkvdfCVL4ugWsyWd6L3+uQvi5fT3H9Leh4E/DgWb+CtQc7vefn8sO
BGYm1WHr5ehwStPf2IAdeGj2wrm4rRzdoaw6x8XuAH+j7EiSSzn67+Os5Z26
HQgPy0rzaC5D6+TtSld6GrybVLDCedtS1Pqm3eqXNg3+ssOth3GFRei9m5Lc
334a/HFBuePs/kVoLFUrZf8EDf7fEHvX21tFqCU6rodtjgZfpNhx4RldEYqV
WeFf/0ODFzx4Gad/oxBV4XF8p47Q4pnyTkft+5eP1DOX7w/p0uJTR2bfz/vk
IHeJTXWFalr8sPuR+E/nc1Ds5YtHOepp8SzHVfN0p7IRWeqnwPR3WryLeXp3
OWSjfeY/i3T7aPEqsw843mxkoW8D1dx+C7R4EoWaIGKXgc6e2BpWYcfhuYN4
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
8Bxrxg==
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{-1, 1}, {0., 2.3601733810586625`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{-1, 1}, {0., 2.3601733810586625`}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]], 
          Line[CompressedData["
1:eJw1m3c41W/YwDllJD9JCUVJCImIjPK9j7JFCIkIhYbKVkKSjIaMbNlkZO+R
B1nJ3ptjHMfBOYkKGa/3ut73r+/1uZ7n+9z3c8/r/uM5aflEzwpHQ0PjuYeG
5n+/YnCEvLNDRRdHT5w61/UEe7J+yn99g4oubbgf+4W3w/IKJQRXflPRHeNC
T6EYO0xSSMuSuEBFlPcNJroG9pjMQZ/h1gEq4vX9lZxLcMCe/gh+2thNRT2S
Hy0ZNByxitfxR2raqGiak/lrYJEjdmmjQq/wGxXFRR0n3AxywvDTyy1RuVS0
IpzXefauC/by08690EwqIsyVD1+dcMHqbvzH8D6Vip78Wi3fvOWKKbUKXfGK
oaJrxXaSSuZPMfXi25XWflTEoXJP/7efG6bn15Z1/jYVMXWJP5+59wILVRxR
P2tMRWL6VxOo+7yw3n+kOUEDKqJTzFY4Z+GFGdrt5T+qSUU0PNXaJ9hfYiY3
L8bSyFCRx+BQbmWoNxZ7SF1+Q2JXPjdditGaNzbeZji4IkpF5CD3H3S3X2Hm
lx0Oz/FR0Z4DWY0Vkj7Y3TMZ79pYqEjp0Ixe7eprLHW2RKRpHxV1y5AfsT70
xYjx9c01e6nIx31d9fu0L3b/8OTeog0KKj6syp8x6oc93jriEU2kIBeDpMOv
lwIw1w6fRzbVFFR7yacpJiIQe7fgMrBaRkHn+GTlUtQ+YEkM9xW9CymoATud
+27rA9YKWuyf0inoMJPx7/TyIIwvj/1rdwgFmTgemgpQC8FkWxlOm7/flYdF
daD8EEyLtB605EdBn42+NAFPKPaUd/wuowcFpW41Xr32LxRrD0pjxmwoyPh5
GhN7Xxg28yXS5YcFBYUm+tLi9MKx9eY3k0a3dtez7T8ndYVj/LRPihx1KUil
/MaO7FAE5mYvcyvjIgUVuL03NN8fjQnqNWcdZqWgf6Rs89598dilxxXsSUwU
pHqIqedheTym++bLC3E6CsLV6E1YXEjA3OuCrmtsLKERjVDMm5qAdUve/Pdi
ZgkxyAnx0rslYSRtTav/JpYQ49inuhVCErb1QKEjemgJ2eYkWx+5mowJJZ9M
Lm5fQsqX2wSET6dgHofIGgtlS0j9VEpg/3oqFiI+WvS0cAm98LjTUOWUhqVr
th+nz1lCicKv9178lYZ1vyr4xZu8hGb/KfRJ//6MCa26RRu+X0Iz0g+v5nJn
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
EyYa8nkvXOhHPRbbKYLG3eB+fV1JVrQfvTnQZvqfRzdwEvD35fn60ZhrTohg
QjfobHbkYyz96FjhrZ2fxG6okaRcViX2odP5bl/nXXogIV7Eyii8D73aOlbl
n9ALls+SM9z+9CIk+s3B9NgAbNMvtLkv9qJ4vcu5PUoDEP1R8pfnVC8yDlHV
93o8AN25tfKv2nuR3FUSeNQNwBXixI+3ab3ofMuWOeOjQeC/zk2JNexFjxId
0562DsGsaJgkKulB4nvkR/SKR0HEM5VCyupBg9esskbnR+FxR3EmW2IPqqlr
u5dxfAzW7Pv5rN/2oPTLfOT9AWPAVMpx6D/zHtT18UzkH/NxOKcYvWK8rwf5
5Xo+KWGZhOcG8UV/TLpRfaXkGZ8ZAhz0zLggRtuFXmbkTwyuzoJviVAz699O
VJZ6ll+UnQgblM83VxY70TEzybAYaSJM3U5zLxvsRHQH3KvbXYhQoJhcdzmv
EyWD5V2fDSLo0X3SvnG7EwWP6D3mYSDBaa6TbTTPO9BBf9PXzlJkEL1AFU1d
aUXtAnwvZoYo8EppqbP8aRMqOTzVJvF3Fdj1c4JuctSh+AcZ3ZfiN6BA8G2F
8p46dPRDhi+hcAN01m1mJKi1KMpASvRF8wa8iTspy9RUi5Q6+z6nLG/ANunj
RIVLLaJw00+FXvkHRI/nYtz9NSiwpU1pYvYfPL4WHPlVGKHXl3DXGU5tQfqq
xmIYLUJW658Ou13YgqmovfjHQ9UoL/575KT6FhjOuM4dD6jenXc9L/vbbQE8
M7vgRfqKkvdfCVL4ugWsyWd6L3+uQvi5fT3H9Leh4E/DgWb+CtQc7vefn8sO
BGYm1WHr5ehwStPf2IAdeGj2wrm4rRzdoaw6x8XuAH+j7EiSSzn67+Os5Z26
HQgPy0rzaC5D6+TtSld6GrybVLDCedtS1Pqm3eqXNg3+ssOth3GFRei9m5Lc
334a/HFBuePs/kVoLFUrZf8EDf7fEHvX21tFqCU6rodtjgZfpNhx4RldEYqV
WeFf/0ODFzx4Gad/oxBV4XF8p47Q4pnyTkft+5eP1DOX7w/p0uJTR2bfz/vk
IHeJTXWFalr8sPuR+E/nc1Ds5YtHOepp8SzHVfN0p7IRWeqnwPR3WryLeXp3
OWSjfeY/i3T7aPEqsw843mxkoW8D1dx+C7R4EoWaIGKXgc6e2BpWYcfhuYN4
C8aPZ6CToeZ1CkdxeB0J3W8hbelIdHiLUfAEDl/mWDC7IZKOhFJfvWwRwuED
1pxEfsymoaX04UaLizi8CG6j8KFJCiKIEPSQKQ5vlizScIIpBanHXQ5utMDh
Q5RM+nvKktHg+qBztRUOv+FbtXbxSDLy+OfN6PUIh/+x/4UCc1ciuv/B+JK6
Ow5Pk52rXfMiEaWcJob2vsDhpbQnbzuJJSLvsBtXdF7h8LFBit6jbxPQs7N5
rznf4PCDIoyBN9/HoTlnw+SFcBwe/+h+Xi35E3pL4apfi8Lh03NbuoXVPiEa
U/O137E4/DOp9xwbuFjUf1/VvSYJhz+KsSVGP41C7W0XeMOycXhvL8dvuP5I
lKeQzcSXh8Mv1PXOPjgfiaxc3NrjCnD4KtUIkYuUcKSdy9VsU4rDm+pyF43c
+YgyhpL6L9Tg8Isrv+Wc60NRX3RdjUwdDu8e3oFYBEIRx5Erf4Xqd/Uf8f6h
SAxGx4bHpUebcHhRz1u6IyrBqFo9SiruOw5fyXthwOlzEOol/bLV+YHDF/3o
brjWFYhoAl2evW7H4XtZfbu8Q96j5I8eyoydOPyKgdxY8fV36CJlTP55Fw4v
ORm/eqw/ADmf5Q6V6MXhdQWu01yL8EflhzioTn04vN0DemZvIz9k9jDVOr0f
h89dtT1FGvZBeWF2sRODOHy7HK/4sdhX6PpFZoPpIRye4tkjr23qjbhY13kG
hnH4/+p9VV4ef4me2f9YrRjB4Y3YnFLuoRcoWQI/EDiKw0fEDle2K3ogtsRL
3/TGcPh+QcUeqXo35BbRXkI/jsMfzv9MjlZ5ihjdRfMyd/n6RRYc7Xdn9Otq
cTY2sRsvDU5cNpqO6Hbaz+y6Xe68NnKurc0OpTQH5l6YxOGPF70Ksk6wRX2f
7uVH73JMsw6STLVBydUvCii7zDnGQ9nOsEQRLtv5kgQc/sx0n1y4qQmKapLJ
td5lQWa7CDEbXdRl+znjzS579Qr1HvumgHpGlxPidln0wNgDurP8IKI58zFp
l/uXveNZ19TgdIbT6/Bd/nnt9K8nDoZwKK3WwW2Xn4eqtDyUMoeMHDZT7V3e
9nwWEy9uBaSFASW2/z3/wRfbHpEHIKOYKdK4q98ewwkFBsEnMKGueeDBLn/j
DfD7xOoA3QapK1u79/UJ57OTCXSCNqsfgy93WYW5yqhrvyt8F1xHv3ftxeBt
oPgw4BnULoZk3tzl5r8UYToGd/j+RSA6e9febx75s8X7eIL3H+ug5V1/pC0H
eXC/9IKuRakPArtsYyNiXbLtDSePVeSY7vpTjc/V+JWCD7SLrfVY7PpbaOyb
to77a8BCO5kMd+OBrGcqQ173A47Uo2Usu/HS8l/mmVLZANDTM5Tq2Y2vrOY/
J3xc34CdTE2bXw8Ob4sFMR7//Q4K4ZFV7W58aq2PbpLPB0LqduUDlQ4cXqxI
eLnU4QOoHdCJqWzD4dc+EhaF1oIgyYUj0KUFhy9net5X5xwKDM6vJcS/4fAJ
Z9l7cvk+wh8vVnumWhzeVye3M7bjI5yfvifXU43D64dP/3ARDodlOb4XZyt2
/XPyap3IWCTw+G2k0O3m74ASEXG8iQK+piKq1m5+V9t4fd0rEw28DptbrzJx
+LfZRWXjQTFQ3BnkW56yGx9yPLkhSnFAlFq5pBmJwzPfKv3yYjkODC41ReDC
dvPNUzfTNi4eONfx25+DcXjzqTq9U+4JoKjOfuTrbj0SE/qrtdWXCMKDXB8P
7taz74W3lfIDUoB0ONDvkQkOf6lB9NvpyRTIbE0rYrqBw+f1ryvGXUgFqXsi
KeF6OHz4eii8nU4FtReL227qOPxdaJa3UvgM9yTO87hewOF3Ws5JcC1nQEfW
RWv1/3B4h9Gt3A+qmZBicevyEAMOT1xqEaOPy4QTcVzNRjgcvpXVSnRFIwuq
1R+znv5Li482jDrdlvIFZCL4zXCTtHjpKdrjL41yQZ77ZmNdDi1erOLG8rmM
XLBOD3jxLZ0WLxiSXT+5ngvtvEeWSpJo8fsTv0gnaOVB8kbCSZdwWvymjtHo
DiUPNOptP93woMWP5eUKI4kCiMhiTilSo8XH25nVK5QWQZzopK/Gbn+MvbUv
J2yiCDoOnjxQ206Dj1QrilhiKAYei3AL0SYafBAv08NPRsWwmMCRQyilwXt1
Fh/cWi+Gyz61pOZIGrzFuf9uV10qhWPfrkK0EQ3+1M/Kdfm6cvh8YKX3U+IO
uLdd8VldKod6Lbbsd4E70J/5gyWHqwLOn3Eet36+A2+sRk6dtK8AHIP7sXH9
Hfg5vKHFwFsJUlP3Msfod6C6QS6px6MK4tccerVttsE4plTDVg4B/8HZyIfH
tkA9eahN26gOpB9lOCrd2gBlLbY9v4uboN2ij266ZBU+3B7wOlfaCjE/Nt5/
0qKC7+IlILa2wn/p6MH6KSp4PkvaiplqhaGTFs8fbVDgcegjNwaWNmgzUd8b
/5kC2k17nMbvtoHa5gGRs3sowCJ+zuYdWzvIlcfGnUCLELjtr0V61AHSBYen
AjXJ0KTN858OWxe4C4fx3KyehcNihCMO3F1Ac+j50ytxs2D+XyrvR8Eu+JXa
ck3DcxY2fohKDcp3wbiOb2Y2Ngui6pdMzO90wZh7w/PWmhkIumKSYVfUBQoP
7hY5tUyDsWyUcrBhN7R3fdrKXiFAGofptULzbhgsi/p8cYAAK394b/Y96Ab2
a3P9xAoCvCtOt+V60Q2qp8Y7wrwJgCTLQhM/d8NPD0VLw0ME4D87QMhf6wb8
hHulpfwkLJ1k9+yO7oEmqovMJYUxkH2eaF+b0gMsrByv8pjHwLv3rFVeTg9w
NQ6xmY6OwhE/lauBdT3Q2N/aauY+Ctii61ENcg8wqapL7kEj8KFkuKRWrheK
D1h612kPg4RmAjVvsBdKe3TuRkcMgHuK6HT8VC8UgEb4n0cD0LhV1h+42At+
J83T/XfnBeO8rq+2NH2QXPaLTvtXP3iz73knJNQHujqZdcY6/dAzYSWU4NoH
R7ICGO4e6QNnpzMWH470g037hvOd791whIlaZXiyH1L5PrSoJXdDWXwB53HR
fnjSs8h8f3fe2WyR6/yi2A8n5jU/35TsBu+TatBi2w8LMTkX/sR1QWD7XR66
b/0QvloxteLdCWlCcUNuTwagRUMvzWi+FdSqLaQvuw1A04uyYYGsVpi/LhC8
7/UA8K8UpN561AqiL76oRUbv7n/qdJNu5QcU9FWUFjcMgPmf2FiZPT+g2nsg
7OexQdAvDEW1F77DwCirnnXzILhw3rKxn2sAjbdWg07dg6BWE+q0UtYAVXIV
Zq9GB0ExY09Iw5sGSAi/8zDh5yDMKMeHGIk3wD2dEp9hziFgbW6uFHevh41v
JqXa94eg1WnP8ev834A7K41bhmkY9loZli1n1UDgzX9JyoeH4RKfe12Dbw3Q
MOoI6x8fBrpuvdfjFjUwc3dd2l5yGArxFm2jnDWQffzqtSzjYVB/4nSW7jAC
LGT55YmsYTi5M92jvlwF5s8uzTFcHYHxvmfkon3lIHK3uY9iOAJXzpLTtVrK
YEVbv77PYgRMOzkYH78tA19+28Rk1xEIFI5SvnygDL50xJhA8giYW50/fZKn
FNYF/nW4bIwA+7x87ZZOMdSx+lWb0o2C/yju1BeuYnj3jy1biXUUKpu+jvVO
FQFvl8gbNsFReCXNxhfiUgQq7sZKObqjEEdZs0lNLoSQ7vKy2fRRGOO5IO9x
qABufVX+3Fo4Cqda936wn84HgfSusMLqUSDelv3UU5gPZR7zDi97R8Fv78mB
MYN8GBfiOstDMwbMy8Y+v+PyQOTF00T9G2Og6/Nf/eGAHPh2RubNN7pxeJZa
W2WXlwFm4vrJywfGQcvbvjn1UQasSdpXnTg6DpxLf887nMkAUfksynOxcfC8
Td/fmp4OH9VOXJe6MQ7BMksKDzM/g7UVA3dq+jgUPBZ6b96cCjT3+aV7CsZB
zp1R/11gKkTbKmrTfh0HHwfur5hBKrQ7Pvcy7RqHzXRnx/MzKSDjTZ1h3xiH
cQeVdDxjCjDGD2T7ak7AIvc1YdZ7SZCUtNpYZDABMzZEl3MXkuBS2sHJqdsT
wNhd+KtpbxLYZWuygdMEBGoyNxglJ8JQJXL5GzsBLY7GWqTZBMgc3O2FlAn4
+H71+9JOHAjuqyKlqE1CGUVJO2NPNPxqEnuQpDUJEzK3n9VWRkG1b+JCvN4k
EII9Kt44RYHhXj9K9K1JoOM4VClCioTXO7qrQXaTkPEvdejpQATM/J7bcY+c
hL028tvsfWGQV2T80u3TJJzevyMfEREG7o5tuKdJk6AYf+VloXEYHF4uoHP8
Mgmj+I2V0qmPcGXRY//9mkkoMdZ73Lrby5OmDnEYkCbBn2P6I9OVEHic6Bup
tzQJlhGyriksISBvvs6l82sSlE3kvRqGg6F7bJxbc3MSuCwjDCOdgoF2KINP
kZUAJWbs5eY5QWDeAWJnZQkwv2HLT+MYCDxVD5Xp/Am7eSR/fPNqABzm2th4
/J4Aeyjb63f++QOzi3/eYAgB9M7FKldk+sOmeOqxL58IQHBYzxJi9ofh5PFl
vcLdui3rofxjyBfC3+rGJYwTwOsUjl40zgcCSRPXmWYIEEU+OWZj7AOvlR/v
c5onQE9Oo85jDh9w2nnjpLpKAPqCO1Xdoa9Az7Feg7JvCv4aHb1XE+YNLCYy
fy9KT0HNm5VUxyovoC9r+JIqPwUSyb+X7vl4wdZhfcsD+CmIPRb2dp+WFyy2
27VNaUzB96wF9rc1L6DlcmZygPkUvJz3yFri9gQ/ER6dgbdTgPfrEHnO+hw8
/bLoFIOngKVLrF+syA1cZuQqM8OnwKW1fQp30w2s4wwFPROnwFHNIXon9Rko
sQVt8pdOQTLH+NPfV58CzQYuw2FqCgiI8Zx8qzOYTw+tvJibgphc78kPr52h
pjUPe784BUtPVnnKwBm84s16P/+ZAvK55eeuJU6wo1SxM8o0DYnxgV7O2Y6w
/cHeUPX8NPD4B7yJRfZg9kwtUV92Gp4UCl06/toeqi1PLFooTINil0KcrqY9
eEq3vXRXnYajnNKTDUN2sDUslJ1vMg3d+9vDzbeewKbA5B5un2nwcHHc+7vN
Fm4dKNUWDpgGsVsda88e2ULV2vuoC4HT8HFH+ZMwiy24/7gorhs5DXX2dkv/
9B7CP7sIY98v0/BQxVXgEPk+bFRq5//snQbisM2hm5o2YJwqsLk1NA3maVQ6
tk1rqAjcVNk/MQ2pN3a26rOt4ZlF5qjA/K58y9C+/w5bwxo9PaPJ1jSY4Kv9
xxfuwl/dr2YNAjMgKCz79GyjJXgP5Y5hZ2ag6/mcHeGFJbBYJN0qOzcDNCFx
qwHyliBo52ecdXEG7kTi/b4UWIB+oK5hsO4MZI4tHZnNNoe8llktU48ZwPdo
nNONMYVLeoOt/d4zMLAg8iRCxBSahlo0dfxnwGWMxf5R5S0YJ+WqXwmdgZIY
Ed8iggkwM7gpC2fMgCXHTjQ/3hjuX2FR+N27K/+7XIkN/gasttBUPR6egXSa
H0v3iIbgpbciT5qYgWrT62a57w0h0mJQdoQ8A/W0Upz/Jgyg8UWSVC3NLOAL
Ds4dDdUHvqoLou9FZ6GS0+LY/nN6kHNFOItechYG88r1vUi6IPfjmIiXzCyo
p6zObSbqgs4wjZDj5Vk4EWpxbptDFzzXWk7dNJqF1cvTAnUHdGBE6vYxAZ9Z
MPNZYvppeBWs16UPvA6YhZqT0uXlc5rw8yvzntnAWVA9y17I7aYJe1UryClR
s3DpUXx/ZLIGiN1kr+DPnQXd85SIPkZ18PL4YcQ/PAuztYN2KxwqwHQ56arP
xCxIymjpkZAyhNE/w8/MzMIfnliy4H1lyPwgKJRCnQVeWdH7T5AS9CS+/HuK
jgjcI9NthW5XQLBRJvzUOSJM0bH+tRFShLw3LG9eSRPhX+J9ja0pPMhfm/WY
lifCWlQnc0wcHq4NhlglKxMhUIBflcCJh6fkJalTJkRILvL4e18SA1xuvdAr
cyKUczqXXy9VgPeOMdzTVkR49q/w+hFMAZI21fYm2xHh08k9Zft1L8EPlpQe
Pl8ijGxNeex5Jw+GPW5N3m+JEBpokrpzXB4mI3Qrp4KIcOzLZ46kQjlY5d1J
SoohgoNt7dE6giwcP2/swJdPBGE3zuBWHRmwu8F6kG+UCNG3oyJknaXAMl08
WoBAhAd1LvBZQAoM1rVPCROJUH3RTU9+4DzIx7yXPveTCG2ckoerFc4D3QST
MbZ3DgIMm0W7OCQh2pou2Vh0DvIe/3VaWBeHd6X8omYSc7DNVFY9+lwcXjAq
FVtcmAO9ShWjlB0xuJvp3XQPPwfxNGqTscxiIE7ZWXDR3+XWcR+fi6JQ77wh
Feo+B4+1XJbX5oSgpJGrOvzlHEjucJo89RGCDA451WjfObDzNnlvxycEgeWu
NxOD5qBw5cGTEsvTcHNr1SM3ZQ6E314f3bcqAFe1DzMUZuyuV+jW1cQIABZ/
PqgkZw4ueXTZNisJAL+iQ9LXsjnIINy5XBrNDxQfauOP1jkYP/aoLMTgFBD6
WHQ6uuaghGvo6DWGU9ArKDbU3T8Hf4U4pGUr+KC82XZhaHIOPD8NJL84xQc+
zOQDpNU5oFO/jrPbcxK4Ps4Y7eUhAaHXdamDzAOyr04cceIjwfuB/J1xKx4w
dDDumT5NgjDV44knprkhRKdT65skCcymZL+xzRwD5v+qLnurkeBG1s5ozzYX
iGz+2VnWIoFn5ezgyzdcoLYg8dXiOgkc9HTWj3Nywevvn2UUzUig/+xgIYMc
J2y/DhWlcSLBGmNdQk3QEeB2bp9/8owETr13fQ+fOQIX7+77POFJAumJpdfc
Tezw9PKLkyiABCEfjl0/u5cdlrcfHPGMJ8EXmmsaEcGHYMb1Ms1mCwkuCNHm
0K+yAs7G4+vDThJ8funYHZ7GCryGZW4jfSS4GNYq+NSYFUylxH5XTJKg17zr
hcS7A9D/k4v87M/u/YZjyzyM/oPVCf3P8/9I0KfAw/+mixkOdXy4e5N2HsL/
KIYQrzKDTjbdhCzzPJQ94RK/r7Efvt9f7vl7ch5aVd/7B9/eByQj0WCb0/NQ
L9vExUVmBHo1G+0B0XkYXzdq/+zCCJcFx5pLZOZh0ijke1kYA1RNNX911pqH
9v1V17+R6SDHJOHzytN5uOrxAYrmcSA1cGqD3nMe2B8cD+oMx0Gl3uerR1/N
gwsx46CaMg6a1XOW8e/nYTuESeR8Gi1My1RdDEycB+Fk+WgbVxp4UAiBiWnz
UGJwuLVFjAZ+in2bLMqahw8Tbyxq2newbYGW1yPF8yD0LGaVu2wb4zw82CHU
Mg8iozshlNRNLO6DCd+ljnl4bfYiokdwExPYP+F0rXceqorfnevN+IdJ4ohc
LuPz4FogK09fsoFp/Vy58+3XPDxa/muiSlzDvFsPrJkeI8PQwdCXT+J/Y4xq
oRr2vGRwHfGr0sd+Yx++HfnkI0CGU6ZrWSPjq1hsBc/lLHEy2MfnMxTxr2Kl
6WferV0hw9vGP5NDdb8wjD93fL86GZjm70pxPP6F1cdLSpzQJoP3VLfvt6O/
sO5wuX5lIzIoKZlG6j5dxhZ9VHlDbcnAEJHvlHzlJ+ZI88MhzZ4M7InhinYr
VGzjuXZDuQsZmMcFCTyWVIzB0eDBpBcZ0ujeXR1VoWB8FneKzoaRQe8PPfMP
0UXshsILteavZLg0pDTIaUnCRn8TD9TVkeF640UdgdU5zDJHe6CyiQydmo+/
/Oc/h9meOG6d20UGuq8/Xa4XEzFv2q+vwmfJ8LdDJHyafxZjrODXDCKTgf+9
ZdR2/Qz23uEd2xsqGfwM8xQrrWewyGmTRI91MhzHdbts50xjOQ0b1Xf/W4CY
1IGlVd0pTMrT0teMbQFk3Ut67m4TsPILLVpGHAsgcG174fIXAlb/OWpU8+QC
MHrE9UowE7ChANkNSekFCB8u4rYvm8D2artI05ougLpfTZOK3Qj2hn58c8Ni
AYp0u60LloexA0i5ftV6AQp0/wu55jyMHT3Hfp1ktwB8X2Md172HMHG2IrsO
nwWw1QhpOVA6gBW1HJP9HrAANjk1p/arD2Dyr17t1AUuwLPSt/7Lo/2Y0qpe
YEnkAlgXzbeaMfVjxv3LWZ++LIDvqZj+MbdebDLwpmNE/gKoBbpJXj/Wi1mp
1soHlyzAiSNVQc5fezC7sqDvPjULkKjsFJtC34P5RovPPexdAI9ZK+X5rC4s
3+wRn/zmAshL3ulKedqOWRb/5EmgXYRthzmzrtE27DCzExc9wyKkX1RJ3brS
hrmUu7F2H1yECKaLFO5jrZj8Yf/t+6cXwU/7odA6+Tu28GD/RofoItxzIFqn
WH3HYmsDf0tLLgI326+6malmbPtx2CKtwiJgjdUzKzNNWN33pOEovUXgslJW
oaVvxBx5Bft3bizu9l9Bg30fGzB+14wuK9NFOHcn4agGfwPmy5/XLHFvEQgt
3601NesxzRdfS757LMJthpYWsYI6rFdqMGQ9fREcw2x9ZEoQ9vqtSeDtnEUg
L9PnnGVF2IWp8YCGwkVQU1aefvCoGov8MOsVXL0Idvz0/z2X+IqZkn89Fu5d
hPXs9wEq4xUYi6LLgw9DiyB9116gSacCq4lYt/o9vgjvm/Zf5mgsx/iUaUxr
5xfhjsXUFWpZGUaM/0/z5s4iyKBYkf+qS7CIP0EqaO8SHOF1qQxXLsHUtA5f
FmBagvdFWSn+HcVY5sZRueXDSxB8cFHbhVyEPTEQOh0gsgRfLkp+kb9YiK0x
XdlTbrAEsc+OnjwBeRgbheVjnfESNDoUD+WM5GJnuob5W28vQQg3c4LEpVzM
LMJBZeL+EhSEJdVK0edg304lBdB5LkFMZK1OXlUWNkr/+OiBV0uwo9oWIC6R
hf2Zl8vi9F+CExwlSgbpmZhQXlfrmZAlULy51WwZl4EFXqJl1Utbgu8H//6Q
Sf+MpZ9oSzDJWoJ5dXrFmHOfsVpclIRV3hKE2i/VqlamYavN564/rViCseQz
2zoDqZixgXl4XPsSrN038sAJp2ACjxH3wp/d83QGfWxEEjFM92326r8lYIRj
JYXdCZiR1A1sm4YCygn78vPdE7A3G5TbB/dTINU0OVE5Kx776Xs8WeYEBcgI
C6eR/oQxPSCfV+SnQNKyXSJNfCx2SqukXkOYArysacXk/bGY4SFtoul5CtAK
KikpU6KxqngPYR9VCnBahczH9ERi/d7qFe+vUmDplMRNh+uRGNWKXTNClwIh
m07l3/siMD7RbNtMEwrEp1Wd/kEIx/zKRnM7n1Dg68yhzh72MEyv6+IFnkgK
1HU5y3vNBGNMF/fXVn2igEAs5ufoHozVpgxr3kqmQHlE6uP8I8HYuafPLGJy
KMAvvmY6ohuEsZwofcfVQAFDebmd89/eY43+vhzlLRToO/ebWYD9PebxyyDJ
qJMCjNkB15cfvMMWG1ZLI0YowOVnfqfp5Fvsu63kNPuv3f/ZTttKVfhjXv20
j4v/UqDsJaw0CvljsviuNf0tCszlnb4SEe2HpR2yY/nISAWZasf/Mv18MZ+K
bDm2E1QQ1jl4t+K1D3aJ36M+n58Kdp6s4cbMPtjK+6vXdEWoMHbI2rEw7BVm
abFwN0iaCiziL5mu53ljeEbhIJarVMCubG4X73mJrdmvHc3RpcKSU1jo6zgv
LHekKVXrBhVy0P17ny56YcdzrSvfWVJhvHual7jmiW0apBCZnlFh24o25JuY
O1aEHO0zPalA8+tqkZzvc+yh8JVNdR8qUNBwjjfBDRveJBwM+EAF/dX90TLJ
z7DS5BMKDGlUyH+zfJWq44o9/o/alJZFBfNfrDMV9S6YoGu1nko+Fb5vL/uV
X3TBPmqY3ntdRYUOsdR5hvPOmMNydOieHiqwSsSu0ik7YiImD44nD1IhXtiS
1qfTASPUy2VcHqfCfaPkhBwzB0wncrD65TwViphe7rR622OMuHT1k9Rdef76
V5I57TH00LW3ZpUKhz4lHV/Is8Nc+lRum29QQUE3PiZc0w77v/d88P/v+f4H
8Bxrxg==
           "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{-1, 1}, {0., 2.3601733810586625`}}, 
        "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-2.096, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->NCache[{{-2, 
      Rational[14, 5]}, {All, All}}, {{-2, 2.8}, {All, All}}],
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.919702574006154*^9},
 CellLabel->
  "Out[232]=",ExpressionUUID->"5618151a-e699-407b-8440-298ac6c74460"]
}, Open  ]],

Cell["\<\
Aha, that\[CloseCurlyQuote]s not normal at all, it\[CloseCurlyQuote]s tails \
are way too thick. And as a result, we could use monte-carlo simulation to \
understand the true distribution when the CLT just doesn\[CloseCurlyQuote]t \
cut it. Pretty slick, and hopefully not that hard to do.\
\>", "Text",
 CellChangeTimes->{{3.9197025926660647`*^9, 
  3.9197026561751003`*^9}},ExpressionUUID->"f38494ac-6b7e-4ca1-81f5-\
1e22d4d77606"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Symbolic Probability", "Section",
 CellChangeTimes->{{3.9196998043693666`*^9, 3.919699808769055*^9}, {
  3.919702662910888*^9, 
  3.9197026713147335`*^9}},ExpressionUUID->"2589084b-a8dd-47c4-a33d-\
ca4b666dd951"],

Cell["\<\
But what if we don\[CloseCurlyQuote]t just want to see the data, what if we \
want an actual symbolic representation of a PDF? Well, Mathematica can do \
that too. And to understand how I want to introduce a few more key functions.\
\>", "Text",
 CellChangeTimes->{{3.919702686459394*^9, 
  3.919702750093048*^9}},ExpressionUUID->"88801404-a728-400b-9e77-\
eeb64c1e18d3"],

Cell[CellGroupData[{

Cell[TextData[ButtonBox["ProbabilityDistribution",
 BaseStyle->"Link",
 ButtonData->"paclet:ref/ProbabilityDistribution"]], "Subsection",
 CellChangeTimes->{{3.919702759355481*^9, 
  3.919702764877491*^9}},ExpressionUUID->"390c59a7-0282-4b00-994e-\
1d3cad4275cd"],

Cell["\<\
This function lets you define your own probability distributions based on any \
arbitrary function of your choice.\
\>", "Text",
 CellChangeTimes->{{3.9197027734135633`*^9, 3.919702820196585*^9}, {
  3.9197029068260965`*^9, 3.9197029131337433`*^9}, {3.9197717305465775`*^9, 
  3.919771753558877*^9}, {3.919784329929034*^9, 
  3.9197843302856703`*^9}},ExpressionUUID->"003572a2-d7a1-48f1-a6c2-\
d39f5bdb4c5c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", 
      RowBox[{"Gamma", "[", 
       FractionBox["5", "4"], "]"}]}]], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      SuperscriptBox["x", "4"]}]]}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Define", " ", "based", " ", "on", " ", "the", " ", "PDF", " ", "of", " ", 
    "the", " ", "distribution"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dist", "=", 
    RowBox[{"ProbabilityDistribution", "[", 
     RowBox[{
      RowBox[{"f", "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SeedRandom", "[", "12341", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Histogram", "[", 
      RowBox[{
       RowBox[{"RandomVariate", "[", 
        RowBox[{"dist", ",", "10000"}], "]"}], ",", "Automatic", ",", 
       "\"\<PDF\>\""}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"f", "[", "x", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.9197029645435286`*^9, 3.9197029645435286`*^9}, {
   3.9197030289860363`*^9, 3.91970306459973*^9}, {3.9197713615315275`*^9, 
   3.919771366981028*^9}, {3.9197714487922845`*^9, 3.919771656168595*^9}, {
   3.9197716864987206`*^9, 3.9197716873637457`*^9}, 3.919771723710209*^9, {
   3.9197717651694107`*^9, 3.9197718244821463`*^9}, {3.919784335223007*^9, 
   3.919784371358263*^9}},
 CellLabel->
  "In[543]:=",ExpressionUUID->"e41d85cc-b3ba-4f02-be81-ab8f1c98afea"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.469], Thickness[Small]}], {}, 
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.469], Thickness[Small]}], RectangleBox[{-1.6, 0}, {-1.5, 0.001},
       RoundingRadius->0], RectangleBox[{-1.5, 0}, {-1.4, 0.009},
       RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.3, 0.025},
       RoundingRadius->0], RectangleBox[{-1.3, 0}, {-1.2, 0.048},
       RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1.1, 0.106},
       RoundingRadius->0], RectangleBox[{-1.1, 0}, {-1., 0.153},
       RoundingRadius->0], RectangleBox[{-1., 0}, {-0.9, 0.252},
       RoundingRadius->0], RectangleBox[{-0.9, 0}, {-0.8, 0.3},
       RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.7, 0.374},
       RoundingRadius->0], RectangleBox[{-0.7, 0}, {-0.6, 0.474},
       RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.5, 0.531},
       RoundingRadius->0], RectangleBox[{-0.5, 0}, {-0.4, 0.523},
       RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.3, 0.556},
       RoundingRadius->0], RectangleBox[{-0.3, 0}, {-0.2, 0.556},
       RoundingRadius->0], RectangleBox[{-0.2, 0}, {-0.1, 0.513},
       RoundingRadius->0], RectangleBox[{-0.1, 0}, {0., 0.532},
       RoundingRadius->0], RectangleBox[{0., 0}, {0.1, 0.554},
       RoundingRadius->0], RectangleBox[{0.1, 0}, {0.2, 0.561},
       RoundingRadius->0], RectangleBox[{0.2, 0}, {0.3, 0.548},
       RoundingRadius->0], RectangleBox[{0.3, 0}, {0.4, 0.496},
       RoundingRadius->0], RectangleBox[{0.4, 0}, {0.5, 0.506},
       RoundingRadius->0], RectangleBox[{0.5, 0}, {0.6, 0.552},
       RoundingRadius->0], RectangleBox[{0.6, 0}, {0.7, 0.484},
       RoundingRadius->0], RectangleBox[{0.7, 0}, {0.8, 0.432},
       RoundingRadius->0], RectangleBox[{0.8, 0}, {0.9, 0.33},
       RoundingRadius->0], RectangleBox[{0.9, 0}, {1., 0.262},
       RoundingRadius->0], RectangleBox[{1., 0}, {1.1, 0.14},
       RoundingRadius->0], RectangleBox[{1.1, 0}, {1.2, 0.098},
       RoundingRadius->0], RectangleBox[{1.2, 0}, {1.3, 0.062},
       RoundingRadius->0], RectangleBox[{1.3, 0}, {1.4, 0.018},
       RoundingRadius->0], RectangleBox[{1.4, 0}, {1.5, 0.004},
       RoundingRadius->
        0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
   InterpretationBox[{
     TagBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
          Opacity[1.], LineBox[CompressedData["
1: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
j2o1hmYk9eZryxRmt3zGVIsDCNlwaKv/waxUq1nI39eECqSHbfdm4YG9K6V2
2L8J9bjIPmbCnLt4ceQCfRPi3FXNOox5jNuIZpe6ERnb2m1cwpwsWHSwpKUB
9YnXBstiNr3w6/AT9wY0JeRCfQPzP9Xg851/69GwU+yz+5hFfOufBf2sQ+Aw
cOkFZmLkvpdy1XXotlGMrwXm5vT7blv2dcjCg1T2ErMm+hz1YLsWuc1pR7ti
FuiXSKcvq0Wspv1qHpi/Tr8urrOuRYvtVV/fYXYnsXXzrdegncmKsiDMKnsN
xoYKatBs+OnlMMycrHk4T7MaRC8wQ4jCXCAm92vlSzW6RBNZlYR54qm5SPFS
FbpzarG/AHPTnOqlqqwq9B7Mx4sxZz24oNBoUoVgDt9ehtlOcfdR749K9I8Q
+qgG88OWRdORsko0eraHrh6z/JUuxyn7ShRlvRrfiPmQaEjo550KFB344W0r
ZnKGXdJ6UwXKufV6sh3z/BGdfKJHBbrW9peri3J/B4910NBXoKyWqwa9mJW2
y3/ys5cjvw3ZA6OYxc1jaAUnytAtdWLfGGauT66sZ+LKUEYUtetHzCsfb4hK
C5Qh8x99uVOY+++JXL6+VIquXdATnsFc0c18UzmrFHk1rMTOYvasmzDQFi1F
rwme9xYwm0g2mBv8KEGEHw8jcZhVC1JePS8rQZqtTf14zHxJJuF2UiWI6l3q
f8uYGc8kyJFJxej71JzwJ8yT/M90aV8Xoz2DvOIrmO1pyIFH/YoQ1XMmni+Y
FYgo++zBIsTkbblLMetn3xaZyELkKH9xchVzUQ8PUSe1AOkGK1t8w+zasMT8
QrAA8VTLCK9hVi4qEHIozEc9uUszFK+EyuqF1eahSQHvU+uU53tL55ACeeiZ
Jh+i2NN+KLioIxfJVqbc+4GZX+dJW89wDjqr815nA/O68um5Sa0cdOK59yjF
DdIE0spcNuIXf39zE7O2gLcIzdcsFBPUz7WF+RTrPQUW6yzksDfYiWICDZc+
PykTcfw2HqG4lYhzFHPNRC3k6FPbmEM/54Zepc5EH4Ue2VNsOPUyX8k3A1U9
JDRRfKb3aocWcwbq2xNLQ8DcU9T/05YnHdknbLpRHJMSxeqZkob2pnNUUfw8
zEA05FQaapcTXKX4vJfQzaSCVCTP+ZCLiJnGYdOgQCIVsRovX6d42LjuVV1N
CurhJppRnKzzNrxbNgXR1TSGUDwdFaNb6JeMjC0tyih2dBYJ+hCZhAKZJIYp
vru+8bE4KxH9Sildo/jUk2r+qOoEROVeRUvCvDv++oVrdzxioHnBS/G4kkLp
k6k4xHNtTZzigkbG34pfY9EU84vrFHudG5Y/uxODAnd31SnWy4wO4GCKQdyG
o08oluTWH9vhjUbU1/ZZU8wYeOLIolgUMjGvdqF4kerbs27ZSMRiRutNcZ1d
aVHRvQik+/ZAMMWhXxzJEYbhSK72WxTFL/Rk5VxswpDRQF0ixXJDe/0ee4ai
v9ci0inmUugdvhUegj6rhuRQPG91/IKeYjCKJ3YUUByoVdIpZBqIxL4ol1As
DTLaxIAApJ4kWU7xt1M9qy2FfuiRSnglxXHMWi5Bgz5IFudSTfHPOeskQTYv
pHtZuI7iB4X+Lc0P3JHXnrJ6io/HuB5cqbdBH9/0NFA8VMC3oKF2E2Xxf/qf
56ZMilPvvgCj6wv/s2PxHZU1Lhdw+6b+P+vTB1LPKXqAj/PT/70f1WXbheu0
78C0Kr6W4vv3V+44LnkDm9bNGorTTHQa8lp8IVs9rIribY8+kflkf2hNsKqg
WCEOYlnc3kMCrq+U4siyMrobekHAHBBdRLHtJ9ar0kdCIKCjPo/iBJvbW5pM
oSDoeCKL4va/73KtdkIhQqE+heI1P2To9zUMjoW8iKOYg/PXf+lT4dD0ii2c
Ytk0icGG7gggzqf6U/z8jLn3x+pI2NL96U5xUF2mzEZWFLjd/G1PcfXNBQJD
VDRQ1fiZUIwb4So4/i4G3N/6PKSY3kDNSMYuFtKvjKpQLP4tgEfLKA4KRFWu
UKzj2DFsrRYP7s/7TlHsSfPP1/9aAqSWSbBQnBcsJZchnggSsdq/KPG+tz25
ge58Eoy5oFmKDX7uu2x2KRksFfkbKX7EWa1rfCQF5I5ej6PYv+QrF3dyClCb
Emwprlbmm+gRSIWvXb+VKF5evh/pmpYK2Ud5eSmW5a5lwWWmwUheUzkln83K
1wZDBdOB9Uer0//y/45A0PXcdOjV/iJFccdn9dtEkQw4ybm2TakfWx4+jNkF
GdAe5ZdLMT9vfbf2mUwYDHDWofh21bo3Y0kmbHx2oKE466smjWV5FmR+fqFA
qVejXn4t/Bey4WhNxzSl3lHxN74ZrsoGD6U/JhSL1W7IvJXKgf0f6zcp9VFX
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
q3uHDOWXA5YIVBbw/36fCf//95n/B0UVH1c=
           "]]},
         Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1:eJw12nc4lf//OHCRjKTMNxKaRpRoqPCUVEZDRkZCqWSTGRKSmb333ntvL5vs
mc05SCnJOKNS+t7nc/1+/3A9rus+59z36zzndZ2jT6zUnlFTUVHFY38o/42K
Q378+0dGKjN90qFx5sC+w3Pq6h8yEuXY1d1DMof2m5l6Dj/JiG1b9bOJmgWc
mq/9sLZBRqek84NEmS3hK9NS+hSejGzMmwLKQq3A2vSCdnkbGc33JHbefWYD
R6tQ0Doio9oX4fuU4m1gZI9yh3ADGa0+TEweGraB87H6EikVZARc/6m/l3sJ
5C4fpsBMMio/ckd+/IQtuJ2cbn7uQ0buJiUuhQz2cNbmKTn1LRnZLlW10yrZ
A65hXWzuDRklP3Yf/utrD/IaNPHqTmTE95PnzzCjA9C+FbWXMyEjteA7cqKc
jvAe5ybMo0JGaN+T0trbryAu/nhYPzMZRcrUBPy55gZ54rGp1Yxk9PbUAdvN
JDeo62AuTd1HRsoZ4RnDf9xg+sevQftdEnJk+5WnW/8GeBSGDvCtk5DweLTD
Qqo7xK+5+ln2kxCD6QTKueYJBR5bMdofSGhhTEt12dETGjhf5Mh3kFDyb7JG
epEnzMqpd3E2kpCeZcm14iNvgTdSmBYVkFAN6YjDf9RekCDz0f3gexKa7E8/
v7n8DgpGVEJ++ZDQQ8OhkYHj3tBg3JK89JaEXObnL8gaecNsaEFTtQsJfX1e
sja+5A1HVjz/GJiRULdXQiL1mg8kBZ11KlEmobtRb6j4uP0hecHX6j4DCSWe
LX4/uBYEhvvpB91pSUjtG0+z8JVgOHbJ50zJHhIqPxxSxOsbDFlB774z/yai
1NyHuM+sIVAk42nW95WInil2rEJFCDTEuxjf6iOi/2pLuSdpw2Bay9JAJpiI
Kjavfrr5OQIS3n5vMg8gotjnwW8vc0WCfrE5X4IPEb3VGjX1UoqExX1mc7/f
EBGDW5/vicJIWK00flhjTUT0Tp8EY5yi4CfbYy1JNSIyibhsmigQA5xD6veE
OYjom6hsTVR1PHAPCE6YsRBRUr/Q5qHteODt29EvOkBEkULfm7+eSYCj3emW
kvuIqCe59ElTdgKINm8HypAJ6PhGssp6YiLIl4T33Z8iIEPNUOOKhGSwChlV
ck4koGzaRLPNrVR4GZQ93BBLQFdUOR9scqaB3XsXnX+RBOTG+CT95NU0cPY9
buIVRECJPz2+nvZKA293W9+gNwS0ckWptowrHRKs2brSHhNQmVX5VrtKBnSr
qiv0niQgbq4UlZ7pLBCJYc1sOEpANGSGm+cZsuH9wjBt0RECOpkhcAp3KRtU
LVW7QjgIqJOZl2U3MhsmA+4oP6AloOH52n5NzRz40nlLFb+8jcyEomUCcblA
LyOtR07fRoE347Y6hAvB1Gun4UvyNiqTmB5NMiyEvt66I9Px28hU/oRnQ3Qh
hOheXmgI30b3Dwl6dO4rAi6ni088326j77wP/Tm/FIFQufiLA0bbSNQp03fy
YQkoCp+0O35sG8WrZ+V43igDPbr1E7p826i0d8DxpFEZWH+qGg/h2UbUcwbR
K+5lEJ2qeGmXdRupfPjc2tZQBivc5r8nabaRE+ujxNUL5eDFWO4e9GkLPe16
LIkXq4CWb3KBv3K2UMuyTs2T81VwpUgva/DsFpIQmAini6uDwvFD4pWnt1B1
39bq6dY6EPjbXhsnuIVmh2bMbb7Wwb7bYv3P+LdQE1Er1+BqPYys/t3eYd5C
k5V1jZ3z9WB6Mvma0PomUmUGvYLTjRCXgJ91L9hEQlzCh87MIfjt/5xNQngT
nXH9ymbd1wpEckakvuAGukEb0PBwpxvaj4Wdb7JYRw0P4+5big7CVdo35aef
rqHIgDeHMv+NQITcpUvXXn9FnVM1lTfZPoJRgvanr8lfUB9R7EvD7CQMZvMx
7IlbQb36kkyd3jNg+L15j13YCpK+p+jyNXgGtiSMfq/4r6ACnY1O+tgZYG/K
/tbnsoIunjm3JpE/A9pj4gMxj1ZQ0AWmKzKDM7BIdT1c/OgKavtcri/EOQsk
HeMjhjmf0MyYVdDd5FngYyo5h6qWUaVky25m0hxYLgvNBhcto6BzrqbTWXPQ
1JDqbZi1jOho9xvSFc/BI4vwmT1Ry+iR2ciqMpqDhAGHdwr2y+ilVIqn08Ic
cIfKTH2QXEbuIU/lLPnmgZ2z132sZAkdpHvT8CFqHp6uXz+dmbOEbnFL1RxK
moeKzoZx+5QltMyXoauaOQ/qjkUi/4UsofUb1bG15fMQNhk6pmO1hDLTysTO
D83DwXhtoQWxJaTmr3iul24BGAVWBlfzFtGJkbu+QTYLMJtA34tLW0RdFewS
Q44LUMh9unMibhFpeabT7ndbAFU264YO/0Xkytgvae6/AFH7fuekmi6ijz/S
N2fTFuDY9wOeOiKL6PqxFknnkQW4Wnfh/IdcPNIZNwx5yIkDpkvaZ5tT8eiD
/sdoFm4czJc7i1TH4lHF6X+G7Ydx4FmIBDL98OjB/S5ZgaM46E5ROuBhgke6
0Xc0S0/jQMPn0YqUMB7NKzw3uCKHA3ONdzE5OTj0GI7+2H6Og9TdOkmRVBzq
D4vyO2KCg485GwP5sTjk27nPU8EMB3J/H9IW++NQF8damL8VDtizJF5WmuNQ
6d9sA7IjDhrJCyqt4jh04ZIGlaYvDngv2u9W2ywgLQ/216ezceDtjztf/2QB
2VI34GlycbAxr2LWpL6ARHxeTkzl4aDd59hk+4UFdOtmnatbEQ4spgZLh3/N
o3b23Lm8Shw0uYo8++Yxj27Fx9qGtuHAsG2hly9sDr3+RPcjdQ4Ht2R+Ppvz
mEPVLf+p3l/AwZnqQ1QJNnMoRlSSYxeHgz95185z359D+aIBY/eWcRATlp7A
dmgOXUqYfT72FQdDj40t6INmUXzwvnEjMg6uUf1g3vKbQeclpXrzmfEg5EyX
W/JqBjldoGZnOoSHQwT+61YmM4haZIjBlAUP859VHdcUZ5AiXREtPzsenAfL
FlboZlASB8HNghsPZUkOJTPvptE+7n2uScfxcExm936HxxQyGI1vNbyIhyEW
GdHYl1NoDs0/eXEJD24rLvssjKaQ2pFJaUspPEwH/6pjvzGF2IOeZNpdwUP4
IuH4U/opFNFCcjWXxcNe329E6uBJpO51boXhJvZ5eiJDH99MIiG1NSoSZsNz
Jnl51pMIuR6wxd3CQ8P0ir6a2iQK27f0tEQJD/Zii12pHJPosv6zMuk7eFgZ
mYyVS5hA3PjyYHoNPERk/2fHHjiBck9f/juNWd71wd0vryeQgrDtQr4mHpJO
jlGHGEyg3ROKDEpaeNByGjRbODaB1gpFT9ro4qH7SKeMW+5HJKPawuJsiIfc
F+X4+qpxtGT7TsbFDA9jT5L5VbLGkcTen6Zi5nigehTwaDpyHLWsqO2fx/zg
vtHUT7tx9JgmqvCKJR6or7ANX5AcR3V9nyrx1njQ3W/bXFw8huwIXU1f7PHw
jtZgVzZ5DAnyWh5964CHkn/K0gNBY6iOdpib1xEP+wjHatYsxlDmlO6YkhN2
XrMjxcKi2OtNeAsinPHAWCSRnJ4ziloS76FVNzxcyOGbk4gZReFzOBfLN9h5
pjEebvUZRdLHpn5sYq6KWozCPR9F7eYy+4jueHjyJizoyMlRNLIuf2rNEw91
qluvo1NHEEuH1u9kbzyYbpfqBcQNo2tb2UunA/EQe3HzqrH/MPogRVfth7n7
lfjh687DiORV7r+C+SRV8dRvnWEkmfrflcQgPOCYCh6Ycg+jYEBfd4PxoHkq
S1UpZgjJvXHhjQzDg5fJp7MnfYeQ3nPG7iXMZQUnDu5xGkL05LHgc+FY/Eqm
99doDaGmihXnHsy9kKIs9N8QOmxwZn0zAg8eZef9mEUHUVw1QxNXNBbfUuW3
OvcPImHPr0QdzNLo3D63bwNop8LzaRxmUu+Zt9/zBtDPQwprXDF4MP8k9LpP
eADp/ksZYYrFgzbXERt/wX40OWyvOxyHnVdS/Fl5un7k5iNUvy8eD2wnedZ/
rfQhRZ/3ZlcxD5z7z8wkqw+t4Kxb0jBfV2F5pniyDxG/BJmZJODhjButzr7j
vUjjGxfNZCIeeOqGor/s7UU6Vd/OUSXhgZYU/7FnpQf1K8bNCGKetZDQCM7r
QX0P+DPsMfs/MrjHJdGDKq5FCu9PxsNn6dobItc+oLqdcCr+FDyMOHl5MR3/
gK5Z0D8FzE0V99rW935Ax1qPaBhgjhJdkSvv7kZCHjbziZgVeNmkpVW7UYn4
s1qOVDyk7JhL3DXoQgk/C2w2Mb+/JGUjfq0LFZFwvPvT8OBoS1PCerwL6XyH
Zycw3/0WKzax0om0W+yHNTH/ne4UMrTsRJH4q5IVmL9whhnLq3YiZ1mVpR7M
Y2qPsk5IdKIsKnUpPOaCnu3jq8QO5BbJM86UjuVDnQD/y9cdiLf027YB5puk
b480DDrQlTKhFVvM5ySqEy5e60AaR2a8fDDT593h2dnbgRYabvYWYq6Kdebw
et+ORAXcI0mY2V6N7Y+Kb0PPrgd8epWBh5//frH8cG5D5dHyd/wxz3vzcynq
tiFeV22jOMw5EaYnfnO1oasB80m1mGVLqGT0o1qRy9lsawLmE5dOXa+2b0UJ
rWUvqDPxwNCkonRIsxUdvWr+3yHMY71Rmq1srUjk73qCCGaTz6KWp0JbkHzG
jpEe5ruWanZvrFtQUpKy2AvM54mOzpP3WlBJ88lKW8y71G3e/swtSIx8Z68/
5gg+neT1gGbUezm1rhyzc6Zb5i2zZnT8U0xYI2YD0Yz8FOVmRBPoJ96FWeTK
j2o1hmYk9eZryxRmt3zGVIsDCNlwaKv/waxUq1nI39eECqSHbfdm4YG9K6V2
2L8J9bjIPmbCnLt4ceQCfRPi3FXNOox5jNuIZpe6ERnb2m1cwpwsWHSwpKUB
9YnXBstiNr3w6/AT9wY0JeRCfQPzP9Xg851/69GwU+yz+5hFfOufBf2sQ+Aw
cOkFZmLkvpdy1XXotlGMrwXm5vT7blv2dcjCg1T2ErMm+hz1YLsWuc1pR7ti
FuiXSKcvq0Wspv1qHpi/Tr8urrOuRYvtVV/fYXYnsXXzrdegncmKsiDMKnsN
xoYKatBs+OnlMMycrHk4T7MaRC8wQ4jCXCAm92vlSzW6RBNZlYR54qm5SPFS
FbpzarG/AHPTnOqlqqwq9B7Mx4sxZz24oNBoUoVgDt9ehtlOcfdR749K9I8Q
+qgG88OWRdORsko0eraHrh6z/JUuxyn7ShRlvRrfiPmQaEjo550KFB344W0r
ZnKGXdJ6UwXKufV6sh3z/BGdfKJHBbrW9peri3J/B4910NBXoKyWqwa9mJW2
y3/ys5cjvw3ZA6OYxc1jaAUnytAtdWLfGGauT66sZ+LKUEYUtetHzCsfb4hK
C5Qh8x99uVOY+++JXL6+VIquXdATnsFc0c18UzmrFHk1rMTOYvasmzDQFi1F
rwme9xYwm0g2mBv8KEGEHw8jcZhVC1JePS8rQZqtTf14zHxJJuF2UiWI6l3q
f8uYGc8kyJFJxej71JzwJ8yT/M90aV8Xoz2DvOIrmO1pyIFH/YoQ1XMmni+Y
FYgo++zBIsTkbblLMetn3xaZyELkKH9xchVzUQ8PUSe1AOkGK1t8w+zasMT8
QrAA8VTLCK9hVi4qEHIozEc9uUszFK+EyuqF1eahSQHvU+uU53tL55ACeeiZ
Jh+i2NN+KLioIxfJVqbc+4GZX+dJW89wDjqr815nA/O68um5Sa0cdOK59yjF
DdIE0spcNuIXf39zE7O2gLcIzdcsFBPUz7WF+RTrPQUW6yzksDfYiWICDZc+
PykTcfw2HqG4lYhzFHPNRC3k6FPbmEM/54Zepc5EH4Ue2VNsOPUyX8k3A1U9
JDRRfKb3aocWcwbq2xNLQ8DcU9T/05YnHdknbLpRHJMSxeqZkob2pnNUUfw8
zEA05FQaapcTXKX4vJfQzaSCVCTP+ZCLiJnGYdOgQCIVsRovX6d42LjuVV1N
CurhJppRnKzzNrxbNgXR1TSGUDwdFaNb6JeMjC0tyih2dBYJ+hCZhAKZJIYp
vru+8bE4KxH9Sildo/jUk2r+qOoEROVeRUvCvDv++oVrdzxioHnBS/G4kkLp
k6k4xHNtTZzigkbG34pfY9EU84vrFHudG5Y/uxODAnd31SnWy4wO4GCKQdyG
o08oluTWH9vhjUbU1/ZZU8wYeOLIolgUMjGvdqF4kerbs27ZSMRiRutNcZ1d
aVHRvQik+/ZAMMWhXxzJEYbhSK72WxTFL/Rk5VxswpDRQF0ixXJDe/0ee4ai
v9ci0inmUugdvhUegj6rhuRQPG91/IKeYjCKJ3YUUByoVdIpZBqIxL4ol1As
DTLaxIAApJ4kWU7xt1M9qy2FfuiRSnglxXHMWi5Bgz5IFudSTfHPOeskQTYv
pHtZuI7iB4X+Lc0P3JHXnrJ6io/HuB5cqbdBH9/0NFA8VMC3oKF2E2Xxf/qf
56ZMilPvvgCj6wv/s2PxHZU1Lhdw+6b+P+vTB1LPKXqAj/PT/70f1WXbheu0
78C0Kr6W4vv3V+44LnkDm9bNGorTTHQa8lp8IVs9rIribY8+kflkf2hNsKqg
WCEOYlnc3kMCrq+U4siyMrobekHAHBBdRLHtJ9ar0kdCIKCjPo/iBJvbW5pM
oSDoeCKL4va/73KtdkIhQqE+heI1P2To9zUMjoW8iKOYg/PXf+lT4dD0ii2c
Ytk0icGG7gggzqf6U/z8jLn3x+pI2NL96U5xUF2mzEZWFLjd/G1PcfXNBQJD
VDRQ1fiZUIwb4So4/i4G3N/6PKSY3kDNSMYuFtKvjKpQLP4tgEfLKA4KRFWu
UKzj2DFsrRYP7s/7TlHsSfPP1/9aAqSWSbBQnBcsJZchnggSsdq/KPG+tz25
ge58Eoy5oFmKDX7uu2x2KRksFfkbKX7EWa1rfCQF5I5ej6PYv+QrF3dyClCb
Emwprlbmm+gRSIWvXb+VKF5evh/pmpYK2Ud5eSmW5a5lwWWmwUheUzkln83K
1wZDBdOB9Uer0//y/45A0PXcdOjV/iJFccdn9dtEkQw4ybm2TakfWx4+jNkF
GdAe5ZdLMT9vfbf2mUwYDHDWofh21bo3Y0kmbHx2oKE466smjWV5FmR+fqFA
qVejXn4t/Bey4WhNxzSl3lHxN74ZrsoGD6U/JhSL1W7IvJXKgf0f6zcp9VFX
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
q3uHDOWXA5YIVBbw/36fCf//95n/B0UVH1c=
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{-1.5, 1.5}, {0., 0.5516313256602998}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{-1.5, 1.5}, {0., 0.5516313256602998}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]], 
          Line[CompressedData["
1:eJw12nc4lf//OHCRjKTMNxKaRpRoqPCUVEZDRkZCqWSTGRKSmb333ntvL5vs
mc05SCnJOKNS+t7nc/1+/3A9rus+59z36zzndZ2jT6zUnlFTUVHFY38o/42K
Q378+0dGKjN90qFx5sC+w3Pq6h8yEuXY1d1DMof2m5l6Dj/JiG1b9bOJmgWc
mq/9sLZBRqek84NEmS3hK9NS+hSejGzMmwLKQq3A2vSCdnkbGc33JHbefWYD
R6tQ0Doio9oX4fuU4m1gZI9yh3ADGa0+TEweGraB87H6EikVZARc/6m/l3sJ
5C4fpsBMMio/ckd+/IQtuJ2cbn7uQ0buJiUuhQz2cNbmKTn1LRnZLlW10yrZ
A65hXWzuDRklP3Yf/utrD/IaNPHqTmTE95PnzzCjA9C+FbWXMyEjteA7cqKc
jvAe5ybMo0JGaN+T0trbryAu/nhYPzMZRcrUBPy55gZ54rGp1Yxk9PbUAdvN
JDeo62AuTd1HRsoZ4RnDf9xg+sevQftdEnJk+5WnW/8GeBSGDvCtk5DweLTD
Qqo7xK+5+ln2kxCD6QTKueYJBR5bMdofSGhhTEt12dETGjhf5Mh3kFDyb7JG
epEnzMqpd3E2kpCeZcm14iNvgTdSmBYVkFAN6YjDf9RekCDz0f3gexKa7E8/
v7n8DgpGVEJ++ZDQQ8OhkYHj3tBg3JK89JaEXObnL8gaecNsaEFTtQsJfX1e
sja+5A1HVjz/GJiRULdXQiL1mg8kBZ11KlEmobtRb6j4uP0hecHX6j4DCSWe
LX4/uBYEhvvpB91pSUjtG0+z8JVgOHbJ50zJHhIqPxxSxOsbDFlB774z/yai
1NyHuM+sIVAk42nW95WInil2rEJFCDTEuxjf6iOi/2pLuSdpw2Bay9JAJpiI
Kjavfrr5OQIS3n5vMg8gotjnwW8vc0WCfrE5X4IPEb3VGjX1UoqExX1mc7/f
EBGDW5/vicJIWK00flhjTUT0Tp8EY5yi4CfbYy1JNSIyibhsmigQA5xD6veE
OYjom6hsTVR1PHAPCE6YsRBRUr/Q5qHteODt29EvOkBEkULfm7+eSYCj3emW
kvuIqCe59ElTdgKINm8HypAJ6PhGssp6YiLIl4T33Z8iIEPNUOOKhGSwChlV
ck4koGzaRLPNrVR4GZQ93BBLQFdUOR9scqaB3XsXnX+RBOTG+CT95NU0cPY9
buIVRECJPz2+nvZKA293W9+gNwS0ckWptowrHRKs2brSHhNQmVX5VrtKBnSr
qiv0niQgbq4UlZ7pLBCJYc1sOEpANGSGm+cZsuH9wjBt0RECOpkhcAp3KRtU
LVW7QjgIqJOZl2U3MhsmA+4oP6AloOH52n5NzRz40nlLFb+8jcyEomUCcblA
LyOtR07fRoE347Y6hAvB1Gun4UvyNiqTmB5NMiyEvt66I9Px28hU/oRnQ3Qh
hOheXmgI30b3Dwl6dO4rAi6ni088326j77wP/Tm/FIFQufiLA0bbSNQp03fy
YQkoCp+0O35sG8WrZ+V43igDPbr1E7p826i0d8DxpFEZWH+qGg/h2UbUcwbR
K+5lEJ2qeGmXdRupfPjc2tZQBivc5r8nabaRE+ujxNUL5eDFWO4e9GkLPe16
LIkXq4CWb3KBv3K2UMuyTs2T81VwpUgva/DsFpIQmAini6uDwvFD4pWnt1B1
39bq6dY6EPjbXhsnuIVmh2bMbb7Wwb7bYv3P+LdQE1Er1+BqPYys/t3eYd5C
k5V1jZ3z9WB6Mvma0PomUmUGvYLTjRCXgJ91L9hEQlzCh87MIfjt/5xNQngT
nXH9ymbd1wpEckakvuAGukEb0PBwpxvaj4Wdb7JYRw0P4+5big7CVdo35aef
rqHIgDeHMv+NQITcpUvXXn9FnVM1lTfZPoJRgvanr8lfUB9R7EvD7CQMZvMx
7IlbQb36kkyd3jNg+L15j13YCpK+p+jyNXgGtiSMfq/4r6ACnY1O+tgZYG/K
/tbnsoIunjm3JpE/A9pj4gMxj1ZQ0AWmKzKDM7BIdT1c/OgKavtcri/EOQsk
HeMjhjmf0MyYVdDd5FngYyo5h6qWUaVky25m0hxYLgvNBhcto6BzrqbTWXPQ
1JDqbZi1jOho9xvSFc/BI4vwmT1Ry+iR2ciqMpqDhAGHdwr2y+ilVIqn08Ic
cIfKTH2QXEbuIU/lLPnmgZ2z132sZAkdpHvT8CFqHp6uXz+dmbOEbnFL1RxK
moeKzoZx+5QltMyXoauaOQ/qjkUi/4UsofUb1bG15fMQNhk6pmO1hDLTysTO
D83DwXhtoQWxJaTmr3iul24BGAVWBlfzFtGJkbu+QTYLMJtA34tLW0RdFewS
Q44LUMh9unMibhFpeabT7ndbAFU264YO/0Xkytgvae6/AFH7fuekmi6ijz/S
N2fTFuDY9wOeOiKL6PqxFknnkQW4Wnfh/IdcPNIZNwx5yIkDpkvaZ5tT8eiD
/sdoFm4czJc7i1TH4lHF6X+G7Ydx4FmIBDL98OjB/S5ZgaM46E5ROuBhgke6
0Xc0S0/jQMPn0YqUMB7NKzw3uCKHA3ONdzE5OTj0GI7+2H6Og9TdOkmRVBzq
D4vyO2KCg485GwP5sTjk27nPU8EMB3J/H9IW++NQF8damL8VDtizJF5WmuNQ
6d9sA7IjDhrJCyqt4jh04ZIGlaYvDngv2u9W2ywgLQ/216ezceDtjztf/2QB
2VI34GlycbAxr2LWpL6ARHxeTkzl4aDd59hk+4UFdOtmnatbEQ4spgZLh3/N
o3b23Lm8Shw0uYo8++Yxj27Fx9qGtuHAsG2hly9sDr3+RPcjdQ4Ht2R+Ppvz
mEPVLf+p3l/AwZnqQ1QJNnMoRlSSYxeHgz95185z359D+aIBY/eWcRATlp7A
dmgOXUqYfT72FQdDj40t6INmUXzwvnEjMg6uUf1g3vKbQeclpXrzmfEg5EyX
W/JqBjldoGZnOoSHQwT+61YmM4haZIjBlAUP859VHdcUZ5AiXREtPzsenAfL
FlboZlASB8HNghsPZUkOJTPvptE+7n2uScfxcExm936HxxQyGI1vNbyIhyEW
GdHYl1NoDs0/eXEJD24rLvssjKaQ2pFJaUspPEwH/6pjvzGF2IOeZNpdwUP4
IuH4U/opFNFCcjWXxcNe329E6uBJpO51boXhJvZ5eiJDH99MIiG1NSoSZsNz
Jnl51pMIuR6wxd3CQ8P0ir6a2iQK27f0tEQJD/Zii12pHJPosv6zMuk7eFgZ
mYyVS5hA3PjyYHoNPERk/2fHHjiBck9f/juNWd71wd0vryeQgrDtQr4mHpJO
jlGHGEyg3ROKDEpaeNByGjRbODaB1gpFT9ro4qH7SKeMW+5HJKPawuJsiIfc
F+X4+qpxtGT7TsbFDA9jT5L5VbLGkcTen6Zi5nigehTwaDpyHLWsqO2fx/zg
vtHUT7tx9JgmqvCKJR6or7ANX5AcR3V9nyrx1njQ3W/bXFw8huwIXU1f7PHw
jtZgVzZ5DAnyWh5964CHkn/K0gNBY6iOdpib1xEP+wjHatYsxlDmlO6YkhN2
XrMjxcKi2OtNeAsinPHAWCSRnJ4ziloS76FVNzxcyOGbk4gZReFzOBfLN9h5
pjEebvUZRdLHpn5sYq6KWozCPR9F7eYy+4jueHjyJizoyMlRNLIuf2rNEw91
qluvo1NHEEuH1u9kbzyYbpfqBcQNo2tb2UunA/EQe3HzqrH/MPogRVfth7n7
lfjh687DiORV7r+C+SRV8dRvnWEkmfrflcQgPOCYCh6Ycg+jYEBfd4PxoHkq
S1UpZgjJvXHhjQzDg5fJp7MnfYeQ3nPG7iXMZQUnDu5xGkL05LHgc+FY/Eqm
99doDaGmihXnHsy9kKIs9N8QOmxwZn0zAg8eZef9mEUHUVw1QxNXNBbfUuW3
OvcPImHPr0QdzNLo3D63bwNop8LzaRxmUu+Zt9/zBtDPQwprXDF4MP8k9LpP
eADp/ksZYYrFgzbXERt/wX40OWyvOxyHnVdS/Fl5un7k5iNUvy8eD2wnedZ/
rfQhRZ/3ZlcxD5z7z8wkqw+t4Kxb0jBfV2F5pniyDxG/BJmZJODhjButzr7j
vUjjGxfNZCIeeOqGor/s7UU6Vd/OUSXhgZYU/7FnpQf1K8bNCGKetZDQCM7r
QX0P+DPsMfs/MrjHJdGDKq5FCu9PxsNn6dobItc+oLqdcCr+FDyMOHl5MR3/
gK5Z0D8FzE0V99rW935Ax1qPaBhgjhJdkSvv7kZCHjbziZgVeNmkpVW7UYn4
s1qOVDyk7JhL3DXoQgk/C2w2Mb+/JGUjfq0LFZFwvPvT8OBoS1PCerwL6XyH
Zycw3/0WKzax0om0W+yHNTH/ne4UMrTsRJH4q5IVmL9whhnLq3YiZ1mVpR7M
Y2qPsk5IdKIsKnUpPOaCnu3jq8QO5BbJM86UjuVDnQD/y9cdiLf027YB5puk
b480DDrQlTKhFVvM5ySqEy5e60AaR2a8fDDT593h2dnbgRYabvYWYq6Kdebw
et+ORAXcI0mY2V6N7Y+Kb0PPrgd8epWBh5//frH8cG5D5dHyd/wxz3vzcynq
tiFeV22jOMw5EaYnfnO1oasB80m1mGVLqGT0o1qRy9lsawLmE5dOXa+2b0UJ
rWUvqDPxwNCkonRIsxUdvWr+3yHMY71Rmq1srUjk73qCCGaTz6KWp0JbkHzG
jpEe5ruWanZvrFtQUpKy2AvM54mOzpP3WlBJ88lKW8y71G3e/swtSIx8Z68/
5gg+neT1gGbUezm1rhyzc6Zb5i2zZnT8U0xYI2YD0Yz8FOVmRBPoJ96FWeTK
j2o1hmYk9eZryxRmt3zGVIsDCNlwaKv/waxUq1nI39eECqSHbfdm4YG9K6V2
2L8J9bjIPmbCnLt4ceQCfRPi3FXNOox5jNuIZpe6ERnb2m1cwpwsWHSwpKUB
9YnXBstiNr3w6/AT9wY0JeRCfQPzP9Xg851/69GwU+yz+5hFfOufBf2sQ+Aw
cOkFZmLkvpdy1XXotlGMrwXm5vT7blv2dcjCg1T2ErMm+hz1YLsWuc1pR7ti
FuiXSKcvq0Wspv1qHpi/Tr8urrOuRYvtVV/fYXYnsXXzrdegncmKsiDMKnsN
xoYKatBs+OnlMMycrHk4T7MaRC8wQ4jCXCAm92vlSzW6RBNZlYR54qm5SPFS
FbpzarG/AHPTnOqlqqwq9B7Mx4sxZz24oNBoUoVgDt9ehtlOcfdR749K9I8Q
+qgG88OWRdORsko0eraHrh6z/JUuxyn7ShRlvRrfiPmQaEjo550KFB344W0r
ZnKGXdJ6UwXKufV6sh3z/BGdfKJHBbrW9peri3J/B4910NBXoKyWqwa9mJW2
y3/ys5cjvw3ZA6OYxc1jaAUnytAtdWLfGGauT66sZ+LKUEYUtetHzCsfb4hK
C5Qh8x99uVOY+++JXL6+VIquXdATnsFc0c18UzmrFHk1rMTOYvasmzDQFi1F
rwme9xYwm0g2mBv8KEGEHw8jcZhVC1JePS8rQZqtTf14zHxJJuF2UiWI6l3q
f8uYGc8kyJFJxej71JzwJ8yT/M90aV8Xoz2DvOIrmO1pyIFH/YoQ1XMmni+Y
FYgo++zBIsTkbblLMetn3xaZyELkKH9xchVzUQ8PUSe1AOkGK1t8w+zasMT8
QrAA8VTLCK9hVi4qEHIozEc9uUszFK+EyuqF1eahSQHvU+uU53tL55ACeeiZ
Jh+i2NN+KLioIxfJVqbc+4GZX+dJW89wDjqr815nA/O68um5Sa0cdOK59yjF
DdIE0spcNuIXf39zE7O2gLcIzdcsFBPUz7WF+RTrPQUW6yzksDfYiWICDZc+
PykTcfw2HqG4lYhzFHPNRC3k6FPbmEM/54Zepc5EH4Ue2VNsOPUyX8k3A1U9
JDRRfKb3aocWcwbq2xNLQ8DcU9T/05YnHdknbLpRHJMSxeqZkob2pnNUUfw8
zEA05FQaapcTXKX4vJfQzaSCVCTP+ZCLiJnGYdOgQCIVsRovX6d42LjuVV1N
CurhJppRnKzzNrxbNgXR1TSGUDwdFaNb6JeMjC0tyih2dBYJ+hCZhAKZJIYp
vru+8bE4KxH9Sildo/jUk2r+qOoEROVeRUvCvDv++oVrdzxioHnBS/G4kkLp
k6k4xHNtTZzigkbG34pfY9EU84vrFHudG5Y/uxODAnd31SnWy4wO4GCKQdyG
o08oluTWH9vhjUbU1/ZZU8wYeOLIolgUMjGvdqF4kerbs27ZSMRiRutNcZ1d
aVHRvQik+/ZAMMWhXxzJEYbhSK72WxTFL/Rk5VxswpDRQF0ixXJDe/0ee4ai
v9ci0inmUugdvhUegj6rhuRQPG91/IKeYjCKJ3YUUByoVdIpZBqIxL4ol1As
DTLaxIAApJ4kWU7xt1M9qy2FfuiRSnglxXHMWi5Bgz5IFudSTfHPOeskQTYv
pHtZuI7iB4X+Lc0P3JHXnrJ6io/HuB5cqbdBH9/0NFA8VMC3oKF2E2Xxf/qf
56ZMilPvvgCj6wv/s2PxHZU1Lhdw+6b+P+vTB1LPKXqAj/PT/70f1WXbheu0
78C0Kr6W4vv3V+44LnkDm9bNGorTTHQa8lp8IVs9rIribY8+kflkf2hNsKqg
WCEOYlnc3kMCrq+U4siyMrobekHAHBBdRLHtJ9ar0kdCIKCjPo/iBJvbW5pM
oSDoeCKL4va/73KtdkIhQqE+heI1P2To9zUMjoW8iKOYg/PXf+lT4dD0ii2c
Ytk0icGG7gggzqf6U/z8jLn3x+pI2NL96U5xUF2mzEZWFLjd/G1PcfXNBQJD
VDRQ1fiZUIwb4So4/i4G3N/6PKSY3kDNSMYuFtKvjKpQLP4tgEfLKA4KRFWu
UKzj2DFsrRYP7s/7TlHsSfPP1/9aAqSWSbBQnBcsJZchnggSsdq/KPG+tz25
ge58Eoy5oFmKDX7uu2x2KRksFfkbKX7EWa1rfCQF5I5ej6PYv+QrF3dyClCb
Emwprlbmm+gRSIWvXb+VKF5evh/pmpYK2Ud5eSmW5a5lwWWmwUheUzkln83K
1wZDBdOB9Uer0//y/45A0PXcdOjV/iJFccdn9dtEkQw4ybm2TakfWx4+jNkF
GdAe5ZdLMT9vfbf2mUwYDHDWofh21bo3Y0kmbHx2oKE466smjWV5FmR+fqFA
qVejXn4t/Bey4WhNxzSl3lHxN74ZrsoGD6U/JhSL1W7IvJXKgf0f6zcp9VFX
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
q3uHDOWXA5YIVBbw/36fCf//95n/B0UVH1c=
           "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{-1.5, 1.5}, {0., 0.5516313256602998}}, 
        "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-1.6620000000000001`, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->All,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.919771454851598*^9, {3.9197714864432755`*^9, 3.9197715793730307`*^9}, {
   3.9197716208655415`*^9, 3.9197716572991676`*^9}, 3.919771724036068*^9, {
   3.9197717988886843`*^9, 3.919771825926403*^9}, 3.919772028544735*^9, 
   3.919784376104021*^9},
 CellLabel->
  "Out[546]=",ExpressionUUID->"ff29af69-5522-4f73-bb0e-e23423024a5b"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.919771448259313*^9, 
  3.9197714482943926`*^9}},ExpressionUUID->"8f952584-6339-4db9-bea4-\
45bcdf5ec058"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"F", "[", "x_", "]"}], ":=", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"Tanh", "[", "x", "]"}]}], ")"}]}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Define", " ", "based", " ", "on", " ", "the", " ", "CDF", " ", "of", " ", 
    "the", " ", "distribution"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dist", "=", 
    RowBox[{"ProbabilityDistribution", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<CDF\>\"", ",", 
        RowBox[{"F", "[", "x", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SeedRandom", "[", "12341", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Histogram", "[", 
      RowBox[{
       RowBox[{"RandomVariate", "[", 
        RowBox[{"dist", ",", "10000"}], "]"}], ",", "Automatic", ",", 
       "\"\<CDF\>\""}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"F", "[", "x", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "4.5"}], ",", "4.5"}], "}"}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.919771662110157*^9, 3.919771662479698*^9}, {
   3.919771714272993*^9, 3.919771717812855*^9}, {3.919771847658711*^9, 
   3.919771911518014*^9}, {3.9197719524185114`*^9, 3.9197719875552397`*^9}, 
   3.9197720523672895`*^9},
 CellLabel->
  "In[547]:=",ExpressionUUID->"dcdf93e0-2653-4f1b-8521-4ca78e10e55b"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.5529999999999999], Thickness[Small]}], {}, 
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.5529999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{-5., 0}, {-4.5, 0.0001}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{23.231893147884136`, 41.049066727842416`}, {
            96.55803153391767, 97.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.0001]& ,
         TagBoxNote->"0.0001"],
        StyleBox["0.0001`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.0001, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{-4.5, 0}, {-4., 0.00030000000000000003`}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{40.549066727842416`, 58.36624030780072}, {
            96.51784460175298, 97.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.00030000000000000003`]& ,
         TagBoxNote->"0.00030000000000000003"],
        StyleBox["0.00030000000000000003`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.00030000000000000003`, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{-4., 0}, {-3.5, 0.001}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{57.86624030780072, 75.68341388775902}, {
            96.3771903391766, 97.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.001]& ,
         TagBoxNote->"0.001"],
        StyleBox["0.001`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.001, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{-3.5, 0}, {-3., 0.0033}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{75.18341388775902, 93.00058746771731}, {
            95.91504061928272, 97.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.0033]& ,
         TagBoxNote->"0.0033"],
        StyleBox["0.0033`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.0033, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{-3., 0}, {-2.5, 0.0074}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{92.50058746771731, 110.31776104767562`}, {
            95.09120850990669, 97.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.0074]& ,
         TagBoxNote->"0.0074"],
        StyleBox["0.0074`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.0074, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{-2.5, 0}, {-2., 0.0193}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{109.81776104767562`, 127.63493462763391`}, {
            92.70008604610796, 97.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.0193]& ,
         TagBoxNote->"0.0193"],
        StyleBox["0.0193`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.0193, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{-2., 0}, {-1.5, 0.0477}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{127.13493462763391`, 144.9521082075922}, {
            86.99354167872276, 97.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.0477]& ,
         TagBoxNote->"0.0477"],
        StyleBox["0.0477`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.0477, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{-1.5, 0}, {-1., 0.11380000000000001`}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{144.4521082075922, 162.2692817875505}, {
            73.71176059829453, 97.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.11380000000000001`]& ,
         TagBoxNote->"0.11380000000000001"],
        StyleBox["0.11380000000000001`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.11380000000000001`, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{-1., 0}, {-0.5, 0.26830000000000004`}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{161.7692817875505, 179.5864553675088}, {
            42.66735550107575, 97.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.26830000000000004`]& ,
         TagBoxNote->"0.26830000000000004"],
        StyleBox["0.26830000000000004`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.26830000000000004`, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{-0.5, 0}, {0., 0.4953}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{179.0864553675088, 
            196.9036289474671}, {-2.9448125058411563`, 97.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.4953]& ,
         TagBoxNote->"0.4953"],
        StyleBox["0.4953`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.4953, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0., 0}, {0.5, 0.7216}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{196.4036289474671, 
            214.2208025274254}, {-48.41632625018168, 97.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.7216]& ,
         TagBoxNote->"0.7216"],
        StyleBox["0.7216`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.7216, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.5, 0}, {1., 0.8779}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{213.7208025274254, 
            231.53797610738368`}, {-79.82241373688261, 97.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.8779]& ,
         TagBoxNote->"0.8779"],
        StyleBox["0.8779`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.8779, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{1., 0}, {1.5, 0.9533}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{231.03797610738368`, 
            248.855149687342}, {-94.97288716296869, 97.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.9533]& ,
         TagBoxNote->"0.9533"],
        StyleBox["0.9533`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.9533, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{1.5, 0}, {2., 0.9816}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{248.355149687342, 
            266.17232326730027`}, {-100.65933806427152`, 97.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.9816]& ,
         TagBoxNote->"0.9816"],
        StyleBox["0.9816`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.9816, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{2., 0}, {2.5, 0.9927}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{265.67232326730027`, 
            283.4894968472586}, {-102.88971279941153`, 97.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.9927]& ,
         TagBoxNote->"0.9927"],
        StyleBox["0.9927`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.9927, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{2.5, 0}, {3., 0.9981000000000001}, "RoundingRadius" -> 
             0]},
           
           ImageSizeCache->{{282.9894968472586, 
            300.8066704272169}, {-103.97475996785802`, 97.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.9981000000000001]& ,
         TagBoxNote->"0.9981000000000001"],
        StyleBox["0.9981000000000001`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.9981000000000001, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{3., 0}, {3.5, 0.9996}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{300.3066704272169, 
            318.1238440071752}, {-104.27616195909313`, 97.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.9996]& ,
         TagBoxNote->"0.9996"],
        StyleBox["0.9996`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.9996, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{3.5, 0}, {4., 0.9999}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{317.6238440071752, 
            335.4410175871335}, {-104.33644235734018`, 97.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.9999]& ,
         TagBoxNote->"0.9999"],
        StyleBox["0.9999`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.9999, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{4., 0}, {4.5, 1.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{334.9410175871335, 
            352.7581911670918}, {-104.3565358234225, 97.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], 
        "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}}, 
   InterpretationBox[{
     TagBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
          Opacity[1.], LineBox[CompressedData["
1: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
CtLNuvP4H/b///+ANp9j3b+K/X/N1UZ1
           "]]},
         Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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
CtLNuvP4H/b///+ANp9j3b+K/X/N1UZ1
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{-4.5, 4.5}, {0., 0.9998766053786907}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{-4.5, 4.5}, {0., 0.9998766053786907}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]], 
          Line[CompressedData["
1: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
CtLNuvP4H/b///+ANp9j3b+K/X/N1UZ1
           "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{-4.5, 4.5}, {0., 0.9998766053786907}}, 
        "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-5.19, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->All,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.9197719122988367`*^9, {3.919771953313135*^9, 3.919771987903886*^9}, {
   3.919772024328112*^9, 3.919772053092887*^9}, 3.9197843800678596`*^9},
 CellLabel->
  "Out[550]=",ExpressionUUID->"3095bafd-f275-4ccd-a7ec-91b86d85da5c"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9197719405185575`*^9, 
  3.9197719405494375`*^9}},ExpressionUUID->"e0c4ff76-6cb1-4edb-8b47-\
41b5c4453959"],

Cell[TextData[{
 "All of these custom distributions can be used wherever any of the built in \
distributions can be used. \n\nYou can also define them based off of survival \
functions or hazard functions instead of CDFs or PDFs\n\n",
 StyleBox["NOTE:",
  FontSize->18,
  FontWeight->"Bold",
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" ",
  FontSize->18,
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["Even though Mathematica won\[CloseCurlyQuote]t throw an error if \
you functions are not properly normalized, you must ensure that they are. I\
\[CloseCurlyQuote]ve noticed that some really weird bugs can occur if you don\
\[CloseCurlyQuote]t normalize it yourself! Some things like RandomVariate \
actually seem to work, but symbolic operations which use the distribution \
will give you the wrong answers if your distribution is not normalized! ",
  FontSize->18,
  FontColor->RGBColor[1, 0, 0]]
}], "Text",
 CellChangeTimes->{{3.9197720634347515`*^9, 3.919772073002185*^9}, {
  3.9197721275014534`*^9, 3.9197721654122195`*^9}, {3.9197724635895777`*^9, 
  3.919772564998493*^9}, {3.919784235081251*^9, 3.9197842767236433`*^9}, {
  3.919784385513935*^9, 3.9197843946599674`*^9}, {3.9197845932632985`*^9, 
  3.9197846489210424`*^9}},ExpressionUUID->"95463d8b-fe4f-4a5e-b77a-\
0b6738e75c6d"],

Cell[TextData[{
 "\tFor definitions based on the PDF this means the total area of your \
function on the domain you specify the distribution should be 1\n\t\ti.e.\t ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", "xmin", "xmax"], 
    RowBox[{
     RowBox[{"PDF", "[", "x", "]"}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "=", "1"}]],ExpressionUUID->
  "f37b26b8-eee8-496b-8991-db2f453e49aa"],
 "  \n\n\tFor definitions based on the CDF the limit of the cdf should \
approach 1\n\t\ti.e.\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Limit]", 
      RowBox[{"x", "->", "xmax"}]], 
     RowBox[{"CDF", "[", "x", "]"}]}], "=", "1"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "73020a70-da90-498f-9cda-823d681140a1"]
}], "Text",
 CellChangeTimes->{{3.919784396568138*^9, 
  3.9197845396611543`*^9}},ExpressionUUID->"7f4f19bf-09c9-43e1-8b7e-\
4c52aad3d470"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 ButtonBox["PDF",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/PDF"],
 " and ",
 ButtonBox["CDF",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/CDF"]
}], "Subsection",
 CellChangeTimes->{{3.919789758600049*^9, 
  3.919789804649448*^9}},ExpressionUUID->"683bfbe7-68c1-41d0-abed-\
7c69e619abda"],

Cell["\<\
If you already have some distribution and you want to grab it\
\[CloseCurlyQuote]s PDF, or CDF you can simply call PDF or CDF on it and tell \
it what variable to use (if you give it a number instead of a variable it \
will return the PDF or CDF evaluated at that variable)\
\>", "Text",
 CellChangeTimes->{{3.919789816291553*^9, 3.919789854435673*^9}, {
  3.919789944696929*^9, 
  3.9197899578334436`*^9}},ExpressionUUID->"ad932db8-4fa7-4071-8726-\
47d553bce069"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"\[Mu]", ",", "\[Sigma]", ",", "x"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PDF", "[", 
  RowBox[{
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.919789856144429*^9, 3.9197898766521187`*^9}},
 CellLabel->
  "In[833]:=",ExpressionUUID->"c2acdf94-ea50-4973-8a50-f9141c8f124f"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"], 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Sigma]", "2"]}]]}]], 
  RowBox[{
   SqrtBox[
    RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Sigma]"}]]], "Output",
 CellChangeTimes->{3.919789878481072*^9},
 CellLabel->
  "Out[834]=",ExpressionUUID->"b6693020-3f39-435e-b51c-9193b5eceaf3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CDF", "[", 
  RowBox[{
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.9197898838275824`*^9, 3.919789884227501*^9}},
 CellLabel->
  "In[835]:=",ExpressionUUID->"41fe88ea-1aa6-4c07-92be-d6dc980cffb7"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"Erfc", "[", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "x"}], "+", "\[Mu]"}], 
    RowBox[{
     SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}]], "Output",
 CellChangeTimes->{3.9197898844414687`*^9},
 CellLabel->
  "Out[835]=",ExpressionUUID->"2c469793-f918-452b-951e-1ceb5d331b7d"]
}, Open  ]],

Cell["\<\
You can also grab Characteristic Functions too if you know what those are\
\>", "Text",
 CellChangeTimes->{{3.9197899672909565`*^9, 
  3.9197899829664965`*^9}},ExpressionUUID->"01135723-d656-4cb5-bda1-\
0813304110d0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CharacteristicFunction", "[", 
  RowBox[{
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.9197898887085752`*^9, 3.9197899369172573`*^9}, 
   3.9197900174748135`*^9},
 CellLabel->
  "In[839]:=",ExpressionUUID->"c6de477a-ae15-4d26-9550-54b22d59d0e2"],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{
   RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Mu]"}], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["t", "2"], " ", 
     SuperscriptBox["\[Sigma]", "2"]}], "2"]}]]], "Output",
 CellChangeTimes->{{3.919789919888035*^9, 3.9197899220451603`*^9}, 
   3.919790017817869*^9},
 CellLabel->
  "Out[839]=",ExpressionUUID->"ff0d9cdc-df4f-4c7f-88a8-1c89f67df762"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 ButtonBox["Probability",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Probability"],
 " and ",
 ButtonBox["NProbability",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/NProbability"]
}], "Subsection",
 CellChangeTimes->{{3.919772261651902*^9, 3.919772282122829*^9}, {
  3.9197729741087437`*^9, 
  3.9197729928814287`*^9}},ExpressionUUID->"268d3438-e97b-45d2-80cd-\
6c57d3fa79d2"],

Cell["\<\
The probability function in Mathematica does exactly what you might expect, \
it tells you the probability of things. 

Here\[CloseCurlyQuote]s how you use it, you give it an inequality or similar \
expression, and you tell it how the variables in that expression are \
distributed. 

Reminder that you can type the \[Distributed] symbol by typing \
\[AliasIndicator]dist\[AliasIndicator] where \[AliasIndicator] represents the \
escape key so: esc dist esc

Here\[CloseCurlyQuote]s an example to find the probability that a normally \
distributed variable is within 1 standard deviation of the mean for instance\
\>", "Text",
 CellChangeTimes->{{3.9197723114243803`*^9, 3.91977234955159*^9}, {
   3.919772666031186*^9, 3.9197727741325207`*^9}, 
   3.9197846789807467`*^9},ExpressionUUID->"49e56e44-22aa-415f-b176-\
59649f6a3811"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Mu]", "-", "\[Sigma]"}], "<", "x", "<", 
    RowBox[{"\[Mu]", "+", "\[Sigma]"}]}], ",", 
   RowBox[{"x", "\[Distributed]", 
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.919772747231372*^9, 3.9197727955340223`*^9}, {
  3.919784712255475*^9, 3.919784719401997*^9}},
 CellLabel->
  "In[554]:=",ExpressionUUID->"a7903dcc-de72-46c7-9436-96d9220151d6"],

Cell[BoxData[
 RowBox[{"Erf", "[", 
  FractionBox["1", 
   SqrtBox["2"]], "]"}]], "Output",
 CellChangeTimes->{
  3.919772795959036*^9, {3.9197847090352488`*^9, 3.9197847213153615`*^9}},
 CellLabel->
  "Out[555]=",ExpressionUUID->"149bf16a-e98c-428e-acd1-973fd9046a41"]
}, Open  ]],

Cell["\<\
And here is the probability that the ratio of two normally distributed \
variables is greater than some value. By default mathematic tries to do this \
symbolically which will take forever for complicated situations like this, so \
we can use NProbability instead to solve this numerically.  \
\>", "Text",
 CellChangeTimes->{{3.9197728055036445`*^9, 3.9197728773953714`*^9}, {
  3.919772936270501*^9, 3.9197729675507364`*^9}, {3.9197730210630646`*^9, 
  3.9197730257458353`*^9}, {3.9197734972263956`*^9, 3.919773515881132*^9}, {
  3.9197735560315075`*^9, 
  3.919773618537755*^9}},ExpressionUUID->"76abd9a7-fcd9-4ce3-8536-\
10befb031fad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NProbability", "[", 
  RowBox[{
   RowBox[{
    FractionBox["x", "y"], ">", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Distributed]", 
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"4", ",", "1"}], "]"}]}], ",", 
     RowBox[{"y", "\[Distributed]", 
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"3", ",", "2"}], "]"}]}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9197728787260947`*^9, 3.919772919356646*^9}, 
   3.919772969636524*^9},
 CellLabel->
  "In[424]:=",ExpressionUUID->"98fc7374-d344-4add-8bc3-ca64bf217874"],

Cell[BoxData["0.247006138756756`"], "Output",
 CellChangeTimes->{3.919772934944766*^9, 3.9197729701191425`*^9},
 CellLabel->
  "Out[424]=",ExpressionUUID->"9a5835ec-15fd-4a9d-86e2-09dd20a08a6d"]
}, Open  ]],

Cell["\<\
NOTE: Despite being done numerically, these are different from Monte Carlo \
Simulations. Mathematica may try to use probability theory to predict the \
result and just use numerical approximations to compute the integrals needed \
to get to this answer. You can tell Mathematica to answer the question using \
a Monte Carlo Simulation in the background. By default Mathematica chooses \
which method to use, and will usually choose a deterministic method if it \
can. \
\>", "Text",
 CellChangeTimes->{{3.919773622336279*^9, 
  3.9197736815162477`*^9}},ExpressionUUID->"c98e8487-c20a-4e6a-8288-\
8128639652c8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"NProbability", "[", 
  RowBox[{
   RowBox[{
    FractionBox["x", "y"], ">", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Distributed]", 
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"4", ",", "1"}], "]"}]}], ",", 
     RowBox[{"y", "\[Distributed]", 
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"3", ",", "2"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"Method", "->", "\"\<NIntegrate\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"NProbability", "[", 
  RowBox[{
   RowBox[{
    FractionBox["x", "y"], ">", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Distributed]", 
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"4", ",", "1"}], "]"}]}], ",", 
     RowBox[{"y", "\[Distributed]", 
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"3", ",", "2"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"Method", "->", "\"\<MonteCarlo\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.919773685411703*^9, 3.919773705257966*^9}, {
  3.9197848837544336`*^9, 3.919784957051839*^9}},
 CellLabel->
  "In[656]:=",ExpressionUUID->"c7526fa8-edbb-4736-8d29-3549182948a6"],

Cell[BoxData["0.247006138756756`"], "Output",
 CellChangeTimes->{{3.919773700983714*^9, 3.9197737102769575`*^9}, {
  3.9197848085740056`*^9, 3.9197848425685635`*^9}, {3.919784878020284*^9, 
  3.919784974288144*^9}, {3.919785012484853*^9, 3.919785015419626*^9}},
 CellLabel->
  "Out[656]=",ExpressionUUID->"f2d6a39a-b0fa-4523-9e65-cbd5abd2c44a"],

Cell[BoxData["0.2474397233201581`"], "Output",
 CellChangeTimes->{{3.919773700983714*^9, 3.9197737102769575`*^9}, {
  3.9197848085740056`*^9, 3.9197848425685635`*^9}, {3.919784878020284*^9, 
  3.919784974288144*^9}, {3.919785012484853*^9, 3.919785015895624*^9}},
 CellLabel->
  "Out[657]=",ExpressionUUID->"52e2c0ac-6699-4f31-8206-a3f991e06792"]
}, Open  ]],

Cell["\<\
Also for those who are curious this is what Mathematica is doing with \
NIntegrate in the background in an example like that, it\[CloseCurlyQuote]s \
probably something like this: \
https://en.wikipedia.org/wiki/Ratio_distribution, but using numerical \
integration\
\>", "Text",
 CellChangeTimes->{{3.91978127640696*^9, 3.9197812930435348`*^9}, {
  3.9197814257481704`*^9, 
  3.919781457193347*^9}},ExpressionUUID->"3d38f2a5-c76c-49b1-babd-\
5213f775a1a2"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 ButtonBox["Expectation",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Expectation"],
 " and ",
 ButtonBox["NExpectation",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/NExpectation"]
}], "Subsection",
 CellChangeTimes->{{3.9197814915600758`*^9, 3.919781501981162*^9}, {
  3.9197816769454126`*^9, 
  3.919781694847998*^9}},ExpressionUUID->"be43e7e9-6cff-4d77-88fb-\
73f7ba4a26d0"],

Cell["\<\
Knowing how likely things are to occur is obviously very useful, but in a lot \
of cases you want to know what the expected value of a certain random \
variable is. In probability, statistical expectation refers to the average \
value you would get if you repeated a statistical process an infinite number \
of times, and is as such referred to as a long-run average 

Finding expected values is very similar to finding probabilities. For \
instance, if we want the expected value of a normally distributed random \
variable we could do the following: \
\>", "Text",
 CellChangeTimes->{{3.9197815034528446`*^9, 
  3.9197817892956457`*^9}},ExpressionUUID->"a23453fa-c8e0-4d37-8096-\
71dd4ede7b4f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expectation", "[", 
  RowBox[{"x", ",", 
   RowBox[{"x", "\[Distributed]", 
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.91978179482788*^9, 3.9197818091379128`*^9}},
 CellLabel->
  "In[438]:=",ExpressionUUID->"32112951-f7a1-4e52-8146-30bad0d1b9a2"],

Cell[BoxData["\[Mu]"], "Output",
 CellChangeTimes->{3.919781810654806*^9},
 CellLabel->
  "Out[438]=",ExpressionUUID->"c00eaaac-85a6-4b35-97f1-d2e1f59a52b7"]
}, Open  ]],

Cell[TextData[{
 "We can see that we always get the mean of the distribution, which is \
expected as the expectation of a random variable is its mean by definition. \
But what if we wanted to know the expected value for ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "2"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "aedc45d0-6b70-41c9-8fb0-b6746860d264"],
 " for instance? "
}], "Text",
 CellChangeTimes->{{3.9197818513940506`*^9, 3.919781895499536*^9}, {
  3.919785061290819*^9, 
  3.919785062729767*^9}},ExpressionUUID->"ceb1f63c-e458-44cf-beaa-\
9f605b159052"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expectation", "[", 
  RowBox[{
   SuperscriptBox["x", "2"], ",", 
   RowBox[{"x", "\[Distributed]", 
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.919781900877225*^9, 3.9197819010234823`*^9}},
 CellLabel->
  "In[658]:=",ExpressionUUID->"2c716f30-923a-4c25-9245-b1fcdb98c1d3"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[Mu]", "2"], "+", 
  SuperscriptBox["\[Sigma]", "2"]}]], "Output",
 CellChangeTimes->{3.919781901441926*^9, 3.9197850642015667`*^9},
 CellLabel->
  "Out[658]=",ExpressionUUID->"2bd49adb-1767-4894-ab14-8f7393491668"]
}, Open  ]],

Cell["\<\
Now we can see the most likely value for the square of a normally distributed \
random variable is a function of the mean and variance of the distribution \
which is pretty cool.\
\>", "Text",
 CellChangeTimes->{{3.919781908726224*^9, 
  3.9197819423390074`*^9}},ExpressionUUID->"3c778fd6-e9c0-4bab-bfc0-\
08720bb13113"],

Cell["\<\
And just like with Probability[] we can ask Mathematica to find this \
numerically instead of symbolically, and we can include expressions of \
multiple random variables:\
\>", "Text",
 CellChangeTimes->{{3.9197819499778605`*^9, 
  3.919781984848256*^9}},ExpressionUUID->"4214b311-d910-43ee-9a7f-\
0d1099684e95"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NExpectation", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["x", "2"], "+", 
      SuperscriptBox["y", "2"]}], ")"}], "2"], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Distributed]", 
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], ",", 
     RowBox[{"y", "\[Distributed]", 
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"5", ",", "2"}], "]"}]}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9197820445565434`*^9, 3.919782106303277*^9}, {
   3.919782165658116*^9, 3.919782186565399*^9}, {3.9197822605013976`*^9, 
   3.919782348503112*^9}, 3.9197823995073147`*^9},
 CellLabel->
  "In[659]:=",ExpressionUUID->"99196df3-0e4c-4134-b65a-19c66e45bf62"],

Cell[BoxData["1636.000045366011`"], "Output",
 CellChangeTimes->{{3.919782116679432*^9, 3.919782188732774*^9}, {
   3.9197822610111084`*^9, 3.9197823489985867`*^9}, 3.919782401857782*^9, 
   3.9197850670287724`*^9},
 CellLabel->
  "Out[659]=",ExpressionUUID->"ab12d2e0-fdae-4d59-8b5e-8978983d035a"]
}, Open  ]],

Cell["Or even using custom distributions like we defined above", "Text",
 CellChangeTimes->{{3.9197824088472576`*^9, 
  3.9197824268141003`*^9}},ExpressionUUID->"005b1939-91ad-4856-87ff-\
a9d734ee5da5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NExpectation", "[", 
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"x", "+", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Distributed]", 
      RowBox[{"ProbabilityDistribution", "[", 
       RowBox[{
        RowBox[{
         FractionBox["1", 
          RowBox[{"2", " ", 
           RowBox[{"Gamma", "[", 
            RowBox[{"5", "/", "4"}], "]"}]}]], 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           SuperscriptBox["x", "4"]}]]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
       "]"}]}], ",", 
     RowBox[{"y", "\[Distributed]", 
      RowBox[{"ProbabilityDistribution", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<CDF\>\"", ",", 
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"Tanh", "[", "y", "]"}]}], ")"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
       "]"}]}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.919782446453833*^9, 3.9197825455565834`*^9}, {
  3.919782694330271*^9, 3.919782705930631*^9}, {3.9197839991962585`*^9, 
  3.919784017177652*^9}, {3.919784184706974*^9, 3.9197841996619663`*^9}, {
  3.9197851015463*^9, 3.919785104169158*^9}},
 CellLabel->
  "In[666]:=",ExpressionUUID->"45039e6a-82db-4b94-a419-65bcec34b96c"],

Cell[BoxData["0.5740939355064696`"], "Output",
 CellChangeTimes->{{3.919782501752085*^9, 3.919782555860324*^9}, {
  3.9197826971222706`*^9, 3.9197827114450755`*^9}, {3.9197840017799625`*^9, 
  3.9197840188508177`*^9}, {3.9197842005450993`*^9, 3.919784208804243*^9}, {
  3.919785069315395*^9, 3.919785114275285*^9}},
 CellLabel->
  "Out[666]=",ExpressionUUID->"9ad7aa1a-d8a1-4b05-bd7b-6a2721beae47"]
}, Open  ]],

Cell["\<\
Btw, doing everything that one line of code does  by hand would probably take \
me about 30 minutes at the very least. \
\>", "Text",
 CellChangeTimes->{
  3.9197827744526176`*^9, {3.9197842099223957`*^9, 
   3.9197842279164357`*^9}},ExpressionUUID->"4782f70d-2913-434e-be9d-\
c05cf6599e85"]
}, Closed]],

Cell[CellGroupData[{

Cell["Finding the standard deviation of distributions", "Subsection",
 CellChangeTimes->{{3.919782786054133*^9, 
  3.919782799501037*^9}},ExpressionUUID->"a433f04b-88e4-401e-a127-\
1082b54275ac"],

Cell[TextData[{
 "Note, that there is no function like Variance or Skew, etc which work like \
Expectation. The reason for this, is that you don\[CloseCurlyQuote]t need one \
as all of these higher moments can be found using the expectation formula. \
This is because the variance of any distribution can be defined as follows: \n\
\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Sigma]", "x"], "2"], "=", " ", 
    RowBox[{
     RowBox[{"\[DoubleStruckCapitalE]", "[", 
      SuperscriptBox["x", "2"], "]"}], " ", "-", " ", 
     SuperscriptBox[
      RowBox[{"\[DoubleStruckCapitalE]", "[", "x", "]"}], "2"]}]}], 
   TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "267f4e3a-66af-457b-a2fa-b3679e69cc01"],
 "           \[DoubleLeftRightArrow]            ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Sigma]", "x"], "=", 
    SqrtBox[
     RowBox[{" ", 
      RowBox[{
       RowBox[{"\[DoubleStruckCapitalE]", "[", 
        SuperscriptBox["x", "2"], "]"}], " ", "-", " ", 
       SuperscriptBox[
        RowBox[{"\[DoubleStruckCapitalE]", "[", "x", "]"}], "2"]}]}]]}], 
   TraditionalForm]],ExpressionUUID->"7d97b6a5-04ee-4375-9f41-3979a57c6f01"],
 "\n\nWhere \[DoubleStruckCapitalE] means \[OpenCurlyDoubleQuote]expected \
value of\[CloseCurlyDoubleQuote] and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "x"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "44cc0f91-135e-403f-9f11-8393693e0c5d"],
 " is the standard deviation of x, and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    SubscriptBox["\[Sigma]", "x"], "2"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b8e6e5d4-e352-42a4-9f6d-1f4edc3c2e9b"],
 " is the variance of x\n\nNote that this formula comes directly from the \
definition of the standard deviation, and just simplifies down to this form. \
Perhaps try doing this for yourself if you\[CloseCurlyQuote]re curious. You \
can even have Mathematica do it for you symbolically.\n\nAnyway, we can also \
verify this formula using normal distributions like this:"
}], "Text",
 CellChangeTimes->{{3.9197828023846416`*^9, 3.919783000499258*^9}, {
  3.9197830328823757`*^9, 3.919783049578798*^9}, {3.9197831605092144`*^9, 
  3.9197831605954943`*^9}, {3.919786090716777*^9, 3.919786134042469*^9}, {
  3.9197861835409083`*^9, 
  3.919786338914646*^9}},ExpressionUUID->"f0c798a2-3f04-408e-a2cd-\
e6d1df7fa181"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"x", ",", "\[Mu]", ",", "\[Sigma]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Expectation", "[", 
   RowBox[{
    SuperscriptBox["x", "2"], ",", 
    RowBox[{"x", "\[Distributed]", 
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}]}]}], "]"}], "-", 
  SuperscriptBox[
   RowBox[{"Expectation", "[", 
    RowBox[{"x", ",", 
     RowBox[{"x", "\[Distributed]", 
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}]}]}], "]"}], "2"]}]}], "Input",
 CellChangeTimes->{{3.9197830222132673`*^9, 3.9197830274282055`*^9}, {
  3.919786141394562*^9, 3.9197861500346274`*^9}},
 CellLabel->
  "In[691]:=",ExpressionUUID->"39b2205f-fbcf-4092-a89f-35af9d7f67eb"],

Cell[BoxData[
 SuperscriptBox["\[Sigma]", "2"]], "Output",
 CellChangeTimes->{
  3.919783029073688*^9, {3.9197861386765375`*^9, 3.9197861521569414`*^9}},
 CellLabel->
  "Out[692]=",ExpressionUUID->"dabce521-94b2-43e1-ad72-6b96d12e96a3"]
}, Open  ]],

Cell["And now let\[CloseCurlyQuote]s find the variance of the example we saw \
before", "Text",
 CellChangeTimes->{{3.919783057701115*^9, 
  3.9197830695393996`*^9}},ExpressionUUID->"7c21a231-d68e-4a65-b0f3-\
4408f5e2cedb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"m1", "=", 
  RowBox[{"NExpectation", "[", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"x", "+", "y"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Distributed]", 
       RowBox[{"ProbabilityDistribution", "[", 
        RowBox[{
         RowBox[{
          FractionBox["1", 
           RowBox[{"2", " ", 
            RowBox[{"Gamma", "[", 
             RowBox[{"5", "/", "4"}], "]"}]}]], 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            SuperscriptBox["x", "4"]}]]}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
        "]"}]}], ",", 
      RowBox[{"y", "\[Distributed]", 
       RowBox[{"ProbabilityDistribution", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<CDF\>\"", ",", 
           RowBox[{
            FractionBox["1", "2"], 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"Tanh", "[", "y", "]"}]}], ")"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", 
           RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
        "]"}]}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"m2", "=", 
  RowBox[{"NExpectation", "[", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"Cos", "[", 
      RowBox[{"x", "+", "y"}], "]"}], "2"], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Distributed]", 
       RowBox[{"ProbabilityDistribution", "[", 
        RowBox[{
         RowBox[{
          FractionBox["1", 
           RowBox[{"2", " ", 
            RowBox[{"Gamma", "[", 
             RowBox[{"5", "/", "4"}], "]"}]}]], 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            SuperscriptBox["x", "4"]}]]}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
        "]"}]}], ",", 
      RowBox[{"y", "\[Distributed]", 
       RowBox[{"ProbabilityDistribution", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<CDF\>\"", ",", 
           RowBox[{
            FractionBox["1", "2"], 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"Tanh", "[", "y", "]"}]}], ")"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", 
           RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
        "]"}]}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Sigma]", "=", 
  SqrtBox[
   RowBox[{"m2", "-", 
    SuperscriptBox["m1", "2"]}]]}]}], "Input",
 CellChangeTimes->{{3.9197830942484665`*^9, 3.919783141465704*^9}, {
  3.919783179071139*^9, 3.9197831988418865`*^9}, {3.9197838711878963`*^9, 
  3.919783873527028*^9}, {3.9197840234939194`*^9, 3.9197840306881237`*^9}, {
  3.919784156243497*^9, 3.9197841688007903`*^9}, {3.9197851303978157`*^9, 
  3.919785169084387*^9}, {3.9197852180462737`*^9, 3.919785220896411*^9}, {
  3.919785797595558*^9, 3.919785802087227*^9}, {3.919785935784198*^9, 
  3.9197859365736675`*^9}},
 CellLabel->
  "In[696]:=",ExpressionUUID->"3d087a17-7e34-44d3-b00f-a78527e11120"],

Cell[BoxData["0.5740939355064696`"], "Output",
 CellChangeTimes->{
  3.9197831238395166`*^9, {3.9197831838391137`*^9, 3.919783203318633*^9}, 
   3.9197838961521196`*^9, {3.919784041161124*^9, 3.9197840436787834`*^9}, 
   3.919784124689737*^9, {3.9197841607250576`*^9, 3.919784171093693*^9}, 
   3.919785095225293*^9, {3.9197851469507813`*^9, 3.9197851740050974`*^9}, 
   3.9197852312441235`*^9, {3.9197858128830757`*^9, 3.9197858304281907`*^9}, 
   3.9197859412820497`*^9, 3.919786160635935*^9, 3.919786362248023*^9},
 CellLabel->
  "Out[696]=",ExpressionUUID->"080ae28c-0d33-4eb9-afbb-cecb01634862"],

Cell[BoxData["0.563929627338545`"], "Output",
 CellChangeTimes->{
  3.9197831238395166`*^9, {3.9197831838391137`*^9, 3.919783203318633*^9}, 
   3.9197838961521196`*^9, {3.919784041161124*^9, 3.9197840436787834`*^9}, 
   3.919784124689737*^9, {3.9197841607250576`*^9, 3.919784171093693*^9}, 
   3.919785095225293*^9, {3.9197851469507813`*^9, 3.9197851740050974`*^9}, 
   3.9197852312441235`*^9, {3.9197858128830757`*^9, 3.9197858304281907`*^9}, 
   3.9197859412820497`*^9, 3.919786160635935*^9, 3.91978636785902*^9},
 CellLabel->
  "Out[697]=",ExpressionUUID->"5d2bbf97-5def-476f-9b75-8f09e4f74661"],

Cell[BoxData["0.48409273962045596`"], "Output",
 CellChangeTimes->{
  3.9197831238395166`*^9, {3.9197831838391137`*^9, 3.919783203318633*^9}, 
   3.9197838961521196`*^9, {3.919784041161124*^9, 3.9197840436787834`*^9}, 
   3.919784124689737*^9, {3.9197841607250576`*^9, 3.919784171093693*^9}, 
   3.919785095225293*^9, {3.9197851469507813`*^9, 3.9197851740050974`*^9}, 
   3.9197852312441235`*^9, {3.9197858128830757`*^9, 3.9197858304281907`*^9}, 
   3.9197859412820497`*^9, 3.919786160635935*^9, 3.9197863678660245`*^9},
 CellLabel->
  "Out[698]=",ExpressionUUID->"de9c8a6d-0bf6-4c83-b41f-e3b847e46b9a"]
}, Open  ]],

Cell[TextData[{
 "And perhaps it\[CloseCurlyQuote]s worth reminding ourselves what this \
example actually represents. \n\nLets say we have some process X which can \
gives us random values. We know that as we sample more and more values from \
X, the resulting histogram starts to look more and more like the function ",
 Cell[BoxData[
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", " ", 
     RowBox[{"Gamma", "[", 
      RowBox[{"5", "/", "4"}], "]"}]}]], 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SuperscriptBox["x", "4"]}]]}]], "Input",
  CellChangeTimes->{{3.9197830942484665`*^9, 3.919783141465704*^9}, {
   3.919783179071139*^9, 3.9197831988418865`*^9}, {3.9197838711878963`*^9, 
   3.919783873527028*^9}, {3.9197840234939194`*^9, 3.9197840306881237`*^9}, {
   3.919784156243497*^9, 3.9197841688007903`*^9}, {3.9197851303978157`*^9, 
   3.919785169084387*^9}, {3.9197852180462737`*^9, 3.919785220896411*^9}},
  ExpressionUUID->"7f1f6f8e-a601-48ee-a5c9-3187933ebca3"],
 "\n\nWe also have some process Y which can give us random values. And when \
we sample more and more values from Y, and plot a cumulative histogram of \
their values, it looks like the function ",
 Cell[BoxData[
  RowBox[{
   FractionBox["1", "2"], 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"Tanh", "[", "y", "]"}]}], ")"}]}]], "Input",
  CellChangeTimes->{{3.9197830942484665`*^9, 3.919783141465704*^9}, {
   3.919783179071139*^9, 3.9197831988418865`*^9}, {3.9197838711878963`*^9, 
   3.919783873527028*^9}, {3.9197840234939194`*^9, 3.9197840306881237`*^9}, {
   3.919784156243497*^9, 3.9197841688007903`*^9}, {3.9197851303978157`*^9, 
   3.919785169084387*^9}, {3.9197852180462737`*^9, 3.919785220896411*^9}},
  ExpressionUUID->"89aee102-77de-4031-952a-11c1c638452c"],
 "\n\nThen, if we were to take a random value from X and a random value from \
Y, and put both of these through the function Cos(x+y) we could expect to see \
a new distribution. If you sampled this distribution (by repeating this \
process of sampling from X and Y and putting them through cos(x+y)) and took \
the mean of that distribution you would get the value ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"m1", " ", "=", " ", "0.574094"}],
    FontWeight->"Bold"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "7f6e1a20-b08b-4991-9ae2-079ed88d866a"],
 ". If you instead took every value you sampled and squared it and then took \
the mean of the squared values, you would get ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"m2", " ", "=", " ", "0.56393"}],
    FontWeight->"Bold"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "bef98592-36c2-4fa7-9b50-fd9969aeb792"],
 ", and if you finally took the standard deviation of the list of samples, \
you would get ",
 Cell[BoxData[
  RowBox[{"\[Sigma]", "=", 
   SqrtBox[
    RowBox[{"m2", "-", 
     SuperscriptBox["m1", "2"]}]]}]], "Input",
  CellChangeTimes->{{3.9197830942484665`*^9, 3.919783141465704*^9}, {
   3.919783179071139*^9, 3.9197831988418865`*^9}, {3.9197838711878963`*^9, 
   3.919783873527028*^9}, {3.9197840234939194`*^9, 3.9197840306881237`*^9}, {
   3.919784156243497*^9, 3.9197841688007903`*^9}, {3.9197851303978157`*^9, 
   3.919785169084387*^9}, {3.9197852180462737`*^9, 3.919785220896411*^9}, {
   3.919785797595558*^9, 3.919785802087227*^9}, {3.919785935784198*^9, 
   3.9197859365736675`*^9}},
  FontWeight->"Bold",ExpressionUUID->"5afce101-84d8-4d32-9ef3-dedc7c7db76a"]
}], "Text",
 CellChangeTimes->{{3.919785236647825*^9, 3.919785717791955*^9}, 
   3.919785818609253*^9, {3.919785967702491*^9, 3.919786080360237*^9}, {
   3.919786394527856*^9, 
   3.919786397956798*^9}},ExpressionUUID->"625bd20d-8ed3-441e-b4c1-\
271c0f01235c"]
}, Closed]],

Cell[CellGroupData[{

Cell["Joint Probability", "Subsection",
 CellChangeTimes->{{3.9197865082874537`*^9, 3.919786511277621*^9}, {
  3.919786636439619*^9, 
  3.919786639491387*^9}},ExpressionUUID->"1590dcc5-2361-4e14-b9bb-\
1f617a5917e2"],

Cell[TextData[{
 "In all of the above examples, it was assumed that any variables used were \
independent of each-other. For instance in the example we just saw, we assume \
that the value we get for x does not influence the value we get for y. But \
what if this isn\[CloseCurlyQuote]t the case? What if x and y represent the \
values two certain probes give us. Maybe x represents the time it takes you \
to drive to work each day, and y represents the time it takes your friend to \
drive in. Obviously x won\[CloseCurlyQuote]t always be the same as y, but if \
x increases, we expect y to also increase and vice versa (assuming you don\
\[CloseCurlyQuote]t drive from completely different directions, and even then \
they could still be correlated due to how traffic works)\n\nIn such an \
example, you would represent x and y with a joint probability distribution. \
In other-words you would have one function f[x,y] not two independent \
functions f[x] and f[y].  \n\nNote that for independent processes \
f[x,y]=f[x]f[y] but for something like the daily commute example f[x,y] \
\[NotEqual] f[x]f[y]\n\nTo represent such a distribution in Mathematica, we \
can once again use ",
 ButtonBox["ProbabilityDistribution",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ProbabilityDistribution"]
}], "Text",
 CellChangeTimes->{{3.9197865194242964`*^9, 3.919786767235113*^9}, {
  3.9197868357533426`*^9, 3.919786842242633*^9}, {3.9197868842432976`*^9, 
  3.919786915599296*^9}, {3.91978702268675*^9, 3.919787142480302*^9}, {
  3.9197871756691437`*^9, 3.919787257270218*^9}, {3.9197872892086687`*^9, 
  3.9197873505450788`*^9}, {3.919787428006241*^9, 
  3.9197874447543774`*^9}},ExpressionUUID->"1d220afc-f12d-4401-bef9-\
93cdce58edcd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dist", " ", "=", " ", 
    RowBox[{"ProbabilityDistribution", "[", 
     RowBox[{
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 FractionBox["2", "5"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "x"}], ")"}]}], "+", 
                RowBox[{
                 FractionBox["1", "5"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "3"}], "+", "y"}], ")"}]}]}], ")"}]}], 
             ")"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               FractionBox["1", "5"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "x"}], ")"}]}], "+", 
              RowBox[{
               FractionBox["3", "5"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", "y"}], ")"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", "y"}], ")"}]}]}], ")"}]}]], 
       RowBox[{"2", " ", 
        SqrtBox["5"], " ", "\[Pi]"}]], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Note", " ", "that", " ", "here", " ", "the", " ", "double", " ", 
    "integral", " ", "of", " ", "the", " ", "function", " ", "must", " ", 
    "always", " ", "be", " ", "1"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubsuperscriptBox["\[Integral]", 
   RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
  RowBox[{
   SubsuperscriptBox["\[Integral]", 
    RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
   RowBox[{
    FractionBox[
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               FractionBox["2", "5"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "x"}], ")"}]}], "+", 
              RowBox[{
               FractionBox["1", "5"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", "y"}], ")"}]}]}], ")"}]}], ")"}]}], 
         "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             FractionBox["1", "5"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "x"}], ")"}]}], "+", 
            RowBox[{
             FractionBox["3", "5"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "3"}], "+", "y"}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", "y"}], ")"}]}]}], ")"}]}]], 
     RowBox[{"2", " ", 
      SqrtBox["5"], " ", "\[Pi]"}]], 
    RowBox[{"\[DifferentialD]", "x"}], 
    RowBox[{"\[DifferentialD]", "y"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.9197874486405277`*^9, 3.9197874915176253`*^9}, {
  3.9197879273695273`*^9, 3.9197879919873*^9}, {3.919788111092193*^9, 
  3.919788112937135*^9}},
 CellLabel->
  "In[738]:=",ExpressionUUID->"d099acbe-1228-4104-9758-e1e2952c2291"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.9197879425491605`*^9, {3.9197879789958067`*^9, 3.919787993755885*^9}, {
   3.9197881146269855`*^9, 3.9197881178435793`*^9}},
 CellLabel->
  "Out[739]=",ExpressionUUID->"5b24c858-ec57-4992-a75e-c0e64d6671ec"]
}, Open  ]],

Cell["\<\
After declaring a distribution like this, we can use it however we want. I \
recommend using Numerical functions though, because these multivariate \
computations get really complex really fast.\
\>", "Text",
 CellChangeTimes->{{3.919787997938223*^9, 3.9197880085322657`*^9}, {
  3.919788152134347*^9, 
  3.9197881852594795`*^9}},ExpressionUUID->"6c7473df-5fee-41e5-b2fb-\
174612606697"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"NProbability", "[", 
  RowBox[{
   RowBox[{"x", ">", "y"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "\[Distributed]", "dist"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"NExpectation", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["y", "2"]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "\[Distributed]", "dist"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.9197880131814985`*^9, 3.919788029149102*^9}, {
  3.919788127562601*^9, 3.9197881492455645`*^9}},
 CellLabel->
  "In[747]:=",ExpressionUUID->"6ebffb7b-19fd-4476-a24f-adfea216fa5b"],

Cell[BoxData["0.22484590565048443`"], "Output",
 CellChangeTimes->{
  3.919788029782319*^9, {3.9197881262521477`*^9, 3.9197881499863405`*^9}, 
   3.919788186569175*^9},
 CellLabel->
  "Out[747]=",ExpressionUUID->"5b0d02a9-bdae-4ef3-8dee-40492683ca1c"],

Cell[BoxData["14.999999967982985`"], "Output",
 CellChangeTimes->{
  3.919788029782319*^9, {3.9197881262521477`*^9, 3.9197881499863405`*^9}, 
   3.919788186658171*^9},
 CellLabel->
  "Out[748]=",ExpressionUUID->"47df86c7-e062-4e59-86c1-0fb6ce52d2f1"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Conditional Probability", "Subsection",
 CellChangeTimes->{{3.9197865082874537`*^9, 3.919786511277621*^9}, {
  3.919786636439619*^9, 3.919786639491387*^9}, {3.9197892798108873`*^9, 
  3.919789289810197*^9}},ExpressionUUID->"d881f140-24fd-4305-88e5-\
a04fb79acf8e"],

Cell[TextData[{
 "What if we want to ask a question like: \[LineSeparator]\[LineSeparator]\
\[OpenCurlyDoubleQuote]What is the value of x ",
 StyleBox["given ",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 "y is....",
 "\[CloseCurlyDoubleQuote]\n\nThis is a conditional probability problem and \
Mathematica can handle using the \[Conditioned] symbol which is typed as \
\[AliasIndicator]cond\[AliasIndicator] (esc cond esc) \n\nHere are some \
examples"
}], "Text",
 CellChangeTimes->{{3.9197893356748013`*^9, 3.919789335824407*^9}, {
  3.919789387487778*^9, 3.9197894693289447`*^9}, {3.919789503283114*^9, 
  3.9197895442466326`*^9}, {3.919789586473166*^9, 
  3.9197895889311094`*^9}},ExpressionUUID->"255a6523-db85-41aa-8c7a-\
a13f17b18e1e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dist", " ", "=", " ", 
   RowBox[{"ProbabilityDistribution", "[", 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                FractionBox["2", "5"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "x"}], ")"}]}], "+", 
               RowBox[{
                FractionBox["1", "5"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "3"}], "+", "y"}], ")"}]}]}], ")"}]}], ")"}]}],
           "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              FractionBox["1", "5"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "x"}], ")"}]}], "+", 
             RowBox[{
              FractionBox["3", "5"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "y"}], ")"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "y"}], ")"}]}]}], ")"}]}]], 
      RowBox[{"2", " ", 
       SqrtBox["5"], " ", "\[Pi]"}]], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"NProbability", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"0", "<", "x", "<", "3"}], "\[Conditioned]", 
    RowBox[{"y", "==", "2"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "\[Distributed]", "dist"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NExpectation", "[", 
   RowBox[{
    RowBox[{"x", "\[Conditioned]", 
     RowBox[{"y", "==", "2"}]}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], "\[Distributed]", "dist"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"NExpectation", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], "\[Conditioned]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "\[Pi]"}], "<", "x", "<", "\[Pi]"}], ")"}]}], ",", 
   RowBox[{"x", "\[Distributed]", 
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"1", ",", "3"}], "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.919789476775786*^9, 3.9197894980510445`*^9}, {
  3.9197895517391305`*^9, 3.9197897052813396`*^9}, {3.9197900930325484`*^9, 
  3.91979019179773*^9}, {3.9197902301679187`*^9, 3.919790262595566*^9}},
 CellLabel->
  "In[882]:=",ExpressionUUID->"6a74f26f-f1a8-4563-9a56-dd22de645926"],

Cell[BoxData["0.6572182888520894`"], "Output",
 CellChangeTimes->{{3.919789563310016*^9, 3.919789567882682*^9}, 
   3.919789600056123*^9, {3.9197896322687426`*^9, 3.919789672827731*^9}, 
   3.9197897059054923`*^9, {3.9197900809335938`*^9, 3.9197900963813457`*^9}, {
   3.919790138988497*^9, 3.9197901924480457`*^9}, {3.919790236450247*^9, 
   3.91979026669375*^9}},
 CellLabel->
  "Out[883]=",ExpressionUUID->"1e6da4ea-b1c0-48ac-93ec-1ef0e8ea81a2"],

Cell[BoxData["1.5000000000012734`"], "Output",
 CellChangeTimes->{{3.919789563310016*^9, 3.919789567882682*^9}, 
   3.919789600056123*^9, {3.9197896322687426`*^9, 3.919789672827731*^9}, 
   3.9197897059054923`*^9, {3.9197900809335938`*^9, 3.9197900963813457`*^9}, {
   3.919790138988497*^9, 3.9197901924480457`*^9}, {3.919790236450247*^9, 
   3.9197902669823465`*^9}},
 CellLabel->
  "Out[884]=",ExpressionUUID->"3e78a820-34f7-4fb5-bc93-095a8f3cbc21"],

Cell[BoxData["0.10595872386787936`"], "Output",
 CellChangeTimes->{{3.919789563310016*^9, 3.919789567882682*^9}, 
   3.919789600056123*^9, {3.9197896322687426`*^9, 3.919789672827731*^9}, 
   3.9197897059054923`*^9, {3.9197900809335938`*^9, 3.9197900963813457`*^9}, {
   3.919790138988497*^9, 3.9197901924480457`*^9}, {3.919790236450247*^9, 
   3.9197902670113506`*^9}},
 CellLabel->
  "Out[885]=",ExpressionUUID->"4acc5574-84ae-43d3-ae03-eff2a98c0716"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.919790194979419*^9, 
  3.919790195533245*^9}},ExpressionUUID->"401bbd15-05dc-473e-b763-\
0aa7c5aa90cc"]
}, Closed]]
}, Closed]],

Cell[TextData[{
 "For more, check out this page: ",
 ButtonBox["Probability & Statistics",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/guide/\
ProbabilityAndStatistics.html"], None},
  ButtonNote->
   "https://reference.wolfram.com/language/guide/ProbabilityAndStatistics.\
html"]
}], "Section",
 CellChangeTimes->{{3.9197903304213524`*^9, 
  3.919790378223607*^9}},ExpressionUUID->"db9cd131-1c09-4cb4-be5e-\
23379b647f72"]
},
WindowSize->{960, 478},
WindowMargins->{{-5.5, Automatic}, {Automatic, -5.5}},
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (July 24, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"e6d4e454-3d55-478a-a2e7-b44e56c0248f"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 170, 3, 67, "Section",ExpressionUUID->"52aa2833-1ea5-427d-ba24-f5644432423d"],
Cell[753, 27, 1178, 19, 196, "Text",ExpressionUUID->"91378474-24ba-4569-8636-cdc4ac05dd56"],
Cell[CellGroupData[{
Cell[1956, 50, 291, 9, 54, "Subsection",ExpressionUUID->"c4ee7e22-0242-43f4-84ef-4e4b27793d5d"],
Cell[2250, 61, 516, 9, 58, "Text",ExpressionUUID->"029fc539-40dc-4989-bb94-4d5dc6a3be22"],
Cell[CellGroupData[{
Cell[2791, 74, 1374, 30, 124, "Input",ExpressionUUID->"fa15ce3a-1fdd-4b6f-a6bd-d0bce1630445"],
Cell[4168, 106, 523, 9, 32, "Output",ExpressionUUID->"7029077d-7e74-4055-bc13-109a967350b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4728, 120, 828, 21, 105, "Input",ExpressionUUID->"f5a364fe-5185-455b-8c7f-d59e813019cd"],
Cell[5559, 143, 331, 7, 32, "Output",ExpressionUUID->"b71328f6-11bd-48ac-a9b2-6c564cb6cfe3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5927, 155, 857, 22, 107, "Input",ExpressionUUID->"56aca9a9-f78d-49d2-a504-a1ab311d1d09"],
Cell[6787, 179, 341, 7, 32, "Output",ExpressionUUID->"0ea7b3f0-67b0-4490-8dea-4f74cc5b13ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7165, 191, 852, 21, 50, "Input",ExpressionUUID->"0e2f72ae-106d-41b9-80a7-fbfd39926a9d"],
Cell[8020, 214, 349, 8, 35, "Output",ExpressionUUID->"963ca7ca-836f-4bdc-af16-f3b6f2ebcdb0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8406, 227, 1361, 32, 106, "Input",ExpressionUUID->"117f7362-1084-4054-ab72-ffa647dff9bc"],
Cell[9770, 261, 3500, 114, 73, "Output",ExpressionUUID->"21427ab2-c6c2-45e1-9dcb-076b7611d1e4"],
Cell[13273, 377, 3604, 122, 117, "Output",ExpressionUUID->"9031b002-d6a5-4f75-9b21-77e202975bbe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16914, 504, 1231, 32, 87, "Input",ExpressionUUID->"67d029c7-a1f7-4e6a-b14d-398b835dbe1c"],
Cell[18148, 538, 3079, 104, 73, "Output",ExpressionUUID->"05b7dbee-8562-4fd2-9302-847e4ba6cc8a"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[21276, 648, 298, 6, 38, "Subsection",ExpressionUUID->"454726fb-869a-4c4c-9e67-85ddefabc34a"],
Cell[21577, 656, 775, 14, 150, "Text",ExpressionUUID->"333f9b89-c638-4a3d-938b-13d1cd12f190"],
Cell[CellGroupData[{
Cell[22377, 674, 480, 10, 48, "Input",ExpressionUUID->"992fddb8-2ba8-4f79-843d-5d27e41d3127"],
Cell[22860, 686, 199, 3, 32, "Output",ExpressionUUID->"0e0c692a-d04a-477c-a7d9-5c611fa1a4fe"]
}, Open  ]],
Cell[23074, 692, 479, 10, 104, "Text",ExpressionUUID->"e772898f-dc8a-4f32-823b-755e65fba94c"],
Cell[CellGroupData[{
Cell[23578, 706, 623, 15, 86, "Input",ExpressionUUID->"61c07358-1ca8-4f16-b4cf-f5f0e0a4256b"],
Cell[24204, 723, 11595, 341, 244, "Output",ExpressionUUID->"c7088086-be03-49fb-b051-e11449dec410"]
}, Open  ]],
Cell[35814, 1067, 685, 13, 127, "Text",ExpressionUUID->"3ae41639-e2c7-4a6d-a157-8c5407305282"],
Cell[CellGroupData[{
Cell[36524, 1084, 657, 17, 67, "Input",ExpressionUUID->"da701743-f150-494c-acc8-1c22bf631118"],
Cell[37184, 1103, 18615, 552, 239, "Output",ExpressionUUID->"648abe52-2959-42e7-acf0-96587f327171"]
}, Open  ]],
Cell[55814, 1658, 932, 16, 150, "Text",ExpressionUUID->"59240dca-c1cd-4b2f-9a26-1381b51dcafa"],
Cell[CellGroupData[{
Cell[56771, 1678, 2727, 69, 262, "Input",ExpressionUUID->"b07f4b0a-c2cc-41b4-baed-23a9a9c1c40f"],
Cell[59501, 1749, 63392, 1074, 239, "Output",ExpressionUUID->"62494769-8417-48d1-822f-ff16a5babb56"]
}, Open  ]],
Cell[122908, 2826, 636, 11, 104, "Text",ExpressionUUID->"5a83bd09-2c3f-493d-b632-9186a9e01c05"],
Cell[CellGroupData[{
Cell[123569, 2841, 1910, 54, 244, "Input",ExpressionUUID->"c9d01d0e-01e6-4865-be28-a0757854398a"],
Cell[125482, 2897, 63221, 1071, 239, "Output",ExpressionUUID->"5618151a-e699-407b-8440-298ac6c74460"]
}, Open  ]],
Cell[188718, 3971, 443, 8, 58, "Text",ExpressionUUID->"f38494ac-6b7e-4ca1-81f5-1e22d4d77606"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[189210, 3985, 218, 4, 53, "Section",ExpressionUUID->"2589084b-a8dd-47c4-a33d-ca4b666dd951"],
Cell[189431, 3991, 381, 7, 58, "Text",ExpressionUUID->"88801404-a728-400b-9e77-eeb64c1e18d3"],
Cell[CellGroupData[{
Cell[189837, 4002, 263, 5, 54, "Subsection",ExpressionUUID->"390c59a7-0282-4b00-994e-1d3cad4275cd"],
Cell[190103, 4009, 418, 8, 35, "Text",ExpressionUUID->"003572a2-d7a1-48f1-a6c2-d39f5bdb4c5c"],
Cell[CellGroupData[{
Cell[190546, 4021, 2037, 53, 231, "Input",ExpressionUUID->"e41d85cc-b3ba-4f02-be81-ab8f1c98afea"],
Cell[192586, 4076, 47752, 815, 243, "Output",ExpressionUUID->"ff29af69-5522-4f73-bb0e-e23423024a5b"]
}, Open  ]],
Cell[240353, 4894, 154, 3, 28, "Input",ExpressionUUID->"8f952584-6339-4db9-bea4-45bcdf5ec058"],
Cell[CellGroupData[{
Cell[240532, 4901, 1856, 50, 218, "Input",ExpressionUUID->"dcdf93e0-2653-4f1b-8521-4ca78e10e55b"],
Cell[242391, 4953, 51810, 1057, 243, "Output",ExpressionUUID->"3095bafd-f275-4ccd-a7ec-91b86d85da5c"]
}, Open  ]],
Cell[294216, 6013, 156, 3, 28, "Input",ExpressionUUID->"e0c4ff76-6cb1-4edb-8b47-41b5c4453959"],
Cell[294375, 6018, 1351, 27, 208, "Text",ExpressionUUID->"95463d8b-fe4f-4a5e-b77a-0b6738e75c6d"],
Cell[295729, 6047, 943, 25, 129, "Text",ExpressionUUID->"7f4f19bf-09c9-43e1-8b7e-4c52aad3d470"]
}, Closed]],
Cell[CellGroupData[{
Cell[296709, 6077, 312, 11, 38, "Subsection",ExpressionUUID->"683bfbe7-68c1-41d0-abed-7c69e619abda"],
Cell[297024, 6090, 474, 9, 58, "Text",ExpressionUUID->"ad932db8-4fa7-4071-8726-47d553bce069"],
Cell[CellGroupData[{
Cell[297523, 6103, 417, 9, 48, "Input",ExpressionUUID->"c2acdf94-ea50-4973-8a50-f9141c8f124f"],
Cell[297943, 6114, 472, 15, 68, "Output",ExpressionUUID->"b6693020-3f39-435e-b51c-9193b5eceaf3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[298452, 6134, 312, 7, 28, "Input",ExpressionUUID->"41fe88ea-1aa6-4c07-92be-d6dc980cffb7"],
Cell[298767, 6143, 348, 11, 51, "Output",ExpressionUUID->"2c469793-f918-452b-951e-1ceb5d331b7d"]
}, Open  ]],
Cell[299130, 6157, 227, 5, 35, "Text",ExpressionUUID->"01135723-d656-4cb5-bda1-0813304110d0"],
Cell[CellGroupData[{
Cell[299382, 6166, 361, 8, 28, "Input",ExpressionUUID->"c6de477a-ae15-4d26-9550-54b22d59d0e2"],
Cell[299746, 6176, 423, 11, 42, "Output",ExpressionUUID->"ff0d9cdc-df4f-4c7f-88a8-1c89f67df762"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[300218, 6193, 399, 12, 38, "Subsection",ExpressionUUID->"268d3438-e97b-45d2-80cd-6c57d3fa79d2"],
Cell[300620, 6207, 840, 18, 173, "Text",ExpressionUUID->"49e56e44-22aa-415f-b176-59649f6a3811"],
Cell[CellGroupData[{
Cell[301485, 6229, 609, 14, 48, "Input",ExpressionUUID->"a7903dcc-de72-46c7-9436-96d9220151d6"],
Cell[302097, 6245, 269, 7, 51, "Output",ExpressionUUID->"149bf16a-e98c-428e-acd1-973fd9046a41"]
}, Open  ]],
Cell[302381, 6255, 649, 11, 81, "Text",ExpressionUUID->"76abd9a7-fcd9-4ce3-8536-10befb031fad"],
Cell[CellGroupData[{
Cell[303055, 6270, 593, 16, 45, "Input",ExpressionUUID->"98fc7374-d344-4add-8bc3-ca64bf217874"],
Cell[303651, 6288, 194, 3, 32, "Output",ExpressionUUID->"9a5835ec-15fd-4a9d-86e2-09dd20a08a6d"]
}, Open  ]],
Cell[303860, 6294, 621, 11, 104, "Text",ExpressionUUID->"c98e8487-c20a-4e6a-8288-8128639652c8"],
Cell[CellGroupData[{
Cell[304506, 6309, 1152, 31, 84, "Input",ExpressionUUID->"c7526fa8-edbb-4736-8d29-3549182948a6"],
Cell[305661, 6342, 344, 5, 32, "Output",ExpressionUUID->"f2d6a39a-b0fa-4523-9e65-cbd5abd2c44a"],
Cell[306008, 6349, 345, 5, 32, "Output",ExpressionUUID->"52e2c0ac-6699-4f31-8206-a3f991e06792"]
}, Open  ]],
Cell[306368, 6357, 467, 10, 58, "Text",ExpressionUUID->"3d38f2a5-c76c-49b1-babd-5213f775a1a2"]
}, Closed]],
Cell[CellGroupData[{
Cell[306872, 6372, 399, 12, 38, "Subsection",ExpressionUUID->"be43e7e9-6cff-4d77-88fb-73f7ba4a26d0"],
Cell[307274, 6386, 706, 13, 150, "Text",ExpressionUUID->"a23453fa-c8e0-4d37-8096-71dd4ede7b4f"],
Cell[CellGroupData[{
Cell[308005, 6403, 358, 8, 28, "Input",ExpressionUUID->"32112951-f7a1-4e52-8146-30bad0d1b9a2"],
Cell[308366, 6413, 157, 3, 32, "Output",ExpressionUUID->"c00eaaac-85a6-4b35-97f1-d2e1f59a52b7"]
}, Open  ]],
Cell[308538, 6419, 594, 14, 58, "Text",ExpressionUUID->"ceb1f63c-e458-44cf-beaa-9f605b159052"],
Cell[CellGroupData[{
Cell[309157, 6437, 384, 9, 31, "Input",ExpressionUUID->"2c716f30-923a-4c25-9245-b1fcdb98c1d3"],
Cell[309544, 6448, 258, 6, 32, "Output",ExpressionUUID->"2bd49adb-1767-4894-ab14-8f7393491668"]
}, Open  ]],
Cell[309817, 6457, 330, 7, 58, "Text",ExpressionUUID->"3c778fd6-e9c0-4bab-bfc0-08720bb13113"],
Cell[310150, 6466, 322, 7, 58, "Text",ExpressionUUID->"4214b311-d910-43ee-9a7f-0d1099684e95"],
Cell[CellGroupData[{
Cell[310497, 6477, 778, 20, 31, "Input",ExpressionUUID->"99196df3-0e4c-4134-b65a-19c66e45bf62"],
Cell[311278, 6499, 298, 5, 32, "Output",ExpressionUUID->"ab12d2e0-fdae-4d59-8b5e-8978983d035a"]
}, Open  ]],
Cell[311591, 6507, 202, 3, 35, "Text",ExpressionUUID->"005b1939-91ad-4856-87ff-a9d734ee5da5"],
Cell[CellGroupData[{
Cell[311818, 6514, 1520, 41, 85, "Input",ExpressionUUID->"45039e6a-82db-4b94-a419-65bcec34b96c"],
Cell[313341, 6557, 398, 6, 32, "Output",ExpressionUUID->"9ad7aa1a-d8a1-4b05-bd7b-6a2721beae47"]
}, Open  ]],
Cell[313754, 6566, 301, 7, 35, "Text",ExpressionUUID->"4782f70d-2913-434e-be9d-c05cf6599e85"]
}, Closed]],
Cell[CellGroupData[{
Cell[314092, 6578, 195, 3, 38, "Subsection",ExpressionUUID->"a433f04b-88e4-401e-a127-1082b54275ac"],
Cell[314290, 6583, 2454, 57, 295, "Text",ExpressionUUID->"f0c798a2-3f04-408e-a2cd-e6d1df7fa181"],
Cell[CellGroupData[{
Cell[316769, 6644, 785, 19, 50, "Input",ExpressionUUID->"39b2205f-fbcf-4092-a89f-35af9d7f67eb"],
Cell[317557, 6665, 236, 5, 32, "Output",ExpressionUUID->"dabce521-94b2-43e1-ad72-6b96d12e96a3"]
}, Open  ]],
Cell[317808, 6673, 223, 4, 35, "Text",ExpressionUUID->"7c21a231-d68e-4a65-b0f3-4408f5e2cedb"],
Cell[CellGroupData[{
Cell[318056, 6681, 3169, 86, 187, "Input",ExpressionUUID->"3d087a17-7e34-44d3-b00f-a78527e11120"],
Cell[321228, 6769, 600, 9, 32, "Output",ExpressionUUID->"080ae28c-0d33-4eb9-afbb-cecb01634862"],
Cell[321831, 6780, 598, 9, 32, "Output",ExpressionUUID->"5d2bbf97-5def-476f-9b75-8f09e4f74661"],
Cell[322432, 6791, 603, 9, 32, "Output",ExpressionUUID->"de9c8a6d-0bf6-4c83-b41f-e3b847e46b9a"]
}, Open  ]],
Cell[323050, 6803, 3752, 76, 322, "Text",ExpressionUUID->"625bd20d-8ed3-441e-b4c1-271c0f01235c"]
}, Closed]],
Cell[CellGroupData[{
Cell[326839, 6884, 216, 4, 38, "Subsection",ExpressionUUID->"1590dcc5-2361-4e14-b9bb-1f617a5917e2"],
Cell[327058, 6890, 1735, 27, 311, "Text",ExpressionUUID->"1d220afc-f12d-4401-bef9-93cdce58edcd"],
Cell[CellGroupData[{
Cell[328818, 6921, 4031, 117, 139, "Input",ExpressionUUID->"d099acbe-1228-4104-9758-e1e2952c2291"],
Cell[332852, 7040, 260, 5, 32, "Output",ExpressionUUID->"5b24c858-ec57-4992-a75e-c0e64d6671ec"]
}, Open  ]],
Cell[333127, 7048, 397, 8, 58, "Text",ExpressionUUID->"6c7473df-5fee-41e5-b2fb-174612606697"],
Cell[CellGroupData[{
Cell[333549, 7060, 669, 20, 50, "Input",ExpressionUUID->"6ebffb7b-19fd-4476-a24f-adfea216fa5b"],
Cell[334221, 7082, 251, 5, 32, "Output",ExpressionUUID->"5b0d02a9-bdae-4ef3-8dee-40492683ca1c"],
Cell[334475, 7089, 250, 5, 32, "Output",ExpressionUUID->"47df86c7-e062-4e59-86c1-0fb6ce52d2f1"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[334774, 7100, 270, 4, 38, "Subsection",ExpressionUUID->"d881f140-24fd-4305-88e5-a04fb79acf8e"],
Cell[335047, 7106, 746, 16, 173, "Text",ExpressionUUID->"255a6523-db85-41aa-8c7a-a13f17b18e1e"],
Cell[CellGroupData[{
Cell[335818, 7126, 3012, 87, 141, "Input",ExpressionUUID->"6a74f26f-f1a8-4563-9a56-dd22de645926"],
Cell[338833, 7215, 448, 7, 32, "Output",ExpressionUUID->"1e6da4ea-b1c0-48ac-93ec-1ef0e8ea81a2"],
Cell[339284, 7224, 451, 7, 32, "Output",ExpressionUUID->"3e78a820-34f7-4fb5-bc93-095a8f3cbc21"],
Cell[339738, 7233, 452, 7, 32, "Output",ExpressionUUID->"4acc5574-84ae-43d3-ae03-eff2a98c0716"]
}, Open  ]],
Cell[340205, 7243, 152, 3, 28, "Input",ExpressionUUID->"401bbd15-05dc-473e-b763-0aa7c5aa90cc"]
}, Closed]]
}, Closed]],
Cell[340384, 7250, 469, 13, 53, "Section",ExpressionUUID->"db9cd131-1c09-4cb4-be5e-23379b647f72"]
}
]
*)

